{"version":3,"sources":["../../node_modules/accoutrement/sass/init/_root.scss","screen.css","../../node_modules/accoutrement/sass/init/_a11y.scss","../../node_modules/accoutrement/sass/init/_forms.scss","../../node_modules/accoutrement/sass/init/_media.scss","../../node_modules/accoutrement/sass/init/_typography.scss","../../node_modules/accoutrement/sass/plugin/type/_helpers.scss","initial/_type.scss","../../node_modules/accoutrement/sass/core/_css-vars.scss","../../node_modules/accoutrement/sass/plugin/type/_fonts.scss","../../node_modules/accoutrement/sass/plugin/color/_contrast.scss","../../node_modules/accoutrement/sass/plugin/type/_a11y.scss","layout/_grid.scss","patterns/_link-lists.scss","../../node_modules/accoutrement/sass/plugin/type/_pseudo-elements.scss","../../node_modules/accoutrement/sass/plugin/layout/_position.scss","patterns/_quotes.scss","../../node_modules/accoutrement/sass/plugin/layout/_queries.scss","patterns/_paging.scss","../../node_modules/accoutrement/sass/plugin/scale/_size.scss","components/_chapters.scss","components/_top-nav.scss","components/_footer.scss"],"names":[],"mappings":"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","file":"screen.css","sourcesContent":["// Root Init\n// =========\n\n\n/// Prevent iOS and IE text size adjust after device orientation change.\n///\n/// - Overflow-style: Edge 12+, Internet Explorer 11-\n/// @group init-root\nhtml {\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n  text-size-adjust: 100%;\n}\n\n\n/// - Android 4.3-\n/// - Internet Explorer 11-\n/// - Windows Phone 8.1+\n/// @group init-root\nmain {\n  display: block;\n}\n\n\n/// - Edge 12+\n/// - Firefox 40+\n/// - Internet Explorer 11-\n/// - Windows Phone 8.1+\n/// @group init-root\ndetails {\n  display: block;\n}\n\n\n/// Internet Explorer 11-\n/// @group init-root\npre {\n  overflow: auto;\n}\n\n\n/// - Internet Explorer 11-\n/// - Windows Phone 8.1+\n/// @group init-root\nprogress {\n  display: inline-block;\n}\n\n\n/// - Firefox 40+\n/// - Internet Explorer 11-\n/// - Windows Phone 8.1+\n/// @group init-root\nsummary {\n  display: block;\n}\n\n\n/// - Android 4.3-\n/// - Internet Explorer 11-\n/// - iOS 7-\n/// - Safari 7-\n/// - Windows Phone 8.1+\n/// @group init-root\ntemplate {\n  display: none;\n}\n\n\n/// Specify the border style, width, and box-sizing of all elements.\n/// @group init-root\n*,\n::before,\n::after {\n  border-style: solid;\n  border-width: 0;\n  box-sizing: border-box;\n}\n\n\n/// Specify the core styles of all elements.\n/// @group init-root\n* {\n  font-size: inherit;\n  line-height: inherit;\n  margin: 0;\n  padding: 0;\n}\n\n\n/// Specify the border styling of tables.\n/// @group init-root\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n","@charset \"UTF-8\";\nhtml {\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n  text-size-adjust: 100%;\n}\n\nmain {\n  display: block;\n}\n\ndetails {\n  display: block;\n}\n\npre {\n  overflow: auto;\n}\n\nprogress {\n  display: inline-block;\n}\n\nsummary {\n  display: block;\n}\n\ntemplate {\n  display: none;\n}\n\n*,\n::before,\n::after {\n  border-style: solid;\n  border-width: 0;\n  box-sizing: border-box;\n}\n\n* {\n  font-size: inherit;\n  line-height: inherit;\n  margin: 0;\n  padding: 0;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\naudio :not([controls]) {\n  display: none;\n}\n\n[aria-busy=true] {\n  cursor: progress;\n}\n\n[aria-controls] {\n  cursor: pointer;\n}\n\n[aria-disabled] {\n  cursor: default;\n}\n\n[hidden] {\n  display: none;\n}\n\nbutton {\n  overflow: visible;\n}\n\ninput {\n  border-radius: 0;\n  line-height: normal;\n}\n\nbutton,\n[type=button],\n[type=reset],\n[type=submit] {\n  appearance: button;\n  cursor: pointer;\n}\nbutton::-moz-focus-inner,\n[type=button]::-moz-focus-inner,\n[type=reset]::-moz-focus-inner,\n[type=submit]::-moz-focus-inner {\n  border: 0 none !important;\n  padding: 0 !important;\n}\n\n[type=checkbox],\n[type=radio] {\n  box-sizing: border-box;\n  padding: 0;\n}\n\n[type=number] {\n  width: auto;\n}\n\n[type=search] {\n  appearance: textfield;\n}\n\nbutton,\ninput,\nselect,\ntextarea {\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n}\n\ntextarea {\n  overflow: auto;\n  resize: vertical;\n}\n\nimg {\n  border: 0;\n}\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  max-width: 100%;\n  vertical-align: middle;\n}\n\na {\n  background-color: transparent;\n}\na:active, a:hover {\n  outline: 0;\n}\n\nabbr[title] {\n  border-bottom: 1px dotted;\n}\n\nb,\nstrong {\n  font-weight: bold;\n}\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace;\n  font-size: inherit;\n}\n\ndfn {\n  font-style: italic;\n}\n\nnav ol,\nnav ul {\n  list-style: none;\n}\n\nsmall {\n  font-size: 0.75em;\n}\n\nsub,\nsup {\n  font-size: 0.75em;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  top: -0.5em;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\n@font-face {\n  font-family: \"system\";\n  font-style: normal;\n  font-weight: 300;\n  src: local(\".SFNSText-Light\"), local(\".HelveticaNeueDeskInterface-Light\"), local(\".LucidaGrandeUI\"), local(\"Ubuntu Light\"), local(\"Segoe UI Light\"), local(\"Roboto-Light\"), local(\"DroidSans\"), local(\"Tahoma\");\n}\n@font-face {\n  font-family: \"lato\";\n  font-style: normal;\n  font-weight: 300;\n  src: url(\"../fonts/lato-light-webfont.woff2\") format(\"woff2\"), url(\"../fonts/lato-light-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"lato\";\n  font-style: normal;\n  font-weight: normal;\n  src: url(\"../fonts/lato-regular-webfont.woff2\") format(\"woff2\"), url(\"../fonts/lato-regular-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"lato\";\n  font-style: italic;\n  font-weight: normal;\n  src: url(\"../fonts/lato-italic-webfont.woff2\") format(\"woff2\"), url(\"../fonts/lato-italic-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"lato\";\n  font-style: normal;\n  font-weight: bold;\n  src: url(\"../fonts/lato-bold-webfont.woff2\") format(\"woff2\"), url(\"../fonts/lato-bold-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"lato\";\n  font-style: italic;\n  font-weight: bold;\n  src: url(\"../fonts/lato-bolditalic-webfont.woff2\") format(\"woff2\"), url(\"../fonts/lato-bolditalic-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"open\";\n  font-style: normal;\n  font-weight: 300;\n  src: url(\"../fonts/opensans-light-webfont.woff2\") format(\"woff2\"), url(\"../fonts/opensans-light-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"open\";\n  font-style: normal;\n  font-weight: normal;\n  src: url(\"../fonts/opensans-regular-webfont.woff2\") format(\"woff2\"), url(\"../fonts/opensans-regular-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"open\";\n  font-style: italic;\n  font-weight: normal;\n  src: url(\"../fonts/opensans-italic-webfont.woff2\") format(\"woff2\"), url(\"../fonts/opensans-italic-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"open\";\n  font-style: normal;\n  font-weight: bold;\n  src: url(\"../fonts/opensans-bold-webfont.woff2\") format(\"woff2\"), url(\"../fonts/opensans-bold-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"open\";\n  font-style: italic;\n  font-weight: bold;\n  src: url(\"../fonts/opensans-bolditalic-webfont.woff2\") format(\"woff2\"), url(\"../fonts/opensans-bolditalic-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"slab\";\n  font-style: normal;\n  font-weight: normal;\n  src: url(\"../fonts/enriqueta-regular-webfont.woff2\") format(\"woff2\"), url(\"../fonts/enriqueta-regular-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"slab\";\n  font-style: normal;\n  font-weight: bold;\n  src: url(\"../fonts/enriqueta-bold-webfont.woff2\") format(\"woff2\"), url(\"../fonts/enriqueta-bold-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"script\";\n  font-style: normal;\n  font-weight: normal;\n  src: url(\"../fonts/kaushanscript-regular-webfont.woff2\") format(\"woff2\"), url(\"../fonts/kaushanscript-regular-webfont.woff\") format(\"woff\");\n}\n:root {\n  --color-contrast-light: #fff;\n  --color-contrast-dark: #261f1f;\n  --color-background:var(--color-contrast-light, #fff);\n  --color-text:var(--color-contrast-dark, #261f1f);\n  --color-text-light: #735e5e;\n  --color-border: #958585;\n  --color-border-light: #d8d2d2;\n  --color-action: #d10300;\n  --color-action-hover: #5f1615;\n  --color-accent: #d6b361;\n  --color-accent-light: #f8f2e3;\n  --color-quote: #e4ce99;\n  --color-verse: #efd3c2;\n  --color-active: #f9e1e0;\n  font-family: open, system, system-ui, sans-serif;\n  background-color: var(--color-background, #fff);\n  color: var(--color-contrast-dark, #261f1f);\n  font-size: calc(16px + 0.25vw);\n  line-height: 1.6;\n}\n\nh1,\nh2,\nh3 {\n  font-family: slab, serif;\n  line-height: 1.25;\n}\n\nh1 {\n  font-size: calc(1.2649110641rem + 0.75vw);\n}\n\nh2 {\n  font-size: 1.2649110641rem;\n}\n\nh3 {\n  font-size: 1.0605105612rem;\n}\n\np {\n  margin-bottom: 1.6rem;\n}\n\n.page-title {\n  font-family: slab, serif;\n  font-weight: normal;\n  margin-bottom: 1.6rem;\n  text-transform: uppercase;\n}\n\na:link, a:visited {\n  color: var(--color-text, #261f1f);\n  text-decoration: none;\n}\na:hover, a:focus, a:active {\n  color: var(--color-action, #d10300);\n}\n\n.is-hidden {\n  clip: rect(1px, 1px, 1px, 1px);\n  clip-path: inset(1px 1px 1px 1px);\n  height: 1px;\n  overflow: hidden;\n  pointer-events: none;\n  position: absolute;\n  width: 1px;\n}\n\n[data-layout=grid] {\n  display: grid;\n  grid-template-rows: min-content 1fr min-content;\n  margin: 0 auto;\n  min-height: 100vh;\n  padding: 0 3.2rem 0.4rem;\n}\n\n[data-layout=header] {\n  margin-top: 3.2rem;\n}\n\n[data-layout=header],\n[data-layout=main],\n[data-layout=footer] {\n  max-width: 42rem;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n}\n\n.link-list {\n  list-style-position: inside;\n  margin-bottom: 1.6rem;\n}\nnav .link-list {\n  list-style-type: decimal;\n}\n\n.link-list-intro {\n  display: block;\n}\n\n.link-list-item {\n  font-family: open, system, system-ui, sans-serif;\n  font-size: 0.790569415rem;\n  margin-bottom: 0.8rem;\n  padding: 0.4rem 0.8rem;\n  position: relative;\n}\n.link-list-item:visited {\n  color: #735e5e;\n}\n.link-list-item:hover, .link-list-item:focus, .link-list-item:active {\n  background-color: #f9e1e0;\n  color: #d10300;\n}\n\n[data-location=\"Wu Wei\"] [data-active=\"Wu Wei\"] a:link,\n[data-location=\"Wu Wei\"] [data-active=\"Wu Wei\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"Wu Wei\"] [data-active=\"Wu Wei\"] a:link::before,\n[data-location=\"Wu Wei\"] [data-active=\"Wu Wei\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"Wu Wei\"] [data-active=\"Wu Wei\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"Wu Wei\"] [data-active=\"Wu Wei\"]:hover, [data-location=\"Wu Wei\"] [data-active=\"Wu Wei\"]:focus, [data-location=\"Wu Wei\"] [data-active=\"Wu Wei\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=Non-being] [data-active=Non-being] a:link,\n[data-location=Non-being] [data-active=Non-being] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=Non-being] [data-active=Non-being] a:link::before,\n[data-location=Non-being] [data-active=Non-being] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=Non-being] [data-active=Non-being] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=Non-being] [data-active=Non-being]:hover, [data-location=Non-being] [data-active=Non-being]:focus, [data-location=Non-being] [data-active=Non-being]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"No Name\"] [data-active=\"No Name\"] a:link,\n[data-location=\"No Name\"] [data-active=\"No Name\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"No Name\"] [data-active=\"No Name\"] a:link::before,\n[data-location=\"No Name\"] [data-active=\"No Name\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"No Name\"] [data-active=\"No Name\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"No Name\"] [data-active=\"No Name\"]:hover, [data-location=\"No Name\"] [data-active=\"No Name\"]:focus, [data-location=\"No Name\"] [data-active=\"No Name\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=Laissez-faire] [data-active=Laissez-faire] a:link,\n[data-location=Laissez-faire] [data-active=Laissez-faire] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=Laissez-faire] [data-active=Laissez-faire] a:link::before,\n[data-location=Laissez-faire] [data-active=Laissez-faire] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=Laissez-faire] [data-active=Laissez-faire] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=Laissez-faire] [data-active=Laissez-faire]:hover, [data-location=Laissez-faire] [data-active=Laissez-faire]:focus, [data-location=Laissez-faire] [data-active=Laissez-faire]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"Compatible Opposites\"] [data-active=\"Compatible Opposites\"] a:link,\n[data-location=\"Compatible Opposites\"] [data-active=\"Compatible Opposites\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"Compatible Opposites\"] [data-active=\"Compatible Opposites\"] a:link::before,\n[data-location=\"Compatible Opposites\"] [data-active=\"Compatible Opposites\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"Compatible Opposites\"] [data-active=\"Compatible Opposites\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"Compatible Opposites\"] [data-active=\"Compatible Opposites\"]:hover, [data-location=\"Compatible Opposites\"] [data-active=\"Compatible Opposites\"]:focus, [data-location=\"Compatible Opposites\"] [data-active=\"Compatible Opposites\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"Profit and Thieves\"] [data-active=\"Profit and Thieves\"] a:link,\n[data-location=\"Profit and Thieves\"] [data-active=\"Profit and Thieves\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"Profit and Thieves\"] [data-active=\"Profit and Thieves\"] a:link::before,\n[data-location=\"Profit and Thieves\"] [data-active=\"Profit and Thieves\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"Profit and Thieves\"] [data-active=\"Profit and Thieves\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"Profit and Thieves\"] [data-active=\"Profit and Thieves\"]:hover, [data-location=\"Profit and Thieves\"] [data-active=\"Profit and Thieves\"]:focus, [data-location=\"Profit and Thieves\"] [data-active=\"Profit and Thieves\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"The Common Good\"] [data-active=\"The Common Good\"] a:link,\n[data-location=\"The Common Good\"] [data-active=\"The Common Good\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"The Common Good\"] [data-active=\"The Common Good\"] a:link::before,\n[data-location=\"The Common Good\"] [data-active=\"The Common Good\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"The Common Good\"] [data-active=\"The Common Good\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"The Common Good\"] [data-active=\"The Common Good\"]:hover, [data-location=\"The Common Good\"] [data-active=\"The Common Good\"]:focus, [data-location=\"The Common Good\"] [data-active=\"The Common Good\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"See the World as Yourself\"] [data-active=\"See the World as Yourself\"] a:link,\n[data-location=\"See the World as Yourself\"] [data-active=\"See the World as Yourself\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"See the World as Yourself\"] [data-active=\"See the World as Yourself\"] a:link::before,\n[data-location=\"See the World as Yourself\"] [data-active=\"See the World as Yourself\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"See the World as Yourself\"] [data-active=\"See the World as Yourself\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"See the World as Yourself\"] [data-active=\"See the World as Yourself\"]:hover, [data-location=\"See the World as Yourself\"] [data-active=\"See the World as Yourself\"]:focus, [data-location=\"See the World as Yourself\"] [data-active=\"See the World as Yourself\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"Know Your Limitations\"] [data-active=\"Know Your Limitations\"] a:link,\n[data-location=\"Know Your Limitations\"] [data-active=\"Know Your Limitations\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"Know Your Limitations\"] [data-active=\"Know Your Limitations\"] a:link::before,\n[data-location=\"Know Your Limitations\"] [data-active=\"Know Your Limitations\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"Know Your Limitations\"] [data-active=\"Know Your Limitations\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"Know Your Limitations\"] [data-active=\"Know Your Limitations\"]:hover, [data-location=\"Know Your Limitations\"] [data-active=\"Know Your Limitations\"]:focus, [data-location=\"Know Your Limitations\"] [data-active=\"Know Your Limitations\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"A Time for Everything\"] [data-active=\"A Time for Everything\"] a:link,\n[data-location=\"A Time for Everything\"] [data-active=\"A Time for Everything\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"A Time for Everything\"] [data-active=\"A Time for Everything\"] a:link::before,\n[data-location=\"A Time for Everything\"] [data-active=\"A Time for Everything\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"A Time for Everything\"] [data-active=\"A Time for Everything\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"A Time for Everything\"] [data-active=\"A Time for Everything\"]:hover, [data-location=\"A Time for Everything\"] [data-active=\"A Time for Everything\"]:focus, [data-location=\"A Time for Everything\"] [data-active=\"A Time for Everything\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"Approval and Pride\"] [data-active=\"Approval and Pride\"] a:link,\n[data-location=\"Approval and Pride\"] [data-active=\"Approval and Pride\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"Approval and Pride\"] [data-active=\"Approval and Pride\"] a:link::before,\n[data-location=\"Approval and Pride\"] [data-active=\"Approval and Pride\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"Approval and Pride\"] [data-active=\"Approval and Pride\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"Approval and Pride\"] [data-active=\"Approval and Pride\"]:hover, [data-location=\"Approval and Pride\"] [data-active=\"Approval and Pride\"]:focus, [data-location=\"Approval and Pride\"] [data-active=\"Approval and Pride\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"The Straight Pat\"] [data-active=\"The Straight Pat\"] a:link,\n[data-location=\"The Straight Pat\"] [data-active=\"The Straight Pat\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"The Straight Pat\"] [data-active=\"The Straight Pat\"] a:link::before,\n[data-location=\"The Straight Pat\"] [data-active=\"The Straight Pat\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"The Straight Pat\"] [data-active=\"The Straight Pat\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"The Straight Pat\"] [data-active=\"The Straight Pat\"]:hover, [data-location=\"The Straight Pat\"] [data-active=\"The Straight Pat\"]:focus, [data-location=\"The Straight Pat\"] [data-active=\"The Straight Pat\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"The Way It Is\"] [data-active=\"The Way It Is\"] a:link,\n[data-location=\"The Way It Is\"] [data-active=\"The Way It Is\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"The Way It Is\"] [data-active=\"The Way It Is\"] a:link::before,\n[data-location=\"The Way It Is\"] [data-active=\"The Way It Is\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"The Way It Is\"] [data-active=\"The Way It Is\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"The Way It Is\"] [data-active=\"The Way It Is\"]:hover, [data-location=\"The Way It Is\"] [data-active=\"The Way It Is\"]:focus, [data-location=\"The Way It Is\"] [data-active=\"The Way It Is\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"To Laugh or Not To Laugh\"] [data-active=\"To Laugh or Not To Laugh\"] a:link,\n[data-location=\"To Laugh or Not To Laugh\"] [data-active=\"To Laugh or Not To Laugh\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"To Laugh or Not To Laugh\"] [data-active=\"To Laugh or Not To Laugh\"] a:link::before,\n[data-location=\"To Laugh or Not To Laugh\"] [data-active=\"To Laugh or Not To Laugh\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"To Laugh or Not To Laugh\"] [data-active=\"To Laugh or Not To Laugh\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"To Laugh or Not To Laugh\"] [data-active=\"To Laugh or Not To Laugh\"]:hover, [data-location=\"To Laugh or Not To Laugh\"] [data-active=\"To Laugh or Not To Laugh\"]:focus, [data-location=\"To Laugh or Not To Laugh\"] [data-active=\"To Laugh or Not To Laugh\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"Simply Be Yourself\"] [data-active=\"Simply Be Yourself\"] a:link,\n[data-location=\"Simply Be Yourself\"] [data-active=\"Simply Be Yourself\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"Simply Be Yourself\"] [data-active=\"Simply Be Yourself\"] a:link::before,\n[data-location=\"Simply Be Yourself\"] [data-active=\"Simply Be Yourself\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"Simply Be Yourself\"] [data-active=\"Simply Be Yourself\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"Simply Be Yourself\"] [data-active=\"Simply Be Yourself\"]:hover, [data-location=\"Simply Be Yourself\"] [data-active=\"Simply Be Yourself\"]:focus, [data-location=\"Simply Be Yourself\"] [data-active=\"Simply Be Yourself\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"A Good Man’s Job\"] [data-active=\"A Good Man’s Job\"] a:link,\n[data-location=\"A Good Man’s Job\"] [data-active=\"A Good Man’s Job\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"A Good Man’s Job\"] [data-active=\"A Good Man’s Job\"] a:link::before,\n[data-location=\"A Good Man’s Job\"] [data-active=\"A Good Man’s Job\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"A Good Man’s Job\"] [data-active=\"A Good Man’s Job\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"A Good Man’s Job\"] [data-active=\"A Good Man’s Job\"]:hover, [data-location=\"A Good Man’s Job\"] [data-active=\"A Good Man’s Job\"]:focus, [data-location=\"A Good Man’s Job\"] [data-active=\"A Good Man’s Job\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"The Uncarved Block\"] [data-active=\"The Uncarved Block\"] a:link,\n[data-location=\"The Uncarved Block\"] [data-active=\"The Uncarved Block\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"The Uncarved Block\"] [data-active=\"The Uncarved Block\"] a:link::before,\n[data-location=\"The Uncarved Block\"] [data-active=\"The Uncarved Block\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"The Uncarved Block\"] [data-active=\"The Uncarved Block\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"The Uncarved Block\"] [data-active=\"The Uncarved Block\"]:hover, [data-location=\"The Uncarved Block\"] [data-active=\"The Uncarved Block\"]:focus, [data-location=\"The Uncarved Block\"] [data-active=\"The Uncarved Block\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"Master Yourself\"] [data-active=\"Master Yourself\"] a:link,\n[data-location=\"Master Yourself\"] [data-active=\"Master Yourself\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"Master Yourself\"] [data-active=\"Master Yourself\"] a:link::before,\n[data-location=\"Master Yourself\"] [data-active=\"Master Yourself\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"Master Yourself\"] [data-active=\"Master Yourself\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"Master Yourself\"] [data-active=\"Master Yourself\"]:hover, [data-location=\"Master Yourself\"] [data-active=\"Master Yourself\"]:focus, [data-location=\"Master Yourself\"] [data-active=\"Master Yourself\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"Know How to Yield\"] [data-active=\"Know How to Yield\"] a:link,\n[data-location=\"Know How to Yield\"] [data-active=\"Know How to Yield\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"Know How to Yield\"] [data-active=\"Know How to Yield\"] a:link::before,\n[data-location=\"Know How to Yield\"] [data-active=\"Know How to Yield\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"Know How to Yield\"] [data-active=\"Know How to Yield\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"Know How to Yield\"] [data-active=\"Know How to Yield\"]:hover, [data-location=\"Know How to Yield\"] [data-active=\"Know How to Yield\"]:focus, [data-location=\"Know How to Yield\"] [data-active=\"Know How to Yield\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"Failure and Opportunity\"] [data-active=\"Failure and Opportunity\"] a:link,\n[data-location=\"Failure and Opportunity\"] [data-active=\"Failure and Opportunity\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"Failure and Opportunity\"] [data-active=\"Failure and Opportunity\"] a:link::before,\n[data-location=\"Failure and Opportunity\"] [data-active=\"Failure and Opportunity\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"Failure and Opportunity\"] [data-active=\"Failure and Opportunity\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"Failure and Opportunity\"] [data-active=\"Failure and Opportunity\"]:hover, [data-location=\"Failure and Opportunity\"] [data-active=\"Failure and Opportunity\"]:focus, [data-location=\"Failure and Opportunity\"] [data-active=\"Failure and Opportunity\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=non-Tao] [data-active=non-Tao] a:link,\n[data-location=non-Tao] [data-active=non-Tao] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=non-Tao] [data-active=non-Tao] a:link::before,\n[data-location=non-Tao] [data-active=non-Tao] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=non-Tao] [data-active=non-Tao] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=non-Tao] [data-active=non-Tao]:hover, [data-location=non-Tao] [data-active=non-Tao]:focus, [data-location=non-Tao] [data-active=non-Tao]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=Forgiveness] [data-active=Forgiveness] a:link,\n[data-location=Forgiveness] [data-active=Forgiveness] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=Forgiveness] [data-active=Forgiveness] a:link::before,\n[data-location=Forgiveness] [data-active=Forgiveness] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=Forgiveness] [data-active=Forgiveness] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=Forgiveness] [data-active=Forgiveness]:hover, [data-location=Forgiveness] [data-active=Forgiveness]:focus, [data-location=Forgiveness] [data-active=Forgiveness]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"Good and Evil\"] [data-active=\"Good and Evil\"] a:link,\n[data-location=\"Good and Evil\"] [data-active=\"Good and Evil\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"Good and Evil\"] [data-active=\"Good and Evil\"] a:link::before,\n[data-location=\"Good and Evil\"] [data-active=\"Good and Evil\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"Good and Evil\"] [data-active=\"Good and Evil\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"Good and Evil\"] [data-active=\"Good and Evil\"]:hover, [data-location=\"Good and Evil\"] [data-active=\"Good and Evil\"]:focus, [data-location=\"Good and Evil\"] [data-active=\"Good and Evil\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"Not Knowing\"] [data-active=\"Not Knowing\"] a:link,\n[data-location=\"Not Knowing\"] [data-active=\"Not Knowing\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"Not Knowing\"] [data-active=\"Not Knowing\"] a:link::before,\n[data-location=\"Not Knowing\"] [data-active=\"Not Knowing\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"Not Knowing\"] [data-active=\"Not Knowing\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"Not Knowing\"] [data-active=\"Not Knowing\"]:hover, [data-location=\"Not Knowing\"] [data-active=\"Not Knowing\"]:focus, [data-location=\"Not Knowing\"] [data-active=\"Not Knowing\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"All Things Change\"] [data-active=\"All Things Change\"] a:link,\n[data-location=\"All Things Change\"] [data-active=\"All Things Change\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"All Things Change\"] [data-active=\"All Things Change\"] a:link::before,\n[data-location=\"All Things Change\"] [data-active=\"All Things Change\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"All Things Change\"] [data-active=\"All Things Change\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"All Things Change\"] [data-active=\"All Things Change\"]:hover, [data-location=\"All Things Change\"] [data-active=\"All Things Change\"]:focus, [data-location=\"All Things Change\"] [data-active=\"All Things Change\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"Nothing Left Undone\"] [data-active=\"Nothing Left Undone\"] a:link,\n[data-location=\"Nothing Left Undone\"] [data-active=\"Nothing Left Undone\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"Nothing Left Undone\"] [data-active=\"Nothing Left Undone\"] a:link::before,\n[data-location=\"Nothing Left Undone\"] [data-active=\"Nothing Left Undone\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"Nothing Left Undone\"] [data-active=\"Nothing Left Undone\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"Nothing Left Undone\"] [data-active=\"Nothing Left Undone\"]:hover, [data-location=\"Nothing Left Undone\"] [data-active=\"Nothing Left Undone\"]:focus, [data-location=\"Nothing Left Undone\"] [data-active=\"Nothing Left Undone\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"Passing Judgement\"] [data-active=\"Passing Judgement\"] a:link,\n[data-location=\"Passing Judgement\"] [data-active=\"Passing Judgement\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"Passing Judgement\"] [data-active=\"Passing Judgement\"] a:link::before,\n[data-location=\"Passing Judgement\"] [data-active=\"Passing Judgement\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"Passing Judgement\"] [data-active=\"Passing Judgement\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"Passing Judgement\"] [data-active=\"Passing Judgement\"]:hover, [data-location=\"Passing Judgement\"] [data-active=\"Passing Judgement\"]:focus, [data-location=\"Passing Judgement\"] [data-active=\"Passing Judgement\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"The Soft Dissolves the Hard\"] [data-active=\"The Soft Dissolves the Hard\"] a:link,\n[data-location=\"The Soft Dissolves the Hard\"] [data-active=\"The Soft Dissolves the Hard\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"The Soft Dissolves the Hard\"] [data-active=\"The Soft Dissolves the Hard\"] a:link::before,\n[data-location=\"The Soft Dissolves the Hard\"] [data-active=\"The Soft Dissolves the Hard\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"The Soft Dissolves the Hard\"] [data-active=\"The Soft Dissolves the Hard\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"The Soft Dissolves the Hard\"] [data-active=\"The Soft Dissolves the Hard\"]:hover, [data-location=\"The Soft Dissolves the Hard\"] [data-active=\"The Soft Dissolves the Hard\"]:focus, [data-location=\"The Soft Dissolves the Hard\"] [data-active=\"The Soft Dissolves the Hard\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"Peace and Violence\"] [data-active=\"Peace and Violence\"] a:link,\n[data-location=\"Peace and Violence\"] [data-active=\"Peace and Violence\"] a:visited {\n  color: #5f1615;\n  font-weight: bold;\n}\n[data-location=\"Peace and Violence\"] [data-active=\"Peace and Violence\"] a:link::before,\n[data-location=\"Peace and Violence\"] [data-active=\"Peace and Violence\"] a:visited::before {\n  content: \"-\";\n  bottom: -100%;\n  left: -0.4rem;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"Peace and Violence\"] [data-active=\"Peace and Violence\"] a:visited {\n  color: #735e5e;\n  font-weight: bold;\n}\n[data-location=\"Peace and Violence\"] [data-active=\"Peace and Violence\"]:hover, [data-location=\"Peace and Violence\"] [data-active=\"Peace and Violence\"]:focus, [data-location=\"Peace and Violence\"] [data-active=\"Peace and Violence\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-quote] {\n  font-family: slab, serif;\n  font-size: 1.0605105612rem;\n  margin-bottom: calc(3.2rem + 4vmin);\n  position: relative;\n}\n[data-quote] p:last-of-type {\n  margin-bottom: 0.8rem;\n}\n[data-quote] footer {\n  font-family: open, system, system-ui, sans-serif;\n  font-size: 0.790569415rem;\n  text-transform: uppercase;\n}\n\n[data-icon=quote] {\n  height: 1.875rem;\n  position: absolute;\n  transform: translate(-2.5rem, 10%);\n  width: 1.875rem;\n}\n@media (min-width: 63rem) {\n  [data-icon=quote] {\n    height: 2.5rem;\n    transform: translate(-3.3rem, 10%);\n    width: 2.5rem;\n  }\n}\n\n.quote-box {\n  fill: none;\n  stroke-width: 4;\n}\n[data-quote=quote] .quote-box {\n  stroke: #e4ce99;\n}\n[data-quote=verse] .quote-box {\n  stroke: #efd3c2;\n}\n\n[data-quote=quote] .quote-mark {\n  fill: #e4ce99;\n}\n[data-quote=verse] .quote-mark {\n  fill: #efd3c2;\n}\n\n.paging {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-bottom: 1.6rem;\n}\n\n.paging-link {\n  font-family: slab, serif;\n  column-gap: 0.8rem;\n  display: grid;\n  flex: 1 0 auto;\n  font-size: 0.889139705rem;\n  margin-bottom: 0.8rem;\n}\n\n.next {\n  grid-template-columns: 1fr auto;\n  text-align: right;\n}\n.next [data-icon] {\n  background-color: #261f1f;\n  grid-column: 2;\n  transform: scaleX(-1);\n}\n.next [data-icon] .icon-pointing {\n  fill: #fff;\n}\n.next [data-icon] .icon-square {\n  fill: #261f1f;\n}\n.next:hover [data-icon], .next:focus [data-icon], .next:active [data-icon] {\n  background-color: #d10300;\n}\n.next:hover [data-icon] .icon-square, .next:focus [data-icon] .icon-square, .next:active [data-icon] .icon-square {\n  fill: #d10300;\n}\n\n.previous {\n  grid-template-columns: auto 1fr;\n}\n.previous:hover [data-icon], .previous:focus [data-icon], .previous:active [data-icon] {\n  fill: #d10300;\n}\n\n.paging-chapter-number {\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n[data-icon=paging] {\n  height: 2.5rem;\n  width: 2.5rem;\n  grid-row: 1/3;\n}\n\n.chapter-number {\n  font-family: slab, serif;\n  text-transform: uppercase;\n}\n\n.chapter-title {\n  font-family: script, cursive;\n  font-size: calc(1.2649110641rem + 6vw);\n  margin-bottom: calc(3.2rem + 4vmin);\n  text-align: center;\n}\n\n.ending-mark {\n  font-family: script, cursive;\n  display: block;\n  font-size: 4em;\n  line-height: 1;\n  transform: translate(-0.4rem, -70%);\n}\n\n[data-layout=top-nav] {\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n  background-color: #fff;\n  border-bottom: 1px solid #d8d2d2;\n  display: flex;\n  justify-content: space-between;\n  padding: 0.2rem 1.6rem;\n  z-index: 1;\n}\n\n.site-title {\n  font-family: script, cursive;\n  font-size: 0.790569415rem;\n  font-weight: normal;\n}\n.site-title em {\n  font-family: slab, serif;\n  font-style: normal;\n  padding-left: 0.2rem;\n}\n\n[data-icon=nav],\n[data-icon=close] {\n  height: 1em;\n  width: 1em;\n}\n\n[data-layout=nav-panel] {\n  bottom: 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n  align-items: stretch;\n  border-left: 1px solid #d8d2d2;\n  height: 100%;\n  max-width: 15em;\n  overflow-y: auto;\n  width: 100%;\n  z-index: 2;\n}\n[data-layout=nav-panel][aria-expanded=true] {\n  transform: translateX(0);\n}\n\n.nav-header {\n  display: flex;\n  justify-content: space-between;\n  padding-top: 0.2rem;\n  padding-bottom: 0.2rem;\n}\n\n.nav-title {\n  font-size: 0.790569415rem;\n  text-transform: uppercase;\n  text-align: center;\n  width: 100%;\n}\n\n[data-layout=nav-inner] {\n  background-color: #fff;\n  display: flex;\n  flex-direction: column;\n  padding: 1.6rem 0 0.8rem;\n}\n\n[data-layout=footer] {\n  font-size: 0.790569415rem;\n  padding-bottom: 0.2rem;\n  padding-top: 0.2rem;\n}\n[data-layout=footer]::before {\n  content: \"\";\n  border-top: 1px solid #d8d2d2;\n  display: block;\n  position: absolute;\n  left: 0;\n  right: 0;\n}\n[data-layout=footer] p {\n  margin-bottom: 0;\n  padding-top: 0.4rem;\n}","// Accessibility Init\n// ==================\n\n\n/// Chrome 44-, iOS 8+, Safari 9+\n/// @group init-a11y\naudio {\n  :not([controls]) {\n    display: none;\n  }\n}\n\n\n/// Specify the progress cursor of updating elements.\n/// @group init-a11y\n[aria-busy='true'] {\n  cursor: progress;\n}\n\n\n/// Specify the pointer cursor of trigger elements.\n/// @group init-a11y\n[aria-controls] {\n  cursor: pointer;\n}\n\n\n/// Specify the unstyled cursor of disabled,\n/// not-editable, or otherwise inoperable elements.\n/// @group init-a11y\n[aria-disabled] {\n  cursor: default;\n}\n\n\n/// Internet Explorer 10-\n/// @group init-a11y\n[hidden] {\n  display: none;\n}\n","// Forms Init\n// ==========\n\n\n/// Internet Explorer 11-\n/// @group init-forms\nbutton {\n  overflow: visible;\n}\n\n\n/// - Border-radius: iOS 8+ |\n/// - Line-height: Firefox 4+\n/// @group init-forms\ninput {\n  border-radius: 0;\n  line-height: normal;\n}\n\n\n// stylelint-disable declaration-no-important\n/// Appearance, cursors, and inner-focus\n/// for buttons and button-like inputs.\n///\n/// - Appearance: iOS 8+\n/// @group init-forms\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  appearance: button;\n  cursor: pointer;\n\n  &::-moz-focus-inner {\n    border: 0 none !important;\n    padding: 0 !important;\n  }\n}\n// stylelint-enable\n\n\n/// Address box sizing set to `content-box` in IE 8/9/10.\n/// Remove excess padding in IE 8/9/10.\n/// @group init-forms\n[type='checkbox'],\n[type='radio'] {\n  box-sizing: border-box;\n  padding: 0;\n}\n\n\n/// Firefox 36+\n/// @group init-forms\n[type='number'] {\n  width: auto;\n}\n\n\n/// Chrome 45+, Safari 9+\n/// @group init-forms\n[type='search'] {\n  appearance: textfield;\n}\n\n\n/// Specify the background-color,\n/// and the inherited color/font of form elements.\n/// @group init-forms\nbutton,\ninput,\nselect,\ntextarea {\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n}\n\n\n/// Remove default vertical scrollbar in IE 8/9/10/11,\n/// and specify the resizability of textareas.\n/// @group init-forms\ntextarea {\n  overflow: auto;\n  resize: vertical;\n}\n","// Media Init\n// ==========\n\n\n/// Remove border when inside `a` element in IE 8/9/10.\n/// @group init-media\nimg {\n  border: 0;\n}\n\n\n/// Internet Explorer 11-\n/// @group init-media\nsvg {\n  &:not(:root) {\n    overflow: hidden;\n  }\n}\n\n\n/// Specify the alignment of media elements.\n/// @group init-media\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  max-width: 100%;\n  vertical-align: middle;\n}\n","// Typography Init\n// ===============\n\n\n/// Remove the gray background color from active links in IE 10.\n/// Improve readability of focused elements\n/// when they are also in an active/hover state.\n/// @group init-type\na {\n  background-color: transparent;\n\n  &:active,\n  &:hover {\n    outline: 0;\n  }\n}\n\n\n/// Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n/// @group init-type\nabbr {\n  &[title] {\n    border-bottom: 1px dotted;\n  }\n}\n\n\n/// Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n/// @group init-type\nb,\nstrong {\n  font-weight: bold;\n}\n\n\n/// Specify the font family of code elements.\n/// @group init-type\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace;\n  font-size: inherit;\n}\n\n\n/// Address styling not present in Safari and Chrome.\n/// @group init-type\ndfn {\n  font-style: italic;\n}\n\n\n/// Remove list style of nav lists.\n/// @group init-type\nnav {\n  ol,\n  ul {\n    list-style: none;\n  }\n}\n\n\n/// All browsers…\n/// @group init-type\nsmall {\n  font-size: 0.75em;\n}\n\n\n/// Prevent `sub` and `sup` affecting `line-height` in all browsers.\n/// @group init-type\nsub,\nsup {\n  font-size: 0.75em;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\n\n/// Move super-script up.\n/// @group init-type\nsup {\n  top: -0.5em;\n}\n\n\n/// Move sub-script down.\n/// @group init-type\nsub {\n  bottom: -0.25em;\n}\n","/// # Internal WebFont Helpers\n/// These internal tools are not safe for public use --\n/// but we've documented the logic for transparency,\n/// and to encourage contributions.\n///\n/// @access private\n/// @group type-helpers\n\n\n// Font Style Options\n// ------------------\n/// A constant list of valid font-style settings\n/// (not including `normal`, which is also a valid weight).\n/// @access private\n/// @group type-helpers\n$_a_FONT-STYLES: (\n  'italic',\n  'oblique',\n);\n\n\n// Font Weight Options\n// -------------------\n/// A constant list of valid font-weight settings\n/// (not including `normal`, which is also a valid style).\n/// @access private\n/// @group type-helpers\n$_a_FONT-WEIGHTS: (\n  '100',\n  '200',\n  '300',\n  '400',\n  '500',\n  '600',\n  '700',\n  '800',\n  '900',\n  'bold',\n  'bolder',\n  'lighter',\n);\n\n\n// Font Weight Options\n// -------------------\n/// A constant map of valid font formats,\n/// with their file extension and full `format()` name.\n/// The order given here will also be used in defining font-face src order.\n/// @access private\n/// @group type-helpers\n$_a_FONT-FORMATS: (\n  'local': null,\n  'eot': 'embedded-opentype',\n  'woff2': 'woff2',\n  'woff': 'woff',\n  'ttf': 'truetype',\n  'otf': 'opentype',\n  'svg': 'svg',\n  'svgz': 'svg',\n);\n\n\n// stylelint-disable function-url-quotes\n// Font URL\n// --------\n/// Interpolate a font path and format-type\n/// to create the proper font-src import URL.\n/// This private function does not prepend any global `$font-path`,\n/// leaving that to the public [`font-url()`][font-url] function.\n///\n/// [font-url]: fonts.html#function--font-url\n///\n/// @since type-4.0.0 -\n/// - NEW: Added to format font-paths correctly,\n///   with file extension and suffix.\n///\n/// @access private\n/// @group type-helpers\n///\n/// @param {string} $path -\n///   The base path for this font and format.\n///   If no file extension is included,\n///   we add one based on the format desired.\n///   Local and base64 font names & URI's are returned without any change.\n/// @param {string} $format -\n///   Short-form of the format to import, e.g. `woff` or `eot`.\n/// @param {string} $svgid -\n///   SVG fragment-identifier to append on svg fonts.\n///   The initial `#` character is optional,\n///   and will be added when missing.\n/// @param {boolean} $iefix -\n///   Optionally append an `?#iefix` suffix to `eot` fonts.\n/// @return {string} -\n///   Font-format URL for importing.\n@function _a_font-url(\n  $path,\n  $format,\n  $svgid: null,\n  $iefix: false\n) {\n  $suffix: '';\n\n  // some formats need no adjustments\n  @if ($format == 'local') or str-index($path, 'data:') {\n    @return $path;\n  }\n\n  // add file format when needed\n  $ext: '.' + $format;\n  $ext: if(str-index($path, $ext), '', $ext);\n\n  // add svgid when needed\n  @if str-index($format, 'svg') and ($svgid) and (not str-index($path, '#')) {\n    $suffix: if(str-index($svgid, '#'), $svgid, '#' + $svgid);\n  }\n\n  // add iefix when needed\n  @if str-index($format, 'eot') and ($iefix) and  (not str-index($path, '?')) {\n    $suffix: '?#iefix';\n  }\n\n  // compile and return\n  @return $path + $ext + $suffix;\n}\n// stylelint-enable\n\n\n// Font Src\n// --------\n/// Get the font `src` value for a given font path and format,\n/// including both `url()` and `format()`.\n/// This also sorts formats,\n/// organizing them into the proper output order for browser-compatability.\n///\n/// @since type-4.0.0 -\n/// - BREAKING: No longer accepts the `$format` parameter.\n///\n/// @access private\n/// @group type-helpers\n///\n/// @param {string | map} $path -\n///   Path to the font files (leaving off the file format indicator),\n///   or data-uri for font-src.\n/// @param {string} $format -\n///   Short-form (e.g. 'eot' or 'otf') font-format to import.\n/// @param {string} $suffix [null] -\n///   SVG or EOT-iefix suffix to be added to font url.\n/// @return {list} -\n///   CSS-ready `url() format()` combination for font-face `src` output.\n@function _a_font-src(\n  $path,\n  $format\n) {\n  $format-name: map-get($_a_FONT-FORMATS, $format);\n  $format-name: if($format-name, format($format-name), '');\n\n  // stylelint-disable-next-line function-url-quotes\n  $path: _a_font-url($path, $format, $iefix: true);\n  @return font-url($path) $format-name;\n}\n\n\n// Font Src List\n// -------------\n/// Build a `src` list\n/// for one `@font-face` declaration block.\n///\n/// @since type-4.0.0 -\n/// - NEW: Added to sort and compile src lists,\n///   with local() options and proper format order.\n///\n/// @access private\n/// @group type-helpers\n///\n/// @param {map} $data -\n///   Normalized map of format/url pairs to import.\n/// @return {list} -\n///   Compiled list of `url() format()` pairs,\n///   ready to apply in the `src` property.\n@function _a_font-src-list(\n  $data\n) {\n  $src: ();\n\n  // Use best-practice format order\n  @each $format in map-keys($_a_FONT-FORMATS) {\n    $url: map-get($data, $format);\n\n    @if $url {\n      $item: ();\n\n      @if ($format == 'local') {\n        @each $name in $url {\n          $li: local($name);\n          $item: append($item, $li, 'comma');\n        }\n      } @else {\n        $li: _a_font-src($url, $format);\n        $item: append($item, $li, 'comma');\n      }\n\n      $src: join($src, $item, 'comma');\n    }\n  }\n\n\n  @return $src;\n}\n\n\n// Font Get Variants\n// -----------------\n/// Extract all the variant key/data pairs,\n/// and return a filtered font-map including only font-variants.\n///\n/// @since 0.1.0 -\n/// - NEW: Supports `'bold italic'` weight/style syntax\n///   in addition to `('bold', 'italic')`\n/// @since type-4.0.0 -\n/// - NEW: Added to extract variant-data from a font-map\n///\n/// @access private\n/// @group type-helpers\n///\n/// @param {map} $font -\n///   A map of all the data for a single font.\n/// @return {map} -\n///   Only the variants provided in the given font-map.\n@function _a_font-get-variants(\n  $font\n) {\n  $var-options: join($_a_FONT-STYLES, $_a_FONT-WEIGHTS);\n  $var-options: append($var-options, 'normal');\n  $variants: ();\n\n  @each $key, $value in $font {\n    // get the first setting, and make sure it's a string…\n    $first: '#{nth($key, 1)}';\n    $first: if(str-index($first, ' '), nth(_a_split($first, ' '), 1), $first);\n\n    // if it's a variant, add it to the list…\n    @if index($var-options, $first) {\n      $variants: map-merge($variants, ($key: $value));\n    }\n  }\n\n  @return $variants;\n}\n\n\n// Import Font-Face [mixin]\n// ------------------------\n/// Compile provided font-variant data into a\n/// CSS `@font-face` import.\n///\n/// @access private\n/// @group type-helpers\n/// @example scss\n///   @include _a_import-font-face(\n///     $name: 'Franklin Gothic',\n///     $weight: 'normal',\n///     $style: 'normal',\n///     $data: (\n///       'local': 'Franklin Gothic' ('franklin-gothic'),\n///       'woff2': 'path/to/franklin-bolditalic-font.woff2',\n///       'ttf': 'path/to/franklin-bolditalic-font.ttf',\n///     )\n///   );\n///\n/// @param {string} $name -\n///   The font name.\n/// @param {string} $weight -\n///   The font-weight property,\n///   e.g. `bold` or `300`.\n/// @param {string} $style -\n///   The font-style property,\n///   e.g. `normal` or `italic`.\n/// @param {map} $data -\n///   Path to the font files (leaving off the file-format extension),\n///   or map of format/path pairs.\n/// @param {list | null} <key>.unicode-range -\n///   Optionally import only specific unicode ranges.\n///   See [MDN unicode-range documentation][unicode] for details.\n///\n///   [unicode]: https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/unicode-range\n/// @output `@font-face` CSS-block for importing a given font variant.\n/// @throws When a generic variant-path is provided\n///   without formats for interpolation.\n@mixin _a_import-font-face(\n  $name,\n  $weight,\n  $style,\n  $data,\n  $unicode: null\n) {\n  // Special handling of eot with local or data\n  $eot: map-get($data, 'eot');\n  $local: map-get($data, 'local');\n  $double: false;\n\n  @if $eot {\n    $eot: _a_font-url($eot, 'eot');\n    $eot: font-url($eot);\n\n    @if (not str-index($eot, 'data:')) {\n      @each $format, $url in $data {\n        $has-data: (($format != 'local') and str-index($url, 'data:'));\n\n        @if ($format == 'local') or $has-data {\n          $double: true;\n        }\n      }\n    }\n  }\n\n  // Format values for CSS\n  $name: quote($name);\n  $style: unquote($style);\n  $weight: unquote($weight);\n\n  @if $unicode {\n    $new: ();\n\n    @each $code in $unicode {\n      $new: append($new, unquote($code), 'comma');\n    }\n\n    $unicode: $new;\n  }\n\n  // Output…\n  @if $double {\n    $data: map-remove($data, 'eot');\n\n    // ie-only\n    @font-face {\n      font-family: $name;\n      font-style: $style;\n      font-weight: $weight;\n      src: $eot;\n      unicode-range: $unicode;\n    }\n\n    // everything else\n    @font-face {\n      font-family: $name;\n      font-style: $style;\n      font-weight: $weight;\n      src: _a_font-src-list($data);\n      unicode-range: $unicode;\n    }\n  } @else {\n    // combined output\n    @font-face {\n      font-family: $name;\n      font-style: $style;\n      font-weight: $weight;\n      src: $eot;\n      src: _a_font-src-list($data);\n      unicode-range: $unicode;\n    }\n  }\n}\n","// Type\n// ====\n\n@include import-webfonts;\n\n:root {\n  @include colors--();\n  @include font-family('open');\n  @include var-contrasted('background');\n  font-size: size('responsive');\n  line-height: ratio('text-ratio');\n}\n\nh1,\nh2,\nh3 {\n  @include font-family('slab');\n  line-height: 1.25;\n}\n\nh1 {\n  font-size: size('xlarge');\n}\n\nh2 {\n  font-size: size('large');\n}\n\nh3 {\n  font-size: size('medium');\n}\n\np {\n  margin-bottom: size('gutter');\n}\n\n.page-title {\n  @include font-family('slab');\n  font-weight: normal;\n  margin-bottom: size('gutter');\n  text-transform: uppercase;\n}\n\n// Links\n// -----\n\na {\n  #{$link} {\n    color: var-color('text');\n    text-decoration: none;\n  }\n\n  #{$focus} {\n    color: var-color('action');\n  }\n}\n\n// Special\n// -------\n\n.is-hidden {\n  @include is-hidden;\n}\n","/// # Tokens » CSS Variables\n/// *aka \"Custom Properties\"*\n///\n/// CSS variables are a useful way to manage\n/// values that might change in relation to the DOM –\n/// something that Sass variables cannot do.\n/// In many cases,\n/// we find it helpful to manage variables in Sass,\n/// and output CSS properties as-needed.\n/// These tools help integrate Accoutrement map values\n/// with CSS variables\n/// to keep that relationship intact.\n///\n/// The Core feature provides generic variable logic,\n/// while each plugin provides specialized shortcuts\n/// for maintaining:\n/// - [time](animate-time-vars.html) variables\n/// - [easing](animate-ease-vars.html) variables\n/// - [change](animate-change-vars.html) variables\n/// - [color](color-vars.html), variables\n/// - [scale](scale-vars.html) variables\n/// - [font](type-font-vars.html) variables\n///\n/// Some of the use-cases covered here\n/// can be written more simply in pure CSS.\n/// but these tools provide two main advantages:\n/// - Core logic allows plugins to build additional shortcuts\n/// - Explicit relationships make code more meaningful\n/// @group core-vars\n\n\n// Var Name\n// --------\n/// Formats a token name as a CSS variable (custom property),\n/// with optional prefix\n///\n/// @since 2.0.0 -\n/// - NEW: Initial release\n///\n/// @access private\n///\n/// @param {string} $name -\n///   The name of the token to be used as a variable\n/// @param {string | null} $prefix [null] -\n///   Optional prefix added to the token name\n@function _a_var-name(\n  $name,\n  $prefix: null\n) {\n  $string: unquote('--#{$prefix}#{$name}');\n  $string: _a_str-replace($string, ' ', '-', 'all');\n  @return $string;\n}\n\n\n// Tokens--\n// --------\n/// Convert any Accoutrement map\n/// into CSS custom properties (aka variables).\n///\n/// - Token names that start with `_` or `-` are considered \"private\"\n///   and will not be output as variables\n/// - Tokens that contain a simple alias with no adjustments\n///   will be output with a `var()` value,\n///   keeping the alias relationship intact\n///\n/// @since 2.0.0 -\n/// - NEW: Initial release\n///\n/// @group core-vars\n/// @example scss\n///   $colors: (\n///     '_brand': hsl(120, 50%, 50%),\n///     'text': '#_brand' ('shade': 50%),\n///     'border': '#text',\n///   );\n///   :root {\n///     @include tokens--($colors, 'color-');\n///   }\n///\n/// @param {map} $map -\n///   Accoutrement map of tokens to set as css variables\n/// @param {string | null} $prefix [null] -\n///   Optional prefix for naming token variables\n/// @output\n///   Custom properties for all public tokens in the map\n@mixin tokens--(\n  $map,\n  $prefix: null\n) {\n  @each $token in map-keys($map) {\n    @if not is-private-token($token) {\n      @include token--($map, $token, $prefix: $prefix);\n    }\n  }\n}\n\n\n// Token--\n// -------\n/// Set a single custom property based on a map-token,\n/// with optional alias, fallback, and prefixing\n///\n/// @since 2.0.0 -\n/// - NEW: Initial release\n///\n/// @group core-vars\n/// @example scss\n///   $colors: (\n///     '_brand': hsl(120, 50%, 50%),\n///     'text': '#_brand' ('shade': 50%),\n///     'border': '#text',\n///   );\n///   .example {\n///     @include token--($colors, 'border');\n///     @include token--($colors, 'outline', 'border', red);\n///   }\n///\n/// @param {map} $map -\n///   Accoutrement map of tokens to use as source\n/// @param {*} $token -\n///   Token name available in the source `$map`\n/// @param {string | null} $value [null] -\n///   Optional new value for the given token\n/// @param {*} $fallback [true] -\n///   The optional fallback value for a `var()` function:\n///   - `true` will generate a fallback based on the token value\n///   - A token name will fallback to the value of that\n///     css-variable and then to the token's calculated value\n///   - Any other fallback will be passed through unchanged\n/// @param {string | null} $prefix [null] -\n///   Optional prefix used for naming token variables\n@mixin token--(\n  $map,\n  $token,\n  $value: null,\n  $fallback: true,\n  $prefix: null\n) {\n  $prop: _a_var-name($token, $prefix);\n  $val: $value or $token;\n  $ref: $value or is-alias-for($map, $val);\n\n  @if ($ref) {\n    $val: var-token($map, $ref, $fallback, $prefix);\n  } @else {\n    $val: get-token($map, $val);\n  }\n\n  #{$prop}: $val;\n}\n\n\n// Var Token\n// ---------\n/// Access the CSS variable associated with a given token,\n/// along with a fallback value based on the token itself\n///\n/// @since 2.0.0 -\n/// - NEW: Initial release\n///\n/// @group core-vars\n/// @example scss\n///   $colors: (\n///     '_brand': hsl(120, 50%, 50%),\n///     'text': '#_brand' ('shade': 50%),\n///     'border': '#text',\n///   );\n///   .example {\n///     border-color: var-token($colors, 'border');\n///     color: var-token($colors, 'text', black);\n///   }\n///\n/// @param {map} $map -\n///   Accoutrement map of tokens to use as source\n/// @param {*} $token -\n///   Token name available in the source `$map`\n/// @param {*} $fallback [true] -\n///   The optional fallback value for a `var()` function:\n///   - `true` will try to generate a fallback based on the color value\n///   - A color name will fallback to the value of that\n///     css-variable and then to the color's calculated value\n///   - Any other fallback will be passed through unchanged\n/// @param {string | null} $prefix [null] -\n///   Optional prefix used for naming token variables\n/// @return {string} -\n///   CSS variable call, in the format:\n///   `var(--<color>, <fallback>)`\n@function var-token(\n  $map,\n  $token,\n  $fallback: true,\n  $prefix: null\n) {\n  $var: _a_var-name($token, $prefix);\n\n  @if ($fallback == true) {\n    @if map-has-key($map, $token) {\n      @return var($var, get-token($map, $token));\n    }\n  } @else if map-has-key($map, $fallback) {\n    @return var($var, var-token($map, $fallback, true, $prefix));\n  } @else if $fallback {\n    @return var($var, $fallback);\n  }\n\n  @return var($var);\n}\n","/// ### Using WebFonts\n///\n/// Once you've configured your webfont data into a map,\n/// these tools will help you access the data in various ways:\n/// from creating `@font-face` imports,\n/// to calling font-families by any given alias.\n///\n/// @group type-fonts\n\n\n// Font [function]\n// ---------------\n/// Retrieve and normalize font data from the `$fonts` map\n///\n/// @since 2.0.0 -\n/// - BREAKING: Non-map fonts are interpreted as font-stacks\n/// - BREAKING: Normalized font-data uses proper name-quotation,\n///   and ignores missing or private names/stacks\n/// @since 1.0.0 -\n/// - NEW: Provided to access and normalize a map of font data\n///   for any key in your global `$fonts` map\n/// - NEW: Accepts `$source` map argument,\n///   for custom source-palette\n///\n/// @group type-fonts\n/// @param {*} $font -\n///   A key for accessing the desired font in `$fonts`\n/// @param {map} $source [$fonts] -\n///   Optional accoutrement-format map of fonts\n///   to use as the origin palette\n/// @return {map} -\n///   A parsed and normalized map of font-data\n@function font(\n  $font,\n  $source: $fonts\n) {\n  $data: get-token($source, $font);\n  $normal: _a_normalize-font($data, $font, $source);\n  @return $normal;\n}\n\n\n// Font-URL [function]\n// -------------------\n/// This is a wrapper for the CSS `url()` function,\n/// which simply prepends the global `$font-path` when appropriate.\n///\n/// @since type-4.0.0 -\n/// - BUGFIX: Supports Base64 data URI's, without prepending font-path\n///\n/// @group type-fonts\n/// @example scss\n///   $font-path: '../fonts/';\n///   $src: font-url('sans/my-sans-font.woff2');\n///   /* #{$src} */\n///\n/// @param {string} $path -\n///   A path relative to the fonts directory.\n/// @return {string} -\n///   The full path to a font file, in CSS `url('my/path')` format.\n@function font-url(\n  $path\n) {\n  @if not str-index($path, 'data:') {\n    $path: $font-path + $path;\n  }\n\n  @return url(quote($path)); // stylelint-disable-line function-url-quotes\n}\n\n\n// Font Family [function]\n// ----------------------\n/// Access a font-family from your `$fonts` map,\n/// with name and font-stack.\n///\n/// @since 1.0.0 -\n/// - NEW: Accepts `$source` map argument,\n///   for custom source-palette\n/// @since type-4.0.0 -\n/// - BUGFIX: Provides the correct name for fonts when an alias is given\n///\n/// @group type-fonts\n/// @example scss\n///   $fonts: (\n///     'sans': (\n///       'name': 'FranklinGothic',\n///       'stack': (Helvetica, Arial, sans-serif),\n///     ),\n///   );\n///\n///   html {\n///     font-family: font-family('sans');\n///   }\n///\n/// @param {string} $key -\n///   The key-name of a font in your `$fonts` map.\n/// @param {map} $source [$fonts] -\n///   Optional accoutrement-format map of fonts\n///   to use as the origin palette\n/// @return {String} -\n///   The full font-stack for the given font,\n///   ready for output with the `font-family` property.\n@function font-family(\n  $key,\n  $source: $fonts\n) {\n  $font: font($key, $source);\n  @return map-get($font, 'stack');\n}\n\n\n// Font Family [mixin]\n// -------------------\n/// Output a font-stack to font-family based on your `$fonts` configuration.\n///\n/// @since 1.0.0 -\n/// - NEW: Accepts `$source` map argument,\n///   for custom source-palette\n///\n/// @group type-fonts\n/// @example scss\n///   $fonts: (\n///     'FranklinGothic': (\n///       'stack': (Helvetica, Arial, sans-serif),\n///     ),\n///     'sans': '#FranklinGothic',\n///   );\n///\n///   html {\n///     @include font-family('sans');\n///   }\n///\n/// @param {string} $key -\n///   The key-name of a font in your `$fonts` map.\n/// @param {map} $source [$fonts] -\n///   Optional accoutrement-format map of fonts\n///   to use as the origin palette\n@mixin font-family(\n  $key,\n  $source: $fonts\n) {\n  font-family: font-family($key, $source);\n}\n\n\n// Font Face [mixin]\n// -----------------\n/// Import any local webfont defined in your `$fonts` configuration\n/// (variants without a path will not be imported).\n///\n/// @since 1.0.0 -\n/// - NEW: Accepts `$source` map argument,\n///   for custom source-palette\n/// @since type-4.0.0 -\n/// - BREAKING: No longer accepts the `$formats` parameter\n///\n/// @group type-fonts\n/// @example scss\n///   $fonts: (\n///     'body-font': (\n///       'name': 'Source Sans Pro',\n///       'formats': 'woff2' 'woff' 'eot',\n///       'normal': 'sans/sourcesanspro-regular-webfont',\n///       'italic': 'sans/sourcesanspro-italic-webfont',\n///       'bold': 'sans/sourcesanspro-bold-webfont',\n///     ),\n///   );\n///   @include font-face('body-font');\n///\n/// @param {string} $key -\n///   The key-name of a font in your `$fonts` map\n/// @param {map} $source [$fonts] -\n///   Optional accoutrement-format map of fonts\n///   to use as the origin palette\n/// @output `@font-face` import blocks for any defined font-variants.\n@mixin font-face(\n  $key,\n  $source: $fonts\n) {\n  $font: font($key, $source);\n  $variants: _a_font-get-variants($font);\n  $name: map-get($font, 'name');\n\n  @if (length($variants) > 0) {\n    $unicode: map-get($font, 'unicode-range');\n\n    @each $variant, $data in $variants {\n      $weight: nth($variant, 1);\n      $style: nth($variant, 2);\n      @include _a_import-font-face($name, $weight, $style, $data, $unicode);\n    }\n  }\n}\n\n\n// Import WebFonts [mixin]\n// -----------------------\n/// Find all the fonts that include data for imports,\n/// and generate `@font-face` blocks for each individual font and variant.\n///\n/// @since 2.0.0 -\n/// - NEW: Accepts `$source` parameter,\n///   which uses global `$fonts` by default\n/// - BREAKING: No longer imports private fonts,\n///   but will import a direct alias of the private font\n/// @since 1.0.0 -\n/// - BREAKING: No longer accepts the `$fonts` parameter\n/// @since type-4.0.0 -\n/// - BREAKING: No longer accepts the `$formats` parameter\n///\n/// @group type-fonts\n/// @example scss\n///   $fonts: (\n///     'body-font': (\n///       'name': 'Source Sans Pro',\n///       'formats': 'woff2' 'woff' 'eot',\n///       'normal': 'sans/sourcesanspro-regular-webfont',\n///       'italic': 'sans/sourcesanspro-italic-webfont',\n///       'bold': 'sans/sourcesanspro-bold-webfont',\n///     ),\n///     // alias keys, and fonts without path data will be ignored…\n///     'alias': '#body-font',\n///     'google-font': (\n///       'source': 'http://fonts.google.com/',\n///     ),\n///   );\n///   @include import-webfonts;\n///\n/// @param {map} $source [$fonts] -\n///   Optional accoutrement-format map of fonts\n///   to use as the origin palette\n/// @output Any number of `@font-face` blocks.\n@mixin import-webfonts(\n  $source: $fonts\n) {\n  @each $key, $font in $source {\n    @if not is-alias-for($source, $key) and not is-private-token($key) {\n      @include font-face($key);\n    }\n  }\n}\n","/// # Contrast & Accessibility\n/// @group color-contrast\n\n\n// WCAG Contrast\n// -------------\n/// These named contrast-ratios are defined by the [WCAG][WCAG].\n///\n/// [WCAG]: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast\n///\n/// @access private\n$WCAG-CONTRAST: (\n  'AA-large': 3,\n  'AA': 4.5,\n  'AAA': 7,\n);\n\n\n// Contrast\n// --------\n/// For any color, select the best contrast among a set of options.\n/// For best results, pass in a combination of light and dark colors\n/// to contrast against – \n/// or define default `contrast-light` and `contrast-dark` values\n/// (with or without a private `_` prefix)\n/// in your global `$colors` map.\n///\n/// @group color-contrast\n/// @example scss - max contrast\n///   $colors: (\n///     'background': blue,\n///     'light': #eee,\n///     'dark': #111,\n///   );\n///   html {\n///     color: contrast(\n///       'background',\n///       'light', 'dark', black, white\n///     );\n///   }\n/// @example scss - min contrast\n///   $colors: (\n///     'background': blue,\n///     'light': #eee,\n///     'dark': #111,\n///   );\n///   html {\n///     color: contrast(\n///       'background',\n///       'light', 'dark', black, white,\n///       'AAA'\n///     );\n///   }\n///\n/// @param {string | list} $color -\n///   The name or value of a color.\n/// @param {colors | min-contrast} $options... -\n///   List of colors to contrast against.\n///   This function will choose the best contrast\n///   of all the options provided,\n///   or the `contrast-light` and `contrast-dark` defaults\n///   defined in your color palette or the factory settings.\n///\n///   - Any  `{'AA' | 'AA-large' | 'AAA' | 0-21 }` values\n///     will be treated as a minimum color-contrast ratio –\n///     and will return the minimum accessible option,\n///     rather than the maximum contrast.\n/// @return {color} -\n///   Whichever color-option has the highest contrast-ratio to `$color`,\n///   or the minimum needed contrast to meet a given accessibility ratio.\n@function contrast(\n  $color,\n  $options...\n) {\n  @return _a_best-contrast($color, $options, 'color');\n}\n@include _a_register-function('contrast');\n\n\n// Var-Contrast\n// ------------\n/// An extension of the `contrast` function,\n/// designed to output CSS variables\n/// rather than simple color values.\n///\n/// @group color-contrast\n/// @since 2.1.0 -\n/// - NEW: Provides access to contrast colors as CSS-variables, when defined\n/// @example scss - max contrast / no variable names\n///   $colors: (\n///     'background': blue,\n///     'light': #eee,\n///     'dark': #111,\n///   );\n///   html {\n///     color: var-contrast(\n///       'background',\n///       'light', 'dark', black, white\n///     );\n///   }\n/// @example scss - min contrast / variable names\n///   $colors: (\n///     'background': blue,\n///     'light': #eee,\n///     'dark': #111,\n///   );\n///   html {\n///     color: var-contrast(\n///       'background',\n///       'light', 'dark', black, white,\n///       'AAA'\n///     );\n///   }\n///\n/// @param {string | list} $color -\n///   The name or value of a color.\n/// @param {colors | min-contrast} $options... -\n///   List of colors to contrast against.\n///   This function will choose the best contrast\n///   of all the options provided,\n///   or the `contrast-light` and `contrast-dark` defaults\n///   defined in your color palette or the factory settings.\n///\n///   - Any  `{'AA' | 'AA-large' | 'AAA' | 0-21 }` values\n///     will be treated as a minimum color-contrast ratio –\n///     and will return the minimum accessible option,\n///     rather than the maximum contrast.\n/// @return {color | var()} -\n///   CSS Variable for the color-option\n///   that has the highest contrast-ratio to `$color`,\n///   or the color if no variable exists.\n@function var-contrast(\n  $color,\n  $options...\n  ) {\n  $contrast: _a_best-contrast($color, $options);\n  $name: map-get($contrast, 'name');\n  $color: map-get($contrast, 'color');\n\n  @if ($name != $color) and not is-private-token($name) {\n    $name: _a_var-name($name, $color-var-prefix);\n    @return var($name, $color);\n  }\n\n  @return $color;\n}\n@include _a_register-function('var-contrast');\n\n\n// Contrasted\n// ----------\n/// Apply any background color,\n/// along with the highest-contrast text color from a set of options.\n/// This works the same as the `contrast` function,\n/// but applies the resulting values to `background-color`\n/// and text `color` properties.\n///\n/// @group color-contrast\n/// @example scss - max contrast\n///   $colors: (\n///     'background': blue,\n///     'light': #eee,\n///     'dark': #111,\n///   );\n///   html {\n///     @include contrasted(\n///       'background',\n///       'light', 'dark', black, white\n///     );\n///   }\n/// @example scss - min contrast\n///   $colors: (\n///     'background': blue,\n///     'light': #eee,\n///     'dark': #111,\n///   );\n///   html {\n///     @include contrasted(\n///       'background',\n///       'light', 'dark', black, white,\n///       'AAA'\n///     );\n///   }\n///\n/// @param {string | list} $background -\n///   The name or value of your desired background color.\n/// @param {colors | min-contrast} $options... -\n///   List of colors to contrast against.\n///   This function will choose the best contrast\n///   of all the options provided,\n///   or the `contrast-light` and `contrast-dark` defaults\n///   defined in your color palette or the factory settings.\n///\n///   - Any  `{'AA' | 'AA-large' | 'AAA' | 0-21 }` values\n///     will be treated as a minimum color-contrast ratio –\n///     and will return the minimum accessible option,\n///     rather than the maximum contrast.\n/// @output -\n///   Sets the `background-color` to `$background`\n///   and `color` to the option with\n///   highest contrast against that background,\n///   or minimum contrast that still meets a given accessibility ratio.\n@mixin contrasted(\n  $background,\n  $options...\n) {\n  $background: color($background);\n\n  background-color: $background;\n  color: contrast($background, $options...);\n}\n\n\n// Var Contrasted\n// --------------\n/// Apply any background color as a CSS variable,\n/// along with the highest-contrast text color from a set of options.\n/// This works the same as the `var-contrast` function,\n/// but applies the resulting values to `background-color`\n/// and text `color` properties.\n///\n/// @group color-contrast\n/// @since 2.1.0 -\n/// - NEW: Applies contrasting colors as CSS-variables, when defined\n/// @example scss - max contrast\n///   $colors: (\n///     'background': blue,\n///     'light': #eee,\n///     'dark': #111,\n///   );\n///   html {\n///     @include var-contrasted(\n///       'background',\n///       'light', 'dark', black, white\n///     );\n///   }\n/// @example scss - min contrast\n///   $colors: (\n///     'background': blue,\n///     'light': #eee,\n///     'dark': #111,\n///   );\n///   html {\n///     @include var-contrasted(\n///       'background',\n///       'light', 'dark', black, white,\n///       'AAA'\n///     );\n///   }\n///\n/// @param {string | list} $background -\n///   The name or value of your desired background color.\n/// @param {colors | min-contrast} $options... -\n///   List of colors to contrast against.\n///   This function will choose the best contrast\n///   of all the options provided,\n///   or the `contrast-light` and `contrast-dark` defaults\n///   defined in your color palette or the factory settings.\n///\n///   - Any  `{'AA' | 'AA-large' | 'AAA' | 0-21 }` values\n///     will be treated as a minimum color-contrast ratio –\n///     and will return the minimum accessible option,\n///     rather than the maximum contrast.\n/// @output -\n///   Sets the `background-color` to `$background`\n///   and the foreground `color` to\n///   whichever option has better contrast against the given background.\n@mixin var-contrasted(\n  $background,\n  $options...\n) {\n  background-color: var-color($background);\n  color: var-contrast($background, $options...);\n}\n\n\n// Contrast Ratio\n// --------------\n/// Compare two colors using the WCAG comparison algorithm,\n/// and return the resulting contrast-ratio.\n/// Optionally pass in a standard (AA, AAA, AA-large)\n/// and return `false` when the contrast-check fails.\n///\n/// - 'AA-large' == `3:1`\n/// - 'AA' == `4.5:1`\n/// - 'AAA' == `7:1`\n///\n/// @group color-contrast\n/// @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef WCAG Contrast Definition\n/// @example scss\n///   /* black and white: #{contrast-ratio(white, black)} */\n///   /* failed 'AAA': #{contrast-ratio(white, #999, 'AAA')} */\n///\n/// @param {string | list | number} $color -\n///   The name of a color in your palette,\n///   any other color value,\n///   or even a pre-calculated numeric luminance.\n/// @param {string | list | number} $contrast -\n///   The name or value of a color to contrast against the first.\n/// @param {'AA' | 'AA-large' | 'AAA' | number | false} $require [false] -\n///   An optional WCAG contrast ratio to require.\n///   The function will return `false` if the required ratio is not met.\n/// @return {number} -\n///   The WCAG-defined contrast-ratio of two colors.\n@function contrast-ratio(\n  $base,\n  $contrast,\n  $require: false\n) {\n  $is-lumins: (type-of($base) == 'number');\n\n  $base-lumin: if($is-lumins, $base, luminance($base));\n  $contrast-lumin: if($is-lumins, $contrast, luminance($contrast));\n\n  $darker: min($base-lumin, $contrast-lumin);\n  $lighter: max($base-lumin, $contrast-lumin);\n\n  $ratio: ($lighter + 0.05) / ($darker + 0.05);\n\n  $require: _a_valid-contrast($require);\n\n  @if $require and ($ratio < $require) {\n    @return false;\n  }\n\n  @return $ratio;\n}\n\n\n// Luminance\n// ---------\n/// Get the WCAG luminance of a color in your palette.\n///\n/// @group color-contrast\n/// @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef WCAG Relative Luminance\n///\n/// @param {string | list} $color -\n///   The name or value of a color.\n/// @return {number} -\n///   WCAG-defined numeric luminance value.\n@function luminance(\n  $color\n) {\n  $color: color($color);\n  $color: _a_type-check($color, 'color', 'luminance', '$color');\n  $luminance: 0;\n\n  @each $component in 'red' 'green' 'blue' {\n    $function: $component;\n\n    @if function-exists('get-function') {\n      $function: get-function($component);\n    }\n\n    $value: call($function, $color) / 255;\n\n    @if ($value < 0.03928) {\n      $value: $value / 12.92;\n    } @else {\n      $base: ($value + 0.055) / 1.055;\n      $value: _a_pow($base, 2.4);\n    }\n\n    @if ($component == 'red') {\n      $value: $value * 0.2126;\n    } @else if ($component == 'green') {\n      $value: $value * 0.7152;\n    } @else {\n      $value: $value * 0.0722;\n    }\n\n    $luminance: $luminance + $value;\n  }\n\n  @return $luminance;\n}\n\n\n// Default Contrast\n// ----------------\n/// Access the user or system default contrast values.\n///\n/// @access private\n/// @since 2.1.0 -\n/// - NEW: Allows for either private or public defaults\n///\n/// @param {'light' | 'dark' | 'values' | 'map'} $return -\n///   Return the light value, dark value, both values, or a map\n/// @return {color-name | map} -\n///   Light or dark color-name string,\n///   or map with `light` and `dark` keys.\n@function _a_default-contrast(\n  $return: 'both'\n) {\n  $both: (\n    'light': if(\n      map-has-key($colors, 'contrast-light'),\n      'contrast-light',\n      '_contrast-light'\n    ),\n    'dark': if(\n      map-has-key($colors, 'contrast-dark'),\n      'contrast-dark',\n      '_contrast-dark'\n    ),\n  );\n\n  @if ($return == 'values') {\n    @return map-values($both);\n  }\n\n  @return map-get($both, $return) or $both;\n}\n\n\n// Best Contrast\n// -------------\n/// For any color, select the best contrast among a set of options.\n/// Returns the highest contrast by default,\n/// or the minimum contrast to meet a particular ratio cutoff.\n///\n/// Unlike the `contrast` function,\n/// `_a_best-contrast` can return the color name,\n/// output value, ratio, or all three.\n///\n/// @access private\n/// @since 2.1.0 -\n/// - NEW: Provides access to both name and value of result\n/// - NEW: Provides a smart default for comparison against a single option\n///\n/// @param {string | list} $color -\n///   The name or value of a color.\n/// @param {list} $options [null] -\n///   Any number of colors to contrast against.\n///   This function will choose the best contrast of all the options provided,\n///   or use the `contrast-light` and `contrast-dark` defaults.\n/// @param {'map' | 'name' | 'color' | 'ratio'} $return ['map'] -\n///   Return either a token name, color value, best-ratio\n///   or all three together in a map.\n/// @return {color} -\n///   Whichever color-option has the highest contrast-ratio to `$color`.\n@function _a_best-contrast(\n  $color,\n  $options: null,\n  $return: 'map'\n) {\n  $opt-colors: ();\n  $min-ratio: false;\n\n  @each $opt in $options {\n    @if (type-of($opt) == 'color') or map-has-key($colors, $opt) {\n      $opt-colors: append($opt-colors, $opt);\n    } @else {\n      $min-ratio: _a_valid-contrast($opt) or $min-ratio;\n    }\n  }\n\n  // Establish default options if they are missing\n  @if (length($opt-colors) == 0) or (not $opt-colors) {\n    $opt-colors: _a_default-contrast('values');\n  } @else if (length($opt-colors) == 1 ){\n    $use: _a_best-contrast(nth($opt-colors, 1), $return: 'name');\n    $opt-colors: append($opt-colors, $use);\n  }\n\n  // Get the colors and their contrasts\n  $color-val: color($color);\n  $color-lum: luminance($color-val);\n  $best: (\n    'name': null,\n    'color': null,\n    'ratio': null,\n  );\n\n  @each $name in $opt-colors {\n    // 22 is above the highest possible, 0 is below the lowest\n    $best-ratio: map-get($best, 'ratio') or if($min-ratio, 22, 0);\n    $better: false;\n    $value: color($name);\n    $lum: luminance($value);\n    $ratio: contrast-ratio($color-lum, $lum, $min-ratio);\n\n    @if $min-ratio and $ratio {\n      $better: ($ratio < $best-ratio);\n    } @else if $ratio {\n      $better: ($ratio > $best-ratio);\n    }\n\n    @if $better {\n      $best: (\n        'name': $name,\n        'color': $value,\n        'ratio': $ratio,\n      );\n    }\n  }\n\n  @if (map-get($best, 'name')) {\n    @return map-get($best, $return) or $best;\n  }\n\n  @return false;\n}\n\n\n// Valid Contrast\n// --------------\n/// Return a valid contrast ratio or `false`\n///\n/// @access private\n/// @param {'AA' | 'AA-large' | 'AAA' | 0-21} $ratio -\n///   WCAG or 0-21 contrast ratios will pass validation,\n///   all other values will return false\n@function _a_valid-contrast(\n  $ratio\n) {\n  @if (type-of($ratio) == 'number') and ($ratio >= 1) and ($ratio <= 21) {\n    @return $ratio;\n  }\n\n  $uppercase: (\n    'aaa': 'AAA',\n    'aa': 'AA',\n    'aa-large': 'AA-large'\n  );\n\n  $ratio: map-get($uppercase, $ratio) or $ratio;\n  @return map-get($WCAG-CONTRAST, $ratio);\n}\n","// Hidden\n// ======\n\n\n/// # Accessibility\n///\n/// A simple set of utilities\n/// for handling text-visibility\n/// and screen-reader accessibility\n/// across your site.\n///\n/// @group type-a11y\n\n\n// Is Hidden\n// ---------\n/// Hide an element using either the `clip` or `position` method.\n/// @group type-a11y\n/// @param {'clip' | 'position'} $method ['clip'] -\n///   The hiding method to use.\n@mixin is-hidden(\n  $method: 'clip'\n) {\n  @if $method == 'position' {\n    @include _a_is-hidden--position;\n  } @else {\n    @include _a_is-hidden--clip;\n  }\n}\n\n\n// Is Hidden -- Position\n// ---------------------\n/// Hide an element by positioning it off the page.\n/// @group type-a11y\n/// @access private\n@mixin _a_is-hidden--position {\n  left: -9999px;\n  pointer-events: none;\n  position: absolute;\n  top: -9999px;\n}\n\n\n// Is Hidden -- Clip\n// -----------------\n/// Hide an element by clipping it in place.\n/// @group type-a11y\n/// @access private\n@mixin _a_is-hidden--clip {\n  clip: rect(1px, 1px, 1px, 1px);\n  clip-path: inset(1px 1px 1px 1px);\n  height: 1px;\n  overflow: hidden;\n  pointer-events: none;\n  position: absolute;\n  width: 1px;\n}\n\n\n","// Grid Layout\n// ===========\n\n[data-layout='grid'] {\n  display: grid;\n  grid-template-rows: min-content 1fr min-content;\n  margin: 0 auto;\n  min-height: 100vh;\n  padding: 0 size('double-gutter') size('half-shim');\n}\n\n[data-layout='header'] {\n  margin-top: size('double-gutter');\n}\n\n[data-layout='header'],\n[data-layout='main'],\n[data-layout='footer'] {\n  max-width: size('page');\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n}\n","// TOC Link List\n// =======\n\n.link-list {\n  list-style-position: inside;\n  margin-bottom: size('gutter');\n\n  /// override init-type\n  nav & {\n    list-style-type: decimal;\n  }\n}\n\n.link-list-intro {\n  display: block;\n}\n\n.link-list-item {\n  @include font-family('open');\n  font-size: size('xsmall');\n  margin-bottom: size('shim');\n  padding: size('half-shim') size('shim');\n  position: relative;\n\n  &:visited {\n    color: color('text-light');\n  }\n\n  #{$focus} {\n    background-color: color('active');\n    color: color('action');\n  }\n}\n\n// Map nav locations for highlighting active page\n$nav-locations: (\n  'Wu Wei',\n  'Non-being',\n  'No Name',\n  'Laissez-faire',\n  'Compatible Opposites',\n  'Profit and Thieves',\n  'The Common Good',\n  'See the World as Yourself',\n  'Know Your Limitations',\n  'A Time for Everything',\n  'Approval and Pride',\n  'The Straight Pat',\n  'The Way It Is',\n  'To Laugh or Not To Laugh',\n  'Simply Be Yourself',\n  'A Good Man’s Job',\n  'The Uncarved Block',\n  'Master Yourself',\n  'Know How to Yield',\n  'Failure and Opportunity',\n  'non-Tao',\n  'Forgiveness',\n  'Good and Evil',\n  'Not Knowing',\n  'All Things Change',\n  'Nothing Left Undone',\n  'Passing Judgement',\n  'The Soft Dissolves the Hard',\n  'Peace and Violence'\n);\n\n// Highlight active page\n@each $location in $nav-locations {\n  [data-location='#{$location}'] {\n    [data-active='#{$location}'] {\n      a:link,\n      a:visited {\n        color: color('action-hover');\n        font-weight: bold;\n\n        @include before('-') {\n          @include position(null null -100% negative('half-shim'));\n          @include font-family('script');\n          font-size: 80px;\n          position: absolute;\n          transform: rotate(90deg);\n        }\n      }\n\n      a:visited {\n        color: color('text-light');\n        font-weight: bold;\n      }\n\n      #{$focus} {\n        background-color: color('active');\n        color: color('action-hover');\n      }\n    }\n  }\n}\n","// Pseudo Elements\n// ===============\n\n\n/// # Pseudo-Elements\n///\n/// Some shortcuts for creating `::before` and `::after` pseudo-elements.\n///\n/// @group type-pseudo\n\n\n// Before\n// ------\n/// Add generated content `:before` an element.\n/// @group type-pseudo\n/// @param {String} $content -\n///   A value for the `content` property.\n@mixin before(\n  $content\n) {\n  &::before {\n    content: $content;\n    @content;\n  }\n}\n\n\n// After\n// -----\n/// Add generated content `:after` an element.\n/// @group type-pseudo\n/// @param {String} $content -\n///   A value for the `content` property.\n@mixin after(\n  $content\n) {\n  &::after {\n    content: $content;\n    @content;\n  }\n}\n\n\n// Wrap Content\n// ------------\n/// Add generated content `:before` and `:after` an element.\n/// @group type-pseudo\n/// @param {List} $content -\n///   One or two values to be used for the `content` property.\n///   A single string will be used `:before` and `:after`.\n@mixin wrap-content(\n  $content: '“' '”'\n) {\n  $_before: nth($content, 1);\n\n  &::before,\n  &::after {\n    content: $_before;\n    @content;\n  }\n\n  @if length($content) > 1 {\n    &::after { content: nth($content, 2); }\n  }\n}\n","// Position Utility\n// ================\n\n\n// Position\n// --------\n/// Shortcut for positioning an element,\n/// using the common `top right bottom left` (TRBL) syntax,\n/// where a single value will be used for all sides,\n/// two values will set vertical/horizontal,\n/// and three values will set top/horizontal/bottom values.\n/// Use `null` for a value to keep it from displaying,\n/// and `auto` or `initial` to reset a given value.\n///\n/// @since 1.0.0 -\n/// Support `sticky` positioning\n///\n/// @group layout-position\n/// @example scss - stretch over the full viewport\n///   .overlay {\n///     @include position(fixed 0);\n///   }\n/// @example scss - top right offset (absolute positioning implied)\n///   .overlay {\n///     @include position(2em 2em auto auto);\n///   }\n/// @example scss - vertical offset without horizontal output\n///   .overlay {\n///     @include position(2em null);\n///   }\n///\n/// @param {list} $position [null] -\n///   A shorthand-syntax of positioning values\n///   using the common TRBL pattern,\n///   e.g. `absolute 0 0 3em auto` or `fixed 0 2%`.\n///   The position value (absolute, relative, etc)\n///   defaults to `absolute`.\n/// @output -\n///   `top`, `right`, `bottom`, `left`, and `position` properties\n/// @throws Unknown positioning value\n@mixin position(\n  $position: null\n) {\n  $types: 'static' 'relative' 'absolute' 'fixed' 'sticky';\n  $values: ('auto', null);\n  $type: 'absolute';\n  $sides: ();\n\n  // Syntax parsing\n  @each $item in $position {\n    @if (type-of($item) == 'number') or index($values, $item) {\n      $sides: append($sides, $item);\n    } @else if index($types, $item) {\n      $type: $item;\n    } @else {\n      @include _a_error(\n        'Unknown positioning value: `#{$item}`',\n        'position'\n      );\n    }\n  }\n\n  // TRBL logic\n  $length: length($sides);\n  $top: if($length > 0, nth($sides, 1), null);\n  $right: if($length > 1, nth($sides, 2), $top);\n  $bottom: if($length > 2, nth($sides, 3), $top);\n  $left: if($length > 3, nth($sides, 4), $right);\n\n  // CSS Output\n  bottom: $bottom;\n  left: $left;\n  position: unquote($type);\n  right: $right;\n  top: $top;\n}\n","// Quotes\n// ======\n\n[data-quote] {\n  @include font-family('slab');\n  font-size: size('medium');\n  margin-bottom: size('spacer');\n  position: relative;\n\n  p:last-of-type {\n    margin-bottom: size('shim');\n  }\n\n  footer {\n    @include font-family('open');\n    font-size: size('xsmall');\n    text-transform: uppercase;\n  }\n}\n\n[data-icon='quote'] {\n  height: size('quote') * 0.75;\n  position: absolute;\n  transform: translate(negative('quote'), 10%);\n  width: size('quote') * 0.75;\n\n  @include above('page-quotes') {\n    height: size('quote');\n    transform: translate((negative('quote') + negative('shim')), 10%);\n    width: size('quote');\n  }\n}\n\n.quote-box {\n  fill: none;\n  stroke-width: 4;\n\n  [data-quote='quote'] & {\n    stroke: color('quote');\n  }\n\n  [data-quote='verse'] & {\n    stroke: color('verse');\n  }\n}\n\n.quote-mark {\n  [data-quote='quote'] & {\n    fill: color('quote');\n  }\n\n  [data-quote='verse'] & {\n    fill: color('verse');\n  }\n}\n","// Media Queries\n// =============\n\n\n// Breakpoints\n// -----------\n/// Establish a map of named breakpoints.\n///\n/// If you have [Accoutrement-Scale](http://oddbird.net/accoutrement-scale/)\n/// installed, you can use the scale syntax\n/// for describing size-relationships and adjustments –\n/// and even reference `$sizes` as though they are `$breakpoints`.\n/// Otherwise, the map should contain only valid CSS length values.\n///\n/// @since 0.1.0 -\n/// - BREAKING: Uses the new [shared](core.html) map syntax,\n///   for internal references and adjustments\n///\n/// @group layout-queries\n/// @link https://zellwk.com/blog/media-query-units/\n///   PX, EM, or REM Media Queries?\n/// @example scss - defining breakpoints\n///   $breakpoints: (\n///     'small': 30em,\n///     'medium': 45em,\n///   );\n/// @example scss - using accoutrement-scale\n///   $breakpoints: (\n///     'small': 30em ('convert-units': 'browser-ems'),\n///     'medium': '#small' ('times': 1.5),\n///   );\n///\n/// @type map\n$breakpoints: () !default;\n\n\n// Break [function]\n// ----------------\n/// Return a breakpoint from the `$breakpoint` map,\n/// or the accoutrement-scale `$sizes` map if it's available.\n///\n/// @since 1.0.0 -\n/// - NEW: Accepts `$do` map argument,\n///   for on-the-fly adjustments\n/// - NEW: Accepts `$source` map argument,\n///   for custom breakpoint source-palette\n/// - NEW: Accepts `$scale` boolean argument,\n///   to turn off access to [scale](scale.html) plugin `$sizes` map\n///\n/// @group layout-queries\n///\n/// @param {string} $break -\n///   The name or value of a breakpoint\n/// @param {map | null} $do [null] -\n///   A map of function/ratio adjustments to run on the returned value\n/// @param {map} $source [$breakpoints] -\n///   Optional accoutrement-format map of breakpoints\n///   to use as the origin palette\n/// @param {boolean} $scale [true] -\n///   By default, we merge in any `$sizes` available\n///   from the [scale](scale.html) plugin --\n///   making both `$breakpoints` and `$sizes` keys available\n/// @return {length} -\n///   The retrieved value of a named breakpoint\n/// @throws `$break` is not a valid length or keyword\n@function break(\n  $break,\n  $do: null,\n  $source: $breakpoints,\n  $scale: true\n) {\n  @if ($scale) and variable-exists('sizes') and (type-of($sizes) == 'map') {\n    $source: map-merge($sizes, $source);\n  }\n\n  // get breakpoint\n  $break: get-token($source, $break, $do);\n\n  // validate\n  @if (type-of($break) != 'number') or unitless($break) {\n    @return _a_error(\n      '`#{$break}` is not a valid length or keyword for $break',\n      'break'\n    );\n  }\n\n  @return $break;\n}\n\n\n// Below [mixin]\n// -------------\n/// Generate a max–<`width`/`height`> query,\n/// for styling elements below the given viewport width.\n///\n/// To help with overlapping min/max queries,\n/// we remove `1px` (or `0.01em`) from every max value by default.\n/// You can adjust that setting\n/// to adjust min values\n/// or avoid adjustments\n/// using the global `$adjust-query-overlap` setting.\n///\n/// @since 2.0.0 -\n/// - BREAKING: min/max adjustments applied to all units (not only px/em/rem)\n/// - NEW: min/max adjustments respect `$adjust-query-overlap` global setting\n///\n/// @group layout-queries\n/// @example scss\n///   @include below(30em) {\n///     html { background: red; }\n///   }\n/// @example scss\n///   $breakpoints: ('red': 30em);\n///\n///   @include below('red') {\n///     html { background: red; }\n///   }\n///\n/// @param {length | string} $max -\n///   The name of a documented breakpoint/size,\n///   or an arbitarty length to use in the query.\n/// @param {'width' | 'height'} $prop ['width'] -\n///   The property (width or height) to test against,\n///   for a result of e.g. `(max-width: 30em)`.\n@mixin below(\n  $max,\n  $prop: 'width'\n) {\n  $value: break($max);\n  $value: _a_nudge-query($value, 'max');\n\n  @media (max-#{$prop}: #{$value}) {\n    @content;\n  }\n}\n\n\n// Above [mixin]\n// -------------\n/// Generate a min-<`width`/`height`> query,\n/// for styling elements above the given viewport width.\n///\n/// To help with overlapping min/max queries,\n/// we remove `1px` (or `0.01em`) from max values by default.\n/// You can adjust that setting\n/// to adjust min values\n/// or avoid adjustments\n/// using the global `$adjust-query-overlap` setting.\n///\n/// @since 2.0.0 -\n/// - BREAKING: min/max adjustments applied to all units (not only px/em/rem)\n/// - NEW: min/max adjustments respect `$adjust-query-overlap` global setting\n///\n/// @group layout-queries\n/// @example scss\n///   @include above(50em) {\n///     html { background: green; }\n///   }\n/// @example scss\n///   $breakpoints: ('green': 50em);\n///\n///   @include above('green') {\n///     html { background: green; }\n///   }\n///\n/// @param {length | string} $min -\n///   The name of a documented breakpoint/size,\n///   or an arbitrary length to use in the query.\n/// @param {'width' | 'height'} $prop ['width'] -\n///   The property (width or height) to test against,\n///   for a result of e.g. `(min-width: 30em)`.\n@mixin above(\n  $min,\n  $prop: 'width'\n) {\n  $value: break($min);\n  $value: _a_nudge-query($value, 'min');\n\n  @media (min-#{$prop}: #{$value}) {\n    @content;\n  }\n}\n\n\n// Between [mixin]\n// ---------------\n/// Generate a min-and-max-<`width`/`height`> query,\n/// for styling elements between given viewport widths.\n///\n/// To help with overlapping min/max queries,\n/// we remove `1px` (or `0.01em`) from every max value by default.\n/// You can adjust that setting\n/// to adjust min values\n/// or avoid adjustments\n/// using the global `$adjust-query-overlap` setting.\n///\n/// @since 2.0.0 -\n/// - BREAKING: min/max adjustments applied to all units (not only px/em/rem)\n/// - NEW: min/max adjustments respect `$adjust-query-overlap` global setting\n///\n/// @group layout-queries\n/// @example scss\n///   @include between(30em, 50em) {\n///     html { background: yellow; }\n///   }\n/// @example scss\n///   $breakpoints: (\n///     'red': 30em,\n///     'green': 50em,\n///   );\n///\n///   @include between('red', 'green') {\n///     html { background: yellow; }\n///   }\n///\n/// @param {length | string} $min -\n///   The name of a documented breakpoint/size,\n///   or an arbitarty length to use as a minimum in the query.\n/// @param {length | string} $max -\n///   The name of a documented breakpoint/size,\n///   or an arbitarty length to use as a maximum in the query.\n/// @param {'width' | 'height'} $prop ['width'] -\n///   The property (width or height) to test against,\n///   for a result of e.g. `(min-width: 30em)`.\n@mixin between(\n  $min,\n  $max,\n  $prop: 'width'\n) {\n  $value-min: break($min);\n  $value-max: _a_nudge-query($value-min, 'min');\n  $value-max: break($max);\n  $value-max: _a_nudge-query($value-max, 'max');\n\n  @media (min-#{$prop}: #{$value-min}) and (max-#{$prop}: #{$value-max}) {\n    @content;\n  }\n}\n","// Paging\n// ======\n\n// outer container of all paging elements\n.paging {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-bottom: size('gutter');\n}\n\n// the <a> container of each paging element\n.paging-link {\n  @include font-family('slab');\n  column-gap: size('shim');\n  display: grid;\n  flex: 1 0 auto;\n  font-size: size('small');\n  margin-bottom: size('shim');\n}\n\n.next {\n  grid-template-columns: 1fr auto;\n  text-align: right;\n\n  // Is it worth it, let me work it\n  // put my icon down, flip it and reverse it\n  [data-icon] {\n    background-color: color('text');\n    grid-column: 2;\n    transform: scaleX(-1);\n\n    .icon-pointing {\n      fill: color('background');\n    }\n\n    .icon-square {\n      fill: color('text');\n    }\n  }\n\n  #{$focus} {\n    [data-icon] {\n      background-color: color('action');\n\n      .icon-square {\n        fill: color('action');\n      }\n    }\n  }\n}\n\n.previous {\n  grid-template-columns: auto 1fr;\n\n  #{$focus} {\n    [data-icon] {\n      fill: color('action');\n    }\n  }\n}\n\n// Line of text displaying \"Chapter #\"\n.paging-chapter-number {\n  font-weight: bold;\n  text-transform: uppercase;\n}\n\n// applied to both paging icons\n[data-icon='paging'] {\n  @include square('quote');\n  grid-row: 1 / 3;\n}\n","/// # Accessing Sizes\n/// @group scale-sizes\n\n\n// Size [function]\n// ---------------\n/// Access a named size in your `$sizes` map,\n/// using any comparable units.\n///\n/// @since 1.0.0 -\n/// - BREAKING: The previous `$units…` vararg\n///   has been replaced with `$do` map argument,\n///   for flexible on-the-fly adjustments.\n///   Non-map `$do` values are converted to\n///   `('convert-units': $do)` before processing,\n///   to provide a shortcut for unit-conversions.\n///   `size('root', 'cm')` will continue to work,\n///   but `size('root', 'em', 10px)` should be changed to\n///   `size('root', 'em' 10px)` (with all unit args in a single list)\n/// - NEW: Accepts `$source` map argument,\n///   for custom source-palette\n///\n/// @group scale-sizes\n///\n/// @param {string} $size -\n///   The name of any size in your configuration\n/// @param {map | unit-args | null} $do [null] -\n///   A map of function/ratio adjustments to run on the returned value,\n///   or a unit followed by any necessary arguments\n///   for conversion\n/// @param {map} $source [$sizes] -\n///   Optional accoutrement-format map of sizes to use as the origin palette\n/// @return {length} -\n///   The calculated length, in the requested units.\n@function size(\n  $size,\n  $do: null,\n  $source: $sizes\n) {\n  @if ($do) and (type-of($do) != 'map') {\n    $do: ('to': $do);\n  }\n\n  $size: get-token($source, $size, $do);\n  @return if((type-of($size) == 'string'), unquote($size), $size);\n}\n\n\n// Negative [function]\n// -------------------\n/// Return the inverse value of any length,\n/// in comparable units.\n///\n/// @since 1.0.0 -\n/// - BREAKING: The previous `$units…` vararg\n///   has been replaced with `$do` map argument,\n///   for flexible on-the-fly adjustments.\n///   Non-map `$do` values are converted to\n///   `('convert-units': $do)` before processing,\n///   to provide a shortcut for unit-conversions.\n///   `size('root', 'cm')` will continue to work,\n///   but `size('root', 'em', 10px)` should be changed to\n///   `size('root', 'em' 10px)` (with all unit args in a single list)\n/// - NEW: Accepts `$source` map argument,\n///   for custom source-palette\n///\n/// @group scale-sizes\n///\n/// @param {string | length | list} $size -\n///   The name of a size in your configuration (e.g. `line-height`),\n///   or a length to be converted into different units (e.g. `24px`),\n///   or a base-size and adjustments to be made\n///   (e.g. `24px ('_minor-third': 2)`).\n///   For the sake of consistent documentation,\n///   I recommend keeping adjustments in the configuration\n///   whenever possible.\n/// @param {map | unit-args | null} $do [null] -\n///   A map of function/ratio adjustments to run on the returned value,\n///   or a unit followed by any necessary arguments\n///   for conversion\n/// @param {map} $source [$sizes] -\n///   Optional accoutrement-format map of sizes to use as the origin palette\n/// @return {length} -\n///   The calculated negative length, in the requested units.\n@function negative(\n  $size,\n  $do: null,\n  $source: $sizes\n) {\n  $size: size($size, $do, $source);\n\n  @if (type-of($size) == 'string') {\n    @if (str-index($size, 'calc(') == 1) {\n      $size: str-slice($size, 6, -2);\n    }\n\n    @return 'calc(-1 * (#{$size}))';\n  }\n\n  @return -1 * $size;\n}\n\n\n// Square [mixin]\n// --------------\n/// Create a square by setting equal CSS `height` and `width` properties\n/// with the given size & unit value.\n///\n/// @since 1.0.0 -\n/// - BREAKING: The previous `$units…` vararg\n///   has been replaced with `$do` map argument,\n///   for flexible on-the-fly adjustments.\n///   Non-map `$do` values are converted to\n///   `('convert-units': $do)` before processing,\n///   to provide a shortcut for unit-conversions.\n///   `size('root', 'cm')` will continue to work,\n///   but `size('root', 'em', 10px)` should be changed to\n///   `size('root', 'em' 10px)` (with all unit args in a single list)\n/// - NEW: Accepts `$source` map argument,\n///   for custom source-palette\n///\n/// @group scale-sizes\n///\n/// @param {string | length | list} $size -\n///   The name of a size in your configuration (e.g. `line-height`),\n///   or a length to be converted into different units (e.g. `24px`),\n///   or a base-size and adjustments to be made\n///   (e.g. `24px ('_minor-third': 2)`).\n///   For the sake of consistent documentation,\n///   I recommend keeping adjustments in the configuration\n///   whenever possible.\n/// @param {map | unit-args | null} $do [null] -\n///   A map of function/ratio adjustments to run on the returned value,\n///   or a unit followed by any necessary arguments\n///   for conversion\n/// @param {map} $source [$sizes] -\n///   Optional accoutrement-format map of sizes to use as the origin palette\n/// @output -\n///   Equal CSS height and width properties,\n///   set to the given size and units.\n@mixin square(\n  $size,\n  $do: null,\n  $source: $sizes\n) {\n  $size: size($size, $do, $source);\n\n  height: $size;\n  width: $size;\n}\n","// Chapters\n// ========\n\n.chapter-number {\n  @include font-family('slab');\n  text-transform: uppercase;\n}\n\n.chapter-title {\n  @include font-family('script');\n  font-size: size('xxlarge');\n  margin-bottom: size('spacer');\n  text-align: center;\n}\n\n.ending-mark {\n  @include font-family('script');\n  display: block;\n  font-size: size('ending-mark');\n  line-height: 1;\n  // because of the typeface, different charcters have different positions\n  transform: translate(negative('half-shim'), -70%);\n}\n","// Top Nav\n// =======\n\n[data-layout='top-nav'] {\n  @include position(0 0 null 0 fixed);\n  background-color: color('background');\n  border-bottom: 1px solid color('border-light');\n  display: flex;\n  justify-content: space-between;\n  padding: size('quarter-shim') size('gutter');\n  z-index: 1;\n}\n\n.site-title {\n  @include font-family('script');\n  font-size: size('xsmall');\n  font-weight: normal;\n\n  em {\n    @include font-family('slab');\n    font-style: normal;\n    // add some space to account for italic style \"f\"\n    padding-left: size('quarter-shim');\n  }\n}\n\n[data-icon='nav'],\n[data-icon='close'] {\n  @include square('icon');\n}\n\n[data-layout='nav-panel'] {\n  @include position(0 0 0 null fixed);\n  align-items: stretch;\n  border-left: 1px solid color('border-light');\n  height: 100%;\n  max-width: size('nav-panel');\n  overflow-y: auto;\n  // transform: translateX(100%);\n  // transition: transform 300ms cubic-bezier(0.15, -0.21, 0.5, 1.2);\n  width: 100%;\n  z-index: 2;\n\n  &[aria-expanded='true'] {\n    transform: translateX(0);\n  }\n}\n\n.nav-header {\n  display: flex;\n  justify-content: space-between;\n  padding-top: size('quarter-shim');\n  padding-bottom: size('quarter-shim');\n}\n\n.nav-title {\n  font-size: size('xsmall');\n  text-transform: uppercase;\n  text-align: center;\n  width: 100%;\n}\n\n[data-layout='nav-inner'] {\n  background-color: color('background');\n  display: flex;\n  flex-direction: column;\n  padding: size('gutter') 0 size('shim');\n}\n","// Footer\n// ======\n\n[data-layout='footer'] {\n  font-size: size('xsmall');\n  padding-bottom: size('quarter-shim');\n  padding-top: size('quarter-shim');\n\n  @include before('') {\n    border-top: 1px solid color('border-light');\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n  }\n\n  p {\n    margin-bottom: 0;\n    padding-top: size('half-shim');\n  }\n}\n"]}