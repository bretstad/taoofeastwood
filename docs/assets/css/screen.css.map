{"version":3,"sources":["../../node_modules/accoutrement/sass/init/_root.scss","screen.css","../../node_modules/accoutrement/sass/init/_a11y.scss","../../node_modules/accoutrement/sass/init/_forms.scss","../../node_modules/accoutrement/sass/init/_media.scss","../../node_modules/accoutrement/sass/init/_typography.scss","../../node_modules/accoutrement/sass/plugin/type/_helpers.scss","initial/_type.scss","../../node_modules/accoutrement/sass/core/_css-vars.scss","../../node_modules/accoutrement/sass/plugin/type/_fonts.scss","../../node_modules/accoutrement/sass/plugin/color/_contrast.scss","../../node_modules/accoutrement/sass/plugin/type/_a11y.scss","layout/_grid.scss","patterns/_link-lists.scss","../../node_modules/accoutrement/sass/plugin/type/_pseudo-elements.scss","../../node_modules/accoutrement/sass/plugin/layout/_position.scss","patterns/_quotes.scss","../../node_modules/accoutrement/sass/plugin/layout/_queries.scss","patterns/_paging.scss","../../node_modules/accoutrement/sass/plugin/scale/_size.scss","components/_chapters.scss","components/_top-nav.scss","components/_footer.scss"],"names":[],"mappings":"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","file":"screen.css","sourcesContent":["// Root Init\n// =========\n\n\n/// Prevent iOS and IE text size adjust after device orientation change.\n///\n/// - Overflow-style: Edge 12+, Internet Explorer 11-\n/// @group init-root\nhtml {\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n  text-size-adjust: 100%;\n}\n\n\n/// - Android 4.3-\n/// - Internet Explorer 11-\n/// - Windows Phone 8.1+\n/// @group init-root\nmain {\n  display: block;\n}\n\n\n/// - Edge 12+\n/// - Firefox 40+\n/// - Internet Explorer 11-\n/// - Windows Phone 8.1+\n/// @group init-root\ndetails {\n  display: block;\n}\n\n\n/// Internet Explorer 11-\n/// @group init-root\npre {\n  overflow: auto;\n}\n\n\n/// - Internet Explorer 11-\n/// - Windows Phone 8.1+\n/// @group init-root\nprogress {\n  display: inline-block;\n}\n\n\n/// - Firefox 40+\n/// - Internet Explorer 11-\n/// - Windows Phone 8.1+\n/// @group init-root\nsummary {\n  display: block;\n}\n\n\n/// - Android 4.3-\n/// - Internet Explorer 11-\n/// - iOS 7-\n/// - Safari 7-\n/// - Windows Phone 8.1+\n/// @group init-root\ntemplate {\n  display: none;\n}\n\n\n/// Specify the border style, width, and box-sizing of all elements.\n/// @group init-root\n*,\n::before,\n::after {\n  border-style: solid;\n  border-width: 0;\n  box-sizing: border-box;\n}\n\n\n/// Specify the core styles of all elements.\n/// @group init-root\n* {\n  font-size: inherit;\n  line-height: inherit;\n  margin: 0;\n  padding: 0;\n}\n\n\n/// Specify the border styling of tables.\n/// @group init-root\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n","html {\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n  text-size-adjust: 100%;\n}\n\nmain {\n  display: block;\n}\n\ndetails {\n  display: block;\n}\n\npre {\n  overflow: auto;\n}\n\nprogress {\n  display: inline-block;\n}\n\nsummary {\n  display: block;\n}\n\ntemplate {\n  display: none;\n}\n\n*,\n::before,\n::after {\n  border-style: solid;\n  border-width: 0;\n  box-sizing: border-box;\n}\n\n* {\n  font-size: inherit;\n  line-height: inherit;\n  margin: 0;\n  padding: 0;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\naudio :not([controls]) {\n  display: none;\n}\n\n[aria-busy=true] {\n  cursor: progress;\n}\n\n[aria-controls] {\n  cursor: pointer;\n}\n\n[aria-disabled] {\n  cursor: default;\n}\n\n[hidden] {\n  display: none;\n}\n\nbutton {\n  overflow: visible;\n}\n\ninput {\n  border-radius: 0;\n  line-height: normal;\n}\n\nbutton,\n[type=button],\n[type=reset],\n[type=submit] {\n  appearance: button;\n  cursor: pointer;\n}\nbutton::-moz-focus-inner,\n[type=button]::-moz-focus-inner,\n[type=reset]::-moz-focus-inner,\n[type=submit]::-moz-focus-inner {\n  border: 0 none !important;\n  padding: 0 !important;\n}\n\n[type=checkbox],\n[type=radio] {\n  box-sizing: border-box;\n  padding: 0;\n}\n\n[type=number] {\n  width: auto;\n}\n\n[type=search] {\n  appearance: textfield;\n}\n\nbutton,\ninput,\nselect,\ntextarea {\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n}\n\ntextarea {\n  overflow: auto;\n  resize: vertical;\n}\n\nimg {\n  border: 0;\n}\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  max-width: 100%;\n  vertical-align: middle;\n}\n\na {\n  background-color: transparent;\n}\na:active, a:hover {\n  outline: 0;\n}\n\nabbr[title] {\n  border-bottom: 1px dotted;\n}\n\nb,\nstrong {\n  font-weight: bold;\n}\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace;\n  font-size: inherit;\n}\n\ndfn {\n  font-style: italic;\n}\n\nnav ol,\nnav ul {\n  list-style: none;\n}\n\nsmall {\n  font-size: 0.75em;\n}\n\nsub,\nsup {\n  font-size: 0.75em;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  top: -0.5em;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\n@font-face {\n  font-family: \"system\";\n  font-style: normal;\n  font-weight: 300;\n  src: local(\".SFNSText-Light\"), local(\".HelveticaNeueDeskInterface-Light\"), local(\".LucidaGrandeUI\"), local(\"Ubuntu Light\"), local(\"Segoe UI Light\"), local(\"Roboto-Light\"), local(\"DroidSans\"), local(\"Tahoma\");\n}\n@font-face {\n  font-family: \"lato\";\n  font-style: normal;\n  font-weight: 300;\n  src: url(\"../fonts/lato-light-webfont.woff2\") format(\"woff2\"), url(\"../fonts/lato-light-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"lato\";\n  font-style: normal;\n  font-weight: normal;\n  src: url(\"../fonts/lato-regular-webfont.woff2\") format(\"woff2\"), url(\"../fonts/lato-regular-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"lato\";\n  font-style: italic;\n  font-weight: normal;\n  src: url(\"../fonts/lato-italic-webfont.woff2\") format(\"woff2\"), url(\"../fonts/lato-italic-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"lato\";\n  font-style: normal;\n  font-weight: bold;\n  src: url(\"../fonts/lato-bold-webfont.woff2\") format(\"woff2\"), url(\"../fonts/lato-bold-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"lato\";\n  font-style: italic;\n  font-weight: bold;\n  src: url(\"../fonts/lato-bolditalic-webfont.woff2\") format(\"woff2\"), url(\"../fonts/lato-bolditalic-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"open\";\n  font-style: normal;\n  font-weight: 300;\n  src: url(\"../fonts/opensans-light-webfont.woff2\") format(\"woff2\"), url(\"../fonts/opensans-light-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"open\";\n  font-style: normal;\n  font-weight: normal;\n  src: url(\"../fonts/opensans-regular-webfont.woff2\") format(\"woff2\"), url(\"../fonts/opensans-regular-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"open\";\n  font-style: italic;\n  font-weight: normal;\n  src: url(\"../fonts/opensans-italic-webfont.woff2\") format(\"woff2\"), url(\"../fonts/opensans-italic-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"open\";\n  font-style: normal;\n  font-weight: bold;\n  src: url(\"../fonts/opensans-bold-webfont.woff2\") format(\"woff2\"), url(\"../fonts/opensans-bold-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"open\";\n  font-style: italic;\n  font-weight: bold;\n  src: url(\"../fonts/opensans-bolditalic-webfont.woff2\") format(\"woff2\"), url(\"../fonts/opensans-bolditalic-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"slab\";\n  font-style: normal;\n  font-weight: normal;\n  src: url(\"../fonts/enriqueta-regular-webfont.woff2\") format(\"woff2\"), url(\"../fonts/enriqueta-regular-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"slab\";\n  font-style: normal;\n  font-weight: bold;\n  src: url(\"../fonts/enriqueta-bold-webfont.woff2\") format(\"woff2\"), url(\"../fonts/enriqueta-bold-webfont.woff\") format(\"woff\");\n}\n@font-face {\n  font-family: \"script\";\n  font-style: normal;\n  font-weight: normal;\n  src: url(\"../fonts/kaushanscript-regular-webfont.woff2\") format(\"woff2\"), url(\"../fonts/kaushanscript-regular-webfont.woff\") format(\"woff\");\n}\n:root {\n  --color-contrast-light: #fff;\n  --color-contrast-dark: #261f1f;\n  --color-background:var(--color-contrast-light, #fff);\n  --color-text:var(--color-contrast-dark, #261f1f);\n  --color-text-light: #735e5e;\n  --color-border: #958585;\n  --color-border-light: #d8d2d2;\n  --color-action: #d10300;\n  --color-action-hover: #5f1615;\n  --color-accent: #d6b361;\n  --color-accent-light: #f8f2e3;\n  --color-quote: #e4ce99;\n  --color-verse: #efd3c2;\n  --color-active: #f9e1e0;\n  font-family: open, system, system-ui, sans-serif;\n  background-color: var(--color-background, #fff);\n  color: var(--color-contrast-dark, #261f1f);\n  font-size: calc(16px + 0.25vw);\n  line-height: 1.6;\n}\n\nh1,\nh2,\nh3 {\n  font-family: slab, serif;\n  line-height: 1.25;\n}\n\nh1 {\n  font-size: calc(1.2649110641rem + 2.5vw);\n}\n\nh2 {\n  font-size: 1.2649110641rem;\n}\n\nh3 {\n  font-size: 1.0605105612rem;\n}\n\np {\n  margin-bottom: 1.6rem;\n}\n\n.page-title {\n  font-family: slab, serif;\n  font-weight: normal;\n  margin-bottom: 1.6rem;\n  text-transform: uppercase;\n}\n\na:link, a:visited {\n  color: var(--color-text, #261f1f);\n  text-decoration: none;\n}\na:hover, a:focus, a:active {\n  color: var(--color-action, #d10300);\n}\n\n[data-hidden],\n.is-hidden {\n  clip: rect(1px, 1px, 1px, 1px);\n  clip-path: inset(1px 1px 1px 1px);\n  height: 1px;\n  overflow: hidden;\n  pointer-events: none;\n  position: absolute;\n  width: 1px;\n}\n\n[data-layout=grid] {\n  display: grid;\n  grid-template-rows: min-content 1fr min-content;\n  margin: 0 auto;\n  min-height: 100vh;\n  padding: 0 3.2rem 0.4rem;\n}\n\n[data-layout=header] {\n  margin-top: 3.2rem;\n}\n\n[data-layout=header],\n[data-layout=main],\n[data-layout=footer] {\n  max-width: 42rem;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n}\n\n[data-layout=main] {\n  margin-bottom: 1.6rem;\n}\n\n.link-list {\n  display: flex;\n  flex-direction: column;\n  list-style-type: none;\n  line-height: 1.5;\n}\n\n.link-list-intro {\n  display: block;\n}\n\n.link-list-item {\n  font-family: open, system, system-ui, sans-serif;\n  display: block;\n  font-size: 0.790569415rem;\n  padding: 0.4rem 0.8rem 0.4rem 1.6rem;\n  position: relative;\n}\n.toc-archive .link-list-item {\n  margin-left: -1.6rem;\n}\n.link-list-item:visited {\n  color: #735e5e;\n}\n.link-list-item:hover, .link-list-item:focus, .link-list-item:active {\n  background-color: #f9e1e0;\n  color: #d10300;\n}\n.toc-archive .link-list-item:hover, .toc-archive .link-list-item:focus, .toc-archive .link-list-item:active {\n  background-color: transparent;\n}\n\n[data-location=wu-wei] [data-active=wu-wei] a {\n  font-weight: bold;\n}\n[data-location=wu-wei] [data-active=wu-wei] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=wu-wei] [data-active=wu-wei] a:link {\n  color: #5f1615;\n}\n[data-location=wu-wei] [data-active=wu-wei] a:visited {\n  color: #735e5e;\n}\n[data-location=wu-wei] [data-active=wu-wei]:hover, [data-location=wu-wei] [data-active=wu-wei]:focus, [data-location=wu-wei] [data-active=wu-wei]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=non-being] [data-active=non-being] a {\n  font-weight: bold;\n}\n[data-location=non-being] [data-active=non-being] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=non-being] [data-active=non-being] a:link {\n  color: #5f1615;\n}\n[data-location=non-being] [data-active=non-being] a:visited {\n  color: #735e5e;\n}\n[data-location=non-being] [data-active=non-being]:hover, [data-location=non-being] [data-active=non-being]:focus, [data-location=non-being] [data-active=non-being]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=no-name] [data-active=no-name] a {\n  font-weight: bold;\n}\n[data-location=no-name] [data-active=no-name] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=no-name] [data-active=no-name] a:link {\n  color: #5f1615;\n}\n[data-location=no-name] [data-active=no-name] a:visited {\n  color: #735e5e;\n}\n[data-location=no-name] [data-active=no-name]:hover, [data-location=no-name] [data-active=no-name]:focus, [data-location=no-name] [data-active=no-name]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=laissez-faire] [data-active=laissez-faire] a {\n  font-weight: bold;\n}\n[data-location=laissez-faire] [data-active=laissez-faire] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=laissez-faire] [data-active=laissez-faire] a:link {\n  color: #5f1615;\n}\n[data-location=laissez-faire] [data-active=laissez-faire] a:visited {\n  color: #735e5e;\n}\n[data-location=laissez-faire] [data-active=laissez-faire]:hover, [data-location=laissez-faire] [data-active=laissez-faire]:focus, [data-location=laissez-faire] [data-active=laissez-faire]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=compatible-opposites] [data-active=compatible-opposites] a {\n  font-weight: bold;\n}\n[data-location=compatible-opposites] [data-active=compatible-opposites] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=compatible-opposites] [data-active=compatible-opposites] a:link {\n  color: #5f1615;\n}\n[data-location=compatible-opposites] [data-active=compatible-opposites] a:visited {\n  color: #735e5e;\n}\n[data-location=compatible-opposites] [data-active=compatible-opposites]:hover, [data-location=compatible-opposites] [data-active=compatible-opposites]:focus, [data-location=compatible-opposites] [data-active=compatible-opposites]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=profit-and-thieves] [data-active=profit-and-thieves] a {\n  font-weight: bold;\n}\n[data-location=profit-and-thieves] [data-active=profit-and-thieves] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=profit-and-thieves] [data-active=profit-and-thieves] a:link {\n  color: #5f1615;\n}\n[data-location=profit-and-thieves] [data-active=profit-and-thieves] a:visited {\n  color: #735e5e;\n}\n[data-location=profit-and-thieves] [data-active=profit-and-thieves]:hover, [data-location=profit-and-thieves] [data-active=profit-and-thieves]:focus, [data-location=profit-and-thieves] [data-active=profit-and-thieves]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=the-common-good] [data-active=the-common-good] a {\n  font-weight: bold;\n}\n[data-location=the-common-good] [data-active=the-common-good] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=the-common-good] [data-active=the-common-good] a:link {\n  color: #5f1615;\n}\n[data-location=the-common-good] [data-active=the-common-good] a:visited {\n  color: #735e5e;\n}\n[data-location=the-common-good] [data-active=the-common-good]:hover, [data-location=the-common-good] [data-active=the-common-good]:focus, [data-location=the-common-good] [data-active=the-common-good]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=see-the-world-as-yourself] [data-active=see-the-world-as-yourself] a {\n  font-weight: bold;\n}\n[data-location=see-the-world-as-yourself] [data-active=see-the-world-as-yourself] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=see-the-world-as-yourself] [data-active=see-the-world-as-yourself] a:link {\n  color: #5f1615;\n}\n[data-location=see-the-world-as-yourself] [data-active=see-the-world-as-yourself] a:visited {\n  color: #735e5e;\n}\n[data-location=see-the-world-as-yourself] [data-active=see-the-world-as-yourself]:hover, [data-location=see-the-world-as-yourself] [data-active=see-the-world-as-yourself]:focus, [data-location=see-the-world-as-yourself] [data-active=see-the-world-as-yourself]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=know-your-limitations] [data-active=know-your-limitations] a {\n  font-weight: bold;\n}\n[data-location=know-your-limitations] [data-active=know-your-limitations] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=know-your-limitations] [data-active=know-your-limitations] a:link {\n  color: #5f1615;\n}\n[data-location=know-your-limitations] [data-active=know-your-limitations] a:visited {\n  color: #735e5e;\n}\n[data-location=know-your-limitations] [data-active=know-your-limitations]:hover, [data-location=know-your-limitations] [data-active=know-your-limitations]:focus, [data-location=know-your-limitations] [data-active=know-your-limitations]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=a-time-for-everything] [data-active=a-time-for-everything] a {\n  font-weight: bold;\n}\n[data-location=a-time-for-everything] [data-active=a-time-for-everything] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=a-time-for-everything] [data-active=a-time-for-everything] a:link {\n  color: #5f1615;\n}\n[data-location=a-time-for-everything] [data-active=a-time-for-everything] a:visited {\n  color: #735e5e;\n}\n[data-location=a-time-for-everything] [data-active=a-time-for-everything]:hover, [data-location=a-time-for-everything] [data-active=a-time-for-everything]:focus, [data-location=a-time-for-everything] [data-active=a-time-for-everything]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=approval-and-pride] [data-active=approval-and-pride] a {\n  font-weight: bold;\n}\n[data-location=approval-and-pride] [data-active=approval-and-pride] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=approval-and-pride] [data-active=approval-and-pride] a:link {\n  color: #5f1615;\n}\n[data-location=approval-and-pride] [data-active=approval-and-pride] a:visited {\n  color: #735e5e;\n}\n[data-location=approval-and-pride] [data-active=approval-and-pride]:hover, [data-location=approval-and-pride] [data-active=approval-and-pride]:focus, [data-location=approval-and-pride] [data-active=approval-and-pride]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=the-straight-pat] [data-active=the-straight-pat] a {\n  font-weight: bold;\n}\n[data-location=the-straight-pat] [data-active=the-straight-pat] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=the-straight-pat] [data-active=the-straight-pat] a:link {\n  color: #5f1615;\n}\n[data-location=the-straight-pat] [data-active=the-straight-pat] a:visited {\n  color: #735e5e;\n}\n[data-location=the-straight-pat] [data-active=the-straight-pat]:hover, [data-location=the-straight-pat] [data-active=the-straight-pat]:focus, [data-location=the-straight-pat] [data-active=the-straight-pat]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=the-way-it-is] [data-active=the-way-it-is] a {\n  font-weight: bold;\n}\n[data-location=the-way-it-is] [data-active=the-way-it-is] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=the-way-it-is] [data-active=the-way-it-is] a:link {\n  color: #5f1615;\n}\n[data-location=the-way-it-is] [data-active=the-way-it-is] a:visited {\n  color: #735e5e;\n}\n[data-location=the-way-it-is] [data-active=the-way-it-is]:hover, [data-location=the-way-it-is] [data-active=the-way-it-is]:focus, [data-location=the-way-it-is] [data-active=the-way-it-is]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=to-laugh-or-not-to-laugh] [data-active=to-laugh-or-not-to-laugh] a {\n  font-weight: bold;\n}\n[data-location=to-laugh-or-not-to-laugh] [data-active=to-laugh-or-not-to-laugh] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=to-laugh-or-not-to-laugh] [data-active=to-laugh-or-not-to-laugh] a:link {\n  color: #5f1615;\n}\n[data-location=to-laugh-or-not-to-laugh] [data-active=to-laugh-or-not-to-laugh] a:visited {\n  color: #735e5e;\n}\n[data-location=to-laugh-or-not-to-laugh] [data-active=to-laugh-or-not-to-laugh]:hover, [data-location=to-laugh-or-not-to-laugh] [data-active=to-laugh-or-not-to-laugh]:focus, [data-location=to-laugh-or-not-to-laugh] [data-active=to-laugh-or-not-to-laugh]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=simply-be-yourself] [data-active=simply-be-yourself] a {\n  font-weight: bold;\n}\n[data-location=simply-be-yourself] [data-active=simply-be-yourself] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=simply-be-yourself] [data-active=simply-be-yourself] a:link {\n  color: #5f1615;\n}\n[data-location=simply-be-yourself] [data-active=simply-be-yourself] a:visited {\n  color: #735e5e;\n}\n[data-location=simply-be-yourself] [data-active=simply-be-yourself]:hover, [data-location=simply-be-yourself] [data-active=simply-be-yourself]:focus, [data-location=simply-be-yourself] [data-active=simply-be-yourself]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=\"a-good-man's-job\"] [data-active=\"a-good-man's-job\"] a {\n  font-weight: bold;\n}\n[data-location=\"a-good-man's-job\"] [data-active=\"a-good-man's-job\"] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=\"a-good-man's-job\"] [data-active=\"a-good-man's-job\"] a:link {\n  color: #5f1615;\n}\n[data-location=\"a-good-man's-job\"] [data-active=\"a-good-man's-job\"] a:visited {\n  color: #735e5e;\n}\n[data-location=\"a-good-man's-job\"] [data-active=\"a-good-man's-job\"]:hover, [data-location=\"a-good-man's-job\"] [data-active=\"a-good-man's-job\"]:focus, [data-location=\"a-good-man's-job\"] [data-active=\"a-good-man's-job\"]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=the-uncarved-block] [data-active=the-uncarved-block] a {\n  font-weight: bold;\n}\n[data-location=the-uncarved-block] [data-active=the-uncarved-block] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=the-uncarved-block] [data-active=the-uncarved-block] a:link {\n  color: #5f1615;\n}\n[data-location=the-uncarved-block] [data-active=the-uncarved-block] a:visited {\n  color: #735e5e;\n}\n[data-location=the-uncarved-block] [data-active=the-uncarved-block]:hover, [data-location=the-uncarved-block] [data-active=the-uncarved-block]:focus, [data-location=the-uncarved-block] [data-active=the-uncarved-block]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=master-yourself] [data-active=master-yourself] a {\n  font-weight: bold;\n}\n[data-location=master-yourself] [data-active=master-yourself] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=master-yourself] [data-active=master-yourself] a:link {\n  color: #5f1615;\n}\n[data-location=master-yourself] [data-active=master-yourself] a:visited {\n  color: #735e5e;\n}\n[data-location=master-yourself] [data-active=master-yourself]:hover, [data-location=master-yourself] [data-active=master-yourself]:focus, [data-location=master-yourself] [data-active=master-yourself]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=know-how-to-yield] [data-active=know-how-to-yield] a {\n  font-weight: bold;\n}\n[data-location=know-how-to-yield] [data-active=know-how-to-yield] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=know-how-to-yield] [data-active=know-how-to-yield] a:link {\n  color: #5f1615;\n}\n[data-location=know-how-to-yield] [data-active=know-how-to-yield] a:visited {\n  color: #735e5e;\n}\n[data-location=know-how-to-yield] [data-active=know-how-to-yield]:hover, [data-location=know-how-to-yield] [data-active=know-how-to-yield]:focus, [data-location=know-how-to-yield] [data-active=know-how-to-yield]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=failure-and-opportunity] [data-active=failure-and-opportunity] a {\n  font-weight: bold;\n}\n[data-location=failure-and-opportunity] [data-active=failure-and-opportunity] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=failure-and-opportunity] [data-active=failure-and-opportunity] a:link {\n  color: #5f1615;\n}\n[data-location=failure-and-opportunity] [data-active=failure-and-opportunity] a:visited {\n  color: #735e5e;\n}\n[data-location=failure-and-opportunity] [data-active=failure-and-opportunity]:hover, [data-location=failure-and-opportunity] [data-active=failure-and-opportunity]:focus, [data-location=failure-and-opportunity] [data-active=failure-and-opportunity]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=non-tao] [data-active=non-tao] a {\n  font-weight: bold;\n}\n[data-location=non-tao] [data-active=non-tao] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=non-tao] [data-active=non-tao] a:link {\n  color: #5f1615;\n}\n[data-location=non-tao] [data-active=non-tao] a:visited {\n  color: #735e5e;\n}\n[data-location=non-tao] [data-active=non-tao]:hover, [data-location=non-tao] [data-active=non-tao]:focus, [data-location=non-tao] [data-active=non-tao]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=forgiveness] [data-active=forgiveness] a {\n  font-weight: bold;\n}\n[data-location=forgiveness] [data-active=forgiveness] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=forgiveness] [data-active=forgiveness] a:link {\n  color: #5f1615;\n}\n[data-location=forgiveness] [data-active=forgiveness] a:visited {\n  color: #735e5e;\n}\n[data-location=forgiveness] [data-active=forgiveness]:hover, [data-location=forgiveness] [data-active=forgiveness]:focus, [data-location=forgiveness] [data-active=forgiveness]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=good-and-evil] [data-active=good-and-evil] a {\n  font-weight: bold;\n}\n[data-location=good-and-evil] [data-active=good-and-evil] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=good-and-evil] [data-active=good-and-evil] a:link {\n  color: #5f1615;\n}\n[data-location=good-and-evil] [data-active=good-and-evil] a:visited {\n  color: #735e5e;\n}\n[data-location=good-and-evil] [data-active=good-and-evil]:hover, [data-location=good-and-evil] [data-active=good-and-evil]:focus, [data-location=good-and-evil] [data-active=good-and-evil]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=not-knowing] [data-active=not-knowing] a {\n  font-weight: bold;\n}\n[data-location=not-knowing] [data-active=not-knowing] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=not-knowing] [data-active=not-knowing] a:link {\n  color: #5f1615;\n}\n[data-location=not-knowing] [data-active=not-knowing] a:visited {\n  color: #735e5e;\n}\n[data-location=not-knowing] [data-active=not-knowing]:hover, [data-location=not-knowing] [data-active=not-knowing]:focus, [data-location=not-knowing] [data-active=not-knowing]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=all-things-change] [data-active=all-things-change] a {\n  font-weight: bold;\n}\n[data-location=all-things-change] [data-active=all-things-change] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=all-things-change] [data-active=all-things-change] a:link {\n  color: #5f1615;\n}\n[data-location=all-things-change] [data-active=all-things-change] a:visited {\n  color: #735e5e;\n}\n[data-location=all-things-change] [data-active=all-things-change]:hover, [data-location=all-things-change] [data-active=all-things-change]:focus, [data-location=all-things-change] [data-active=all-things-change]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=nothing-left-undone] [data-active=nothing-left-undone] a {\n  font-weight: bold;\n}\n[data-location=nothing-left-undone] [data-active=nothing-left-undone] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=nothing-left-undone] [data-active=nothing-left-undone] a:link {\n  color: #5f1615;\n}\n[data-location=nothing-left-undone] [data-active=nothing-left-undone] a:visited {\n  color: #735e5e;\n}\n[data-location=nothing-left-undone] [data-active=nothing-left-undone]:hover, [data-location=nothing-left-undone] [data-active=nothing-left-undone]:focus, [data-location=nothing-left-undone] [data-active=nothing-left-undone]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=passing-judgement] [data-active=passing-judgement] a {\n  font-weight: bold;\n}\n[data-location=passing-judgement] [data-active=passing-judgement] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=passing-judgement] [data-active=passing-judgement] a:link {\n  color: #5f1615;\n}\n[data-location=passing-judgement] [data-active=passing-judgement] a:visited {\n  color: #735e5e;\n}\n[data-location=passing-judgement] [data-active=passing-judgement]:hover, [data-location=passing-judgement] [data-active=passing-judgement]:focus, [data-location=passing-judgement] [data-active=passing-judgement]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=the-soft-dissolves-the-hard] [data-active=the-soft-dissolves-the-hard] a {\n  font-weight: bold;\n}\n[data-location=the-soft-dissolves-the-hard] [data-active=the-soft-dissolves-the-hard] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=the-soft-dissolves-the-hard] [data-active=the-soft-dissolves-the-hard] a:link {\n  color: #5f1615;\n}\n[data-location=the-soft-dissolves-the-hard] [data-active=the-soft-dissolves-the-hard] a:visited {\n  color: #735e5e;\n}\n[data-location=the-soft-dissolves-the-hard] [data-active=the-soft-dissolves-the-hard]:hover, [data-location=the-soft-dissolves-the-hard] [data-active=the-soft-dissolves-the-hard]:focus, [data-location=the-soft-dissolves-the-hard] [data-active=the-soft-dissolves-the-hard]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-location=peace-and-violence] [data-active=peace-and-violence] a {\n  font-weight: bold;\n}\n[data-location=peace-and-violence] [data-active=peace-and-violence] a::before {\n  content: \"-\";\n  bottom: -100%;\n  left: 0;\n  position: absolute;\n  font-family: script, cursive;\n  font-size: 80px;\n  position: absolute;\n  transform: rotate(90deg);\n}\n[data-location=peace-and-violence] [data-active=peace-and-violence] a:link {\n  color: #5f1615;\n}\n[data-location=peace-and-violence] [data-active=peace-and-violence] a:visited {\n  color: #735e5e;\n}\n[data-location=peace-and-violence] [data-active=peace-and-violence]:hover, [data-location=peace-and-violence] [data-active=peace-and-violence]:focus, [data-location=peace-and-violence] [data-active=peace-and-violence]:active {\n  background-color: #f9e1e0;\n  color: #5f1615;\n}\n\n[data-quote] {\n  font-family: slab, serif;\n  font-size: 1.0605105612rem;\n  margin-bottom: calc(3.2rem + 4vmin);\n  position: relative;\n}\n[data-quote] p:last-of-type {\n  margin-bottom: 0.8rem;\n}\n[data-quote] footer {\n  font-family: open, system, system-ui, sans-serif;\n  font-size: 0.790569415rem;\n  text-transform: uppercase;\n}\n\n[data-icon=quote] {\n  height: 1.875rem;\n  position: absolute;\n  transform: translate(-2.5rem, 10%);\n  width: 1.875rem;\n}\n@media (min-width: 63rem) {\n  [data-icon=quote] {\n    height: 2.5rem;\n    transform: translate(-3.3rem, 10%);\n    width: 2.5rem;\n  }\n}\n\n.quote-box {\n  fill: none;\n  stroke-width: 4;\n}\n[data-quote=quote] .quote-box {\n  stroke: #e4ce99;\n}\n[data-quote=verse] .quote-box {\n  stroke: #efd3c2;\n}\n\n[data-quote=quote] .quote-mark {\n  fill: #e4ce99;\n}\n[data-quote=verse] .quote-mark {\n  fill: #efd3c2;\n}\n\n.paging {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-bottom: 1.6rem;\n}\n\n.paging-link {\n  font-family: slab, serif;\n  column-gap: 0.8rem;\n  display: grid;\n  flex: 1 0 auto;\n  font-size: 0.889139705rem;\n  margin-bottom: 0.8rem;\n}\n\n.next {\n  grid-template-columns: 1fr auto;\n  margin-left: 0.8rem;\n  text-align: right;\n}\n.next [data-icon] {\n  background-color: #261f1f;\n  grid-column: 2;\n  transform: scaleX(-1);\n}\n.next [data-icon] .icon-pointing {\n  fill: #fff;\n}\n.next [data-icon] .icon-square {\n  fill: #261f1f;\n}\n.next:hover [data-icon], .next:focus [data-icon], .next:active [data-icon] {\n  background-color: #d10300;\n}\n.next:hover [data-icon] .icon-square, .next:focus [data-icon] .icon-square, .next:active [data-icon] .icon-square {\n  fill: #d10300;\n}\n\n.previous {\n  grid-template-columns: auto 1fr;\n}\n.previous:hover [data-icon], .previous:focus [data-icon], .previous:active [data-icon] {\n  fill: #d10300;\n}\n\n.paging-chapter-title {\n  align-self: center;\n  grid-row: 1/3;\n}\n\n.paging-chapter-number {\n  font-weight: bold;\n  grid-row: 1;\n  text-transform: uppercase;\n}\n.paging-chapter-number + .paging-chapter-title {\n  grid-row: 2;\n}\n\n[data-icon=paging] {\n  height: 2.5rem;\n  width: 2.5rem;\n  grid-row: 1/3;\n}\n\n.chapter-number {\n  font-family: slab, serif;\n  text-transform: uppercase;\n}\n\n.chapter-title {\n  font-family: script, cursive;\n  font-size: calc(1.2649110641rem + 6vw);\n  font-weight: normal;\n  line-height: 1;\n  margin-bottom: calc(3.2rem + 4vmin);\n  text-align: center;\n}\n.chapter-title span {\n  font-family: slab, serif;\n  font-size: 75%;\n  margin-right: -0.8rem;\n  text-transform: uppercase;\n}\n.chapter-title em {\n  font-size: 130%;\n  font-style: normal;\n}\n\n.ending-mark {\n  font-family: script, cursive;\n  display: block;\n  font-size: 4em;\n  line-height: 1;\n  transform: translate(-0.4rem, -70%);\n}\n\n[data-layout=top-nav] {\n  left: 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n  background-color: #fff;\n  border-bottom: 1px solid #d8d2d2;\n  display: flex;\n  justify-content: space-between;\n  line-height: 1.25;\n  padding: 0.2rem 1.6rem;\n  z-index: 1;\n}\n\n.site-title {\n  font-family: slab, serif;\n  font-size: 0.790569415rem;\n  font-weight: normal;\n}\n.site-title em {\n  font-family: script, cursive;\n  font-style: normal;\n  margin-left: -0.05rem;\n}\n.site-title em:first-of-type {\n  margin-left: -0.2rem;\n}\n\n[data-icon=nav],\n[data-icon=close] {\n  height: 1em;\n  width: 1em;\n}\n\n[data-layout=nav-panel] {\n  bottom: 0;\n  position: fixed;\n  right: 0;\n  top: 0;\n  background: #fff;\n  align-items: stretch;\n  border-left: 1px solid #d8d2d2;\n  height: 100%;\n  max-width: 15em;\n  overflow-y: auto;\n  transform: translateX(100%);\n  transition: transform 300ms cubic-bezier(0.15, -0.21, 0.5, 1.2);\n  width: 100%;\n  z-index: 2;\n}\n[data-layout=nav-panel][aria-expanded=true] {\n  transform: translateX(0);\n}\n\n.nav-header {\n  border-bottom: 1px solid #d8d2d2;\n  display: flex;\n  justify-content: space-between;\n  line-height: 1.25;\n  padding-top: 0.2rem;\n  padding-bottom: 0.2rem;\n}\n\n.nav-title {\n  font-size: 0.790569415rem;\n  text-transform: uppercase;\n  text-align: center;\n  width: 100%;\n}\n\n[data-layout=nav-inner] {\n  display: flex;\n  flex-direction: column;\n  padding: 0.8rem 0;\n}\n\n.menu-btn {\n  display: flex;\n}\n.menu-btn:hover [data-icon], .menu-btn:focus [data-icon], .menu-btn:active [data-icon] {\n  fill: #d10300;\n}\n.nav-header .menu-btn {\n  margin-right: 0.8rem;\n}\n\n[data-layout=footer] {\n  font-size: 0.790569415rem;\n  padding-bottom: 0.2rem;\n  padding-top: 0.2rem;\n}\n[data-layout=footer]::before {\n  content: \"\";\n  border-top: 1px solid #d8d2d2;\n  display: block;\n  position: absolute;\n  left: 0;\n  right: 0;\n}\n[data-layout=footer] p {\n  margin-bottom: 0;\n  padding-top: 0.4rem;\n}","// Accessibility Init\n// ==================\n\n\n/// Chrome 44-, iOS 8+, Safari 9+\n/// @group init-a11y\naudio {\n  :not([controls]) {\n    display: none;\n  }\n}\n\n\n/// Specify the progress cursor of updating elements.\n/// @group init-a11y\n[aria-busy='true'] {\n  cursor: progress;\n}\n\n\n/// Specify the pointer cursor of trigger elements.\n/// @group init-a11y\n[aria-controls] {\n  cursor: pointer;\n}\n\n\n/// Specify the unstyled cursor of disabled,\n/// not-editable, or otherwise inoperable elements.\n/// @group init-a11y\n[aria-disabled] {\n  cursor: default;\n}\n\n\n/// Internet Explorer 10-\n/// @group init-a11y\n[hidden] {\n  display: none;\n}\n","// Forms Init\n// ==========\n\n\n/// Internet Explorer 11-\n/// @group init-forms\nbutton {\n  overflow: visible;\n}\n\n\n/// - Border-radius: iOS 8+ |\n/// - Line-height: Firefox 4+\n/// @group init-forms\ninput {\n  border-radius: 0;\n  line-height: normal;\n}\n\n\n// stylelint-disable declaration-no-important\n/// Appearance, cursors, and inner-focus\n/// for buttons and button-like inputs.\n///\n/// - Appearance: iOS 8+\n/// @group init-forms\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  appearance: button;\n  cursor: pointer;\n\n  &::-moz-focus-inner {\n    border: 0 none !important;\n    padding: 0 !important;\n  }\n}\n// stylelint-enable\n\n\n/// Address box sizing set to `content-box` in IE 8/9/10.\n/// Remove excess padding in IE 8/9/10.\n/// @group init-forms\n[type='checkbox'],\n[type='radio'] {\n  box-sizing: border-box;\n  padding: 0;\n}\n\n\n/// Firefox 36+\n/// @group init-forms\n[type='number'] {\n  width: auto;\n}\n\n\n/// Chrome 45+, Safari 9+\n/// @group init-forms\n[type='search'] {\n  appearance: textfield;\n}\n\n\n/// Specify the background-color,\n/// and the inherited color/font of form elements.\n/// @group init-forms\nbutton,\ninput,\nselect,\ntextarea {\n  background-color: transparent;\n  color: inherit;\n  font-family: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n}\n\n\n/// Remove default vertical scrollbar in IE 8/9/10/11,\n/// and specify the resizability of textareas.\n/// @group init-forms\ntextarea {\n  overflow: auto;\n  resize: vertical;\n}\n","// Media Init\n// ==========\n\n\n/// Remove border when inside `a` element in IE 8/9/10.\n/// @group init-media\nimg {\n  border: 0;\n}\n\n\n/// Internet Explorer 11-\n/// @group init-media\nsvg {\n  &:not(:root) {\n    overflow: hidden;\n  }\n}\n\n\n/// Specify the alignment of media elements.\n/// @group init-media\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  max-width: 100%;\n  vertical-align: middle;\n}\n","// Typography Init\n// ===============\n\n\n/// Remove the gray background color from active links in IE 10.\n/// Improve readability of focused elements\n/// when they are also in an active/hover state.\n/// @group init-type\na {\n  background-color: transparent;\n\n  &:active,\n  &:hover {\n    outline: 0;\n  }\n}\n\n\n/// Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n/// @group init-type\nabbr {\n  &[title] {\n    border-bottom: 1px dotted;\n  }\n}\n\n\n/// Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n/// @group init-type\nb,\nstrong {\n  font-weight: bold;\n}\n\n\n/// Specify the font family of code elements.\n/// @group init-type\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace;\n  font-size: inherit;\n}\n\n\n/// Address styling not present in Safari and Chrome.\n/// @group init-type\ndfn {\n  font-style: italic;\n}\n\n\n/// Remove list style of nav lists.\n/// @group init-type\nnav {\n  ol,\n  ul {\n    list-style: none;\n  }\n}\n\n\n/// All browsers…\n/// @group init-type\nsmall {\n  font-size: 0.75em;\n}\n\n\n/// Prevent `sub` and `sup` affecting `line-height` in all browsers.\n/// @group init-type\nsub,\nsup {\n  font-size: 0.75em;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\n\n/// Move super-script up.\n/// @group init-type\nsup {\n  top: -0.5em;\n}\n\n\n/// Move sub-script down.\n/// @group init-type\nsub {\n  bottom: -0.25em;\n}\n","/// # Internal WebFont Helpers\n/// These internal tools are not safe for public use --\n/// but we've documented the logic for transparency,\n/// and to encourage contributions.\n///\n/// @access private\n/// @group type-helpers\n\n\n// Font Style Options\n// ------------------\n/// A constant list of valid font-style settings\n/// (not including `normal`, which is also a valid weight).\n/// @access private\n/// @group type-helpers\n$_a_FONT-STYLES: (\n  'italic',\n  'oblique',\n);\n\n\n// Font Weight Options\n// -------------------\n/// A constant list of valid font-weight settings\n/// (not including `normal`, which is also a valid style).\n/// @access private\n/// @group type-helpers\n$_a_FONT-WEIGHTS: (\n  '100',\n  '200',\n  '300',\n  '400',\n  '500',\n  '600',\n  '700',\n  '800',\n  '900',\n  'bold',\n  'bolder',\n  'lighter',\n);\n\n\n// Font Weight Options\n// -------------------\n/// A constant map of valid font formats,\n/// with their file extension and full `format()` name.\n/// The order given here will also be used in defining font-face src order.\n/// @access private\n/// @group type-helpers\n$_a_FONT-FORMATS: (\n  'local': null,\n  'eot': 'embedded-opentype',\n  'woff2': 'woff2',\n  'woff': 'woff',\n  'ttf': 'truetype',\n  'otf': 'opentype',\n  'svg': 'svg',\n  'svgz': 'svg',\n);\n\n\n// stylelint-disable function-url-quotes\n// Font URL\n// --------\n/// Interpolate a font path and format-type\n/// to create the proper font-src import URL.\n/// This private function does not prepend any global `$font-path`,\n/// leaving that to the public [`font-url()`][font-url] function.\n///\n/// [font-url]: fonts.html#function--font-url\n///\n/// @since type-4.0.0 -\n/// - NEW: Added to format font-paths correctly,\n///   with file extension and suffix.\n///\n/// @access private\n/// @group type-helpers\n///\n/// @param {string} $path -\n///   The base path for this font and format.\n///   If no file extension is included,\n///   we add one based on the format desired.\n///   Local and base64 font names & URI's are returned without any change.\n/// @param {string} $format -\n///   Short-form of the format to import, e.g. `woff` or `eot`.\n/// @param {string} $svgid -\n///   SVG fragment-identifier to append on svg fonts.\n///   The initial `#` character is optional,\n///   and will be added when missing.\n/// @param {boolean} $iefix -\n///   Optionally append an `?#iefix` suffix to `eot` fonts.\n/// @return {string} -\n///   Font-format URL for importing.\n@function _a_font-url(\n  $path,\n  $format,\n  $svgid: null,\n  $iefix: false\n) {\n  $suffix: '';\n\n  // some formats need no adjustments\n  @if ($format == 'local') or str-index($path, 'data:') {\n    @return $path;\n  }\n\n  // add file format when needed\n  $ext: '.' + $format;\n  $ext: if(str-index($path, $ext), '', $ext);\n\n  // add svgid when needed\n  @if str-index($format, 'svg') and ($svgid) and (not str-index($path, '#')) {\n    $suffix: if(str-index($svgid, '#'), $svgid, '#' + $svgid);\n  }\n\n  // add iefix when needed\n  @if str-index($format, 'eot') and ($iefix) and  (not str-index($path, '?')) {\n    $suffix: '?#iefix';\n  }\n\n  // compile and return\n  @return $path + $ext + $suffix;\n}\n// stylelint-enable\n\n\n// Font Src\n// --------\n/// Get the font `src` value for a given font path and format,\n/// including both `url()` and `format()`.\n/// This also sorts formats,\n/// organizing them into the proper output order for browser-compatability.\n///\n/// @since type-4.0.0 -\n/// - BREAKING: No longer accepts the `$format` parameter.\n///\n/// @access private\n/// @group type-helpers\n///\n/// @param {string | map} $path -\n///   Path to the font files (leaving off the file format indicator),\n///   or data-uri for font-src.\n/// @param {string} $format -\n///   Short-form (e.g. 'eot' or 'otf') font-format to import.\n/// @param {string} $suffix [null] -\n///   SVG or EOT-iefix suffix to be added to font url.\n/// @return {list} -\n///   CSS-ready `url() format()` combination for font-face `src` output.\n@function _a_font-src(\n  $path,\n  $format\n) {\n  $format-name: map-get($_a_FONT-FORMATS, $format);\n  $format-name: if($format-name, format($format-name), '');\n\n  // stylelint-disable-next-line function-url-quotes\n  $path: _a_font-url($path, $format, $iefix: true);\n  @return font-url($path) $format-name;\n}\n\n\n// Font Src List\n// -------------\n/// Build a `src` list\n/// for one `@font-face` declaration block.\n///\n/// @since type-4.0.0 -\n/// - NEW: Added to sort and compile src lists,\n///   with local() options and proper format order.\n///\n/// @access private\n/// @group type-helpers\n///\n/// @param {map} $data -\n///   Normalized map of format/url pairs to import.\n/// @return {list} -\n///   Compiled list of `url() format()` pairs,\n///   ready to apply in the `src` property.\n@function _a_font-src-list(\n  $data\n) {\n  $src: ();\n\n  // Use best-practice format order\n  @each $format in map-keys($_a_FONT-FORMATS) {\n    $url: map-get($data, $format);\n\n    @if $url {\n      $item: ();\n\n      @if ($format == 'local') {\n        @each $name in $url {\n          $li: local($name);\n          $item: append($item, $li, 'comma');\n        }\n      } @else {\n        $li: _a_font-src($url, $format);\n        $item: append($item, $li, 'comma');\n      }\n\n      $src: join($src, $item, 'comma');\n    }\n  }\n\n\n  @return $src;\n}\n\n\n// Font Get Variants\n// -----------------\n/// Extract all the variant key/data pairs,\n/// and return a filtered font-map including only font-variants.\n///\n/// @since 0.1.0 -\n/// - NEW: Supports `'bold italic'` weight/style syntax\n///   in addition to `('bold', 'italic')`\n/// @since type-4.0.0 -\n/// - NEW: Added to extract variant-data from a font-map\n///\n/// @access private\n/// @group type-helpers\n///\n/// @param {map} $font -\n///   A map of all the data for a single font.\n/// @return {map} -\n///   Only the variants provided in the given font-map.\n@function _a_font-get-variants(\n  $font\n) {\n  $var-options: join($_a_FONT-STYLES, $_a_FONT-WEIGHTS);\n  $var-options: append($var-options, 'normal');\n  $variants: ();\n\n  @each $key, $value in $font {\n    // get the first setting, and make sure it's a string…\n    $first: '#{nth($key, 1)}';\n    $first: if(str-index($first, ' '), nth(_a_split($first, ' '), 1), $first);\n\n    // if it's a variant, add it to the list…\n    @if index($var-options, $first) {\n      $variants: map-merge($variants, ($key: $value));\n    }\n  }\n\n  @return $variants;\n}\n\n\n// Import Font-Face [mixin]\n// ------------------------\n/// Compile provided font-variant data into a\n/// CSS `@font-face` import.\n///\n/// @access private\n/// @group type-helpers\n/// @example scss\n///   @include _a_import-font-face(\n///     $name: 'Franklin Gothic',\n///     $weight: 'normal',\n///     $style: 'normal',\n///     $data: (\n///       'local': 'Franklin Gothic' ('franklin-gothic'),\n///       'woff2': 'path/to/franklin-bolditalic-font.woff2',\n///       'ttf': 'path/to/franklin-bolditalic-font.ttf',\n///     )\n///   );\n///\n/// @param {string} $name -\n///   The font name.\n/// @param {string} $weight -\n///   The font-weight property,\n///   e.g. `bold` or `300`.\n/// @param {string} $style -\n///   The font-style property,\n///   e.g. `normal` or `italic`.\n/// @param {map} $data -\n///   Path to the font files (leaving off the file-format extension),\n///   or map of format/path pairs.\n/// @param {list | null} <key>.unicode-range -\n///   Optionally import only specific unicode ranges.\n///   See [MDN unicode-range documentation][unicode] for details.\n///\n///   [unicode]: https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/unicode-range\n/// @output `@font-face` CSS-block for importing a given font variant.\n/// @throws When a generic variant-path is provided\n///   without formats for interpolation.\n@mixin _a_import-font-face(\n  $name,\n  $weight,\n  $style,\n  $data,\n  $unicode: null\n) {\n  // Special handling of eot with local or data\n  $eot: map-get($data, 'eot');\n  $local: map-get($data, 'local');\n  $double: false;\n\n  @if $eot {\n    $eot: _a_font-url($eot, 'eot');\n    $eot: font-url($eot);\n\n    @if (not str-index($eot, 'data:')) {\n      @each $format, $url in $data {\n        $has-data: (($format != 'local') and str-index($url, 'data:'));\n\n        @if ($format == 'local') or $has-data {\n          $double: true;\n        }\n      }\n    }\n  }\n\n  // Format values for CSS\n  $name: quote($name);\n  $style: unquote($style);\n  $weight: unquote($weight);\n\n  @if $unicode {\n    $new: ();\n\n    @each $code in $unicode {\n      $new: append($new, unquote($code), 'comma');\n    }\n\n    $unicode: $new;\n  }\n\n  // Output…\n  @if $double {\n    $data: map-remove($data, 'eot');\n\n    // ie-only\n    @font-face {\n      font-family: $name;\n      font-style: $style;\n      font-weight: $weight;\n      src: $eot;\n      unicode-range: $unicode;\n    }\n\n    // everything else\n    @font-face {\n      font-family: $name;\n      font-style: $style;\n      font-weight: $weight;\n      src: _a_font-src-list($data);\n      unicode-range: $unicode;\n    }\n  } @else {\n    // combined output\n    @font-face {\n      font-family: $name;\n      font-style: $style;\n      font-weight: $weight;\n      src: $eot;\n      src: _a_font-src-list($data);\n      unicode-range: $unicode;\n    }\n  }\n}\n","// Type\n// ====\n\n@include import-webfonts;\n\n:root {\n  @include colors--();\n  @include font-family('open');\n  @include var-contrasted('background');\n  font-size: size('responsive');\n  line-height: ratio('text-ratio');\n}\n\nh1,\nh2,\nh3 {\n  @include font-family('slab');\n  line-height: 1.25;\n}\n\nh1 {\n  font-size: size('xlarge');\n}\n\nh2 {\n  font-size: size('large');\n}\n\nh3 {\n  font-size: size('medium');\n}\n\np {\n  margin-bottom: size('gutter');\n}\n\n.page-title {\n  @include font-family('slab');\n  font-weight: normal;\n  margin-bottom: size('gutter');\n  text-transform: uppercase;\n}\n\n// Links\n// -----\n\na {\n  #{$link} {\n    color: var-color('text');\n    text-decoration: none;\n  }\n\n  #{$focus} {\n    color: var-color('action');\n  }\n}\n\n// Special\n// -------\n\n[data-hidden],\n.is-hidden {\n  @include is-hidden;\n}\n","/// # Tokens » CSS Variables\n/// *aka \"Custom Properties\"*\n///\n/// CSS variables are a useful way to manage\n/// values that might change in relation to the DOM –\n/// something that Sass variables cannot do.\n/// In many cases,\n/// we find it helpful to manage variables in Sass,\n/// and output CSS properties as-needed.\n/// These tools help integrate Accoutrement map values\n/// with CSS variables\n/// to keep that relationship intact.\n///\n/// The Core feature provides generic variable logic,\n/// while each plugin provides specialized shortcuts\n/// for maintaining:\n/// - [time](animate-time-vars.html) variables\n/// - [easing](animate-ease-vars.html) variables\n/// - [change](animate-change-vars.html) variables\n/// - [color](color-vars.html), variables\n/// - [scale](scale-vars.html) variables\n/// - [font](type-font-vars.html) variables\n///\n/// Some of the use-cases covered here\n/// can be written more simply in pure CSS.\n/// but these tools provide two main advantages:\n/// - Core logic allows plugins to build additional shortcuts\n/// - Explicit relationships make code more meaningful\n/// @group core-vars\n\n\n// Var Name\n// --------\n/// Formats a token name as a CSS variable (custom property),\n/// with optional prefix\n///\n/// @since 2.0.0 -\n/// - NEW: Initial release\n///\n/// @access private\n///\n/// @param {string} $name -\n///   The name of the token to be used as a variable\n/// @param {string | null} $prefix [null] -\n///   Optional prefix added to the token name\n@function _a_var-name(\n  $name,\n  $prefix: null\n) {\n  $string: unquote('--#{$prefix}#{$name}');\n  $string: _a_str-replace($string, ' ', '-', 'all');\n  @return $string;\n}\n\n\n// Tokens--\n// --------\n/// Convert any Accoutrement map\n/// into CSS custom properties (aka variables).\n///\n/// - Token names that start with `_` or `-` are considered \"private\"\n///   and will not be output as variables\n/// - Tokens that contain a simple alias with no adjustments\n///   will be output with a `var()` value,\n///   keeping the alias relationship intact\n///\n/// @since 2.0.0 -\n/// - NEW: Initial release\n///\n/// @group core-vars\n/// @example scss\n///   $colors: (\n///     '_brand': hsl(120, 50%, 50%),\n///     'text': '#_brand' ('shade': 50%),\n///     'border': '#text',\n///   );\n///   :root {\n///     @include tokens--($colors, 'color-');\n///   }\n///\n/// @param {map} $map -\n///   Accoutrement map of tokens to set as css variables\n/// @param {string | null} $prefix [null] -\n///   Optional prefix for naming token variables\n/// @output\n///   Custom properties for all public tokens in the map\n@mixin tokens--(\n  $map,\n  $prefix: null\n) {\n  @each $token in map-keys($map) {\n    @if not is-private-token($token) {\n      @include token--($map, $token, $prefix: $prefix);\n    }\n  }\n}\n\n\n// Token--\n// -------\n/// Set a single custom property based on a map-token,\n/// with optional alias, fallback, and prefixing\n///\n/// @since 2.0.0 -\n/// - NEW: Initial release\n///\n/// @group core-vars\n/// @example scss\n///   $colors: (\n///     '_brand': hsl(120, 50%, 50%),\n///     'text': '#_brand' ('shade': 50%),\n///     'border': '#text',\n///   );\n///   .example {\n///     @include token--($colors, 'border');\n///     @include token--($colors, 'outline', 'border', red);\n///   }\n///\n/// @param {map} $map -\n///   Accoutrement map of tokens to use as source\n/// @param {*} $token -\n///   Token name available in the source `$map`\n/// @param {string | null} $value [null] -\n///   Optional new value for the given token\n/// @param {*} $fallback [true] -\n///   The optional fallback value for a `var()` function:\n///   - `true` will generate a fallback based on the token value\n///   - A token name will fallback to the value of that\n///     css-variable and then to the token's calculated value\n///   - Any other fallback will be passed through unchanged\n/// @param {string | null} $prefix [null] -\n///   Optional prefix used for naming token variables\n@mixin token--(\n  $map,\n  $token,\n  $value: null,\n  $fallback: true,\n  $prefix: null\n) {\n  $prop: _a_var-name($token, $prefix);\n  $val: $value or $token;\n  $ref: $value or is-alias-for($map, $val);\n\n  @if ($ref) {\n    $val: var-token($map, $ref, $fallback, $prefix);\n  } @else {\n    $val: get-token($map, $val);\n  }\n\n  #{$prop}: $val;\n}\n\n\n// Var Token\n// ---------\n/// Access the CSS variable associated with a given token,\n/// along with a fallback value based on the token itself\n///\n/// @since 2.0.0 -\n/// - NEW: Initial release\n///\n/// @group core-vars\n/// @example scss\n///   $colors: (\n///     '_brand': hsl(120, 50%, 50%),\n///     'text': '#_brand' ('shade': 50%),\n///     'border': '#text',\n///   );\n///   .example {\n///     border-color: var-token($colors, 'border');\n///     color: var-token($colors, 'text', black);\n///   }\n///\n/// @param {map} $map -\n///   Accoutrement map of tokens to use as source\n/// @param {*} $token -\n///   Token name available in the source `$map`\n/// @param {*} $fallback [true] -\n///   The optional fallback value for a `var()` function:\n///   - `true` will try to generate a fallback based on the color value\n///   - A color name will fallback to the value of that\n///     css-variable and then to the color's calculated value\n///   - Any other fallback will be passed through unchanged\n/// @param {string | null} $prefix [null] -\n///   Optional prefix used for naming token variables\n/// @return {string} -\n///   CSS variable call, in the format:\n///   `var(--<color>, <fallback>)`\n@function var-token(\n  $map,\n  $token,\n  $fallback: true,\n  $prefix: null\n) {\n  $var: _a_var-name($token, $prefix);\n\n  @if ($fallback == true) {\n    @if map-has-key($map, $token) {\n      @return var($var, get-token($map, $token));\n    }\n  } @else if map-has-key($map, $fallback) {\n    @return var($var, var-token($map, $fallback, true, $prefix));\n  } @else if $fallback {\n    @return var($var, $fallback);\n  }\n\n  @return var($var);\n}\n","/// ### Using WebFonts\n///\n/// Once you've configured your webfont data into a map,\n/// these tools will help you access the data in various ways:\n/// from creating `@font-face` imports,\n/// to calling font-families by any given alias.\n///\n/// @group type-fonts\n\n\n// Font [function]\n// ---------------\n/// Retrieve and normalize font data from the `$fonts` map\n///\n/// @since 2.0.0 -\n/// - BREAKING: Non-map fonts are interpreted as font-stacks\n/// - BREAKING: Normalized font-data uses proper name-quotation,\n///   and ignores missing or private names/stacks\n/// @since 1.0.0 -\n/// - NEW: Provided to access and normalize a map of font data\n///   for any key in your global `$fonts` map\n/// - NEW: Accepts `$source` map argument,\n///   for custom source-palette\n///\n/// @group type-fonts\n/// @param {*} $font -\n///   A key for accessing the desired font in `$fonts`\n/// @param {map} $source [$fonts] -\n///   Optional accoutrement-format map of fonts\n///   to use as the origin palette\n/// @return {map} -\n///   A parsed and normalized map of font-data\n@function font(\n  $font,\n  $source: $fonts\n) {\n  $data: get-token($source, $font);\n  $normal: _a_normalize-font($data, $font, $source);\n  @return $normal;\n}\n\n\n// Font-URL [function]\n// -------------------\n/// This is a wrapper for the CSS `url()` function,\n/// which simply prepends the global `$font-path` when appropriate.\n///\n/// @since type-4.0.0 -\n/// - BUGFIX: Supports Base64 data URI's, without prepending font-path\n///\n/// @group type-fonts\n/// @example scss\n///   $font-path: '../fonts/';\n///   $src: font-url('sans/my-sans-font.woff2');\n///   /* #{$src} */\n///\n/// @param {string} $path -\n///   A path relative to the fonts directory.\n/// @return {string} -\n///   The full path to a font file, in CSS `url('my/path')` format.\n@function font-url(\n  $path\n) {\n  @if not str-index($path, 'data:') {\n    $path: $font-path + $path;\n  }\n\n  @return url(quote($path)); // stylelint-disable-line function-url-quotes\n}\n\n\n// Font Family [function]\n// ----------------------\n/// Access a font-family from your `$fonts` map,\n/// with name and font-stack.\n///\n/// @since 1.0.0 -\n/// - NEW: Accepts `$source` map argument,\n///   for custom source-palette\n/// @since type-4.0.0 -\n/// - BUGFIX: Provides the correct name for fonts when an alias is given\n///\n/// @group type-fonts\n/// @example scss\n///   $fonts: (\n///     'sans': (\n///       'name': 'FranklinGothic',\n///       'stack': (Helvetica, Arial, sans-serif),\n///     ),\n///   );\n///\n///   html {\n///     font-family: font-family('sans');\n///   }\n///\n/// @param {string} $key -\n///   The key-name of a font in your `$fonts` map.\n/// @param {map} $source [$fonts] -\n///   Optional accoutrement-format map of fonts\n///   to use as the origin palette\n/// @return {String} -\n///   The full font-stack for the given font,\n///   ready for output with the `font-family` property.\n@function font-family(\n  $key,\n  $source: $fonts\n) {\n  $font: font($key, $source);\n  @return map-get($font, 'stack');\n}\n\n\n// Font Family [mixin]\n// -------------------\n/// Output a font-stack to font-family based on your `$fonts` configuration.\n///\n/// @since 1.0.0 -\n/// - NEW: Accepts `$source` map argument,\n///   for custom source-palette\n///\n/// @group type-fonts\n/// @example scss\n///   $fonts: (\n///     'FranklinGothic': (\n///       'stack': (Helvetica, Arial, sans-serif),\n///     ),\n///     'sans': '#FranklinGothic',\n///   );\n///\n///   html {\n///     @include font-family('sans');\n///   }\n///\n/// @param {string} $key -\n///   The key-name of a font in your `$fonts` map.\n/// @param {map} $source [$fonts] -\n///   Optional accoutrement-format map of fonts\n///   to use as the origin palette\n@mixin font-family(\n  $key,\n  $source: $fonts\n) {\n  font-family: font-family($key, $source);\n}\n\n\n// Font Face [mixin]\n// -----------------\n/// Import any local webfont defined in your `$fonts` configuration\n/// (variants without a path will not be imported).\n///\n/// @since 1.0.0 -\n/// - NEW: Accepts `$source` map argument,\n///   for custom source-palette\n/// @since type-4.0.0 -\n/// - BREAKING: No longer accepts the `$formats` parameter\n///\n/// @group type-fonts\n/// @example scss\n///   $fonts: (\n///     'body-font': (\n///       'name': 'Source Sans Pro',\n///       'formats': 'woff2' 'woff' 'eot',\n///       'normal': 'sans/sourcesanspro-regular-webfont',\n///       'italic': 'sans/sourcesanspro-italic-webfont',\n///       'bold': 'sans/sourcesanspro-bold-webfont',\n///     ),\n///   );\n///   @include font-face('body-font');\n///\n/// @param {string} $key -\n///   The key-name of a font in your `$fonts` map\n/// @param {map} $source [$fonts] -\n///   Optional accoutrement-format map of fonts\n///   to use as the origin palette\n/// @output `@font-face` import blocks for any defined font-variants.\n@mixin font-face(\n  $key,\n  $source: $fonts\n) {\n  $font: font($key, $source);\n  $variants: _a_font-get-variants($font);\n  $name: map-get($font, 'name');\n\n  @if (length($variants) > 0) {\n    $unicode: map-get($font, 'unicode-range');\n\n    @each $variant, $data in $variants {\n      $weight: nth($variant, 1);\n      $style: nth($variant, 2);\n      @include _a_import-font-face($name, $weight, $style, $data, $unicode);\n    }\n  }\n}\n\n\n// Import WebFonts [mixin]\n// -----------------------\n/// Find all the fonts that include data for imports,\n/// and generate `@font-face` blocks for each individual font and variant.\n///\n/// @since 2.0.0 -\n/// - NEW: Accepts `$source` parameter,\n///   which uses global `$fonts` by default\n/// - BREAKING: No longer imports private fonts,\n///   but will import a direct alias of the private font\n/// @since 1.0.0 -\n/// - BREAKING: No longer accepts the `$fonts` parameter\n/// @since type-4.0.0 -\n/// - BREAKING: No longer accepts the `$formats` parameter\n///\n/// @group type-fonts\n/// @example scss\n///   $fonts: (\n///     'body-font': (\n///       'name': 'Source Sans Pro',\n///       'formats': 'woff2' 'woff' 'eot',\n///       'normal': 'sans/sourcesanspro-regular-webfont',\n///       'italic': 'sans/sourcesanspro-italic-webfont',\n///       'bold': 'sans/sourcesanspro-bold-webfont',\n///     ),\n///     // alias keys, and fonts without path data will be ignored…\n///     'alias': '#body-font',\n///     'google-font': (\n///       'source': 'http://fonts.google.com/',\n///     ),\n///   );\n///   @include import-webfonts;\n///\n/// @param {map} $source [$fonts] -\n///   Optional accoutrement-format map of fonts\n///   to use as the origin palette\n/// @output Any number of `@font-face` blocks.\n@mixin import-webfonts(\n  $source: $fonts\n) {\n  @each $key, $font in $source {\n    @if not is-alias-for($source, $key) and not is-private-token($key) {\n      @include font-face($key);\n    }\n  }\n}\n","/// # Contrast & Accessibility\n/// @group color-contrast\n\n\n// WCAG Contrast\n// -------------\n/// These named contrast-ratios are defined by the [WCAG][WCAG].\n///\n/// [WCAG]: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast\n///\n/// @access private\n$WCAG-CONTRAST: (\n  'AA-large': 3,\n  'AA': 4.5,\n  'AAA': 7,\n);\n\n\n// Contrast\n// --------\n/// For any color, select the best contrast among a set of options.\n/// For best results, pass in a combination of light and dark colors\n/// to contrast against – \n/// or define default `contrast-light` and `contrast-dark` values\n/// (with or without a private `_` prefix)\n/// in your global `$colors` map.\n///\n/// @group color-contrast\n/// @example scss - max contrast\n///   $colors: (\n///     'background': blue,\n///     'light': #eee,\n///     'dark': #111,\n///   );\n///   html {\n///     color: contrast(\n///       'background',\n///       'light', 'dark', black, white\n///     );\n///   }\n/// @example scss - min contrast\n///   $colors: (\n///     'background': blue,\n///     'light': #eee,\n///     'dark': #111,\n///   );\n///   html {\n///     color: contrast(\n///       'background',\n///       'light', 'dark', black, white,\n///       'AAA'\n///     );\n///   }\n///\n/// @param {string | list} $color -\n///   The name or value of a color.\n/// @param {colors | min-contrast} $options... -\n///   List of colors to contrast against.\n///   This function will choose the best contrast\n///   of all the options provided,\n///   or the `contrast-light` and `contrast-dark` defaults\n///   defined in your color palette or the factory settings.\n///\n///   - Any  `{'AA' | 'AA-large' | 'AAA' | 0-21 }` values\n///     will be treated as a minimum color-contrast ratio –\n///     and will return the minimum accessible option,\n///     rather than the maximum contrast.\n/// @return {color} -\n///   Whichever color-option has the highest contrast-ratio to `$color`,\n///   or the minimum needed contrast to meet a given accessibility ratio.\n@function contrast(\n  $color,\n  $options...\n) {\n  @return _a_best-contrast($color, $options, 'color');\n}\n@include _a_register-function('contrast');\n\n\n// Var-Contrast\n// ------------\n/// An extension of the `contrast` function,\n/// designed to output CSS variables\n/// rather than simple color values.\n///\n/// @group color-contrast\n/// @since 2.1.0 -\n/// - NEW: Provides access to contrast colors as CSS-variables, when defined\n/// @example scss - max contrast / no variable names\n///   $colors: (\n///     'background': blue,\n///     'light': #eee,\n///     'dark': #111,\n///   );\n///   html {\n///     color: var-contrast(\n///       'background',\n///       'light', 'dark', black, white\n///     );\n///   }\n/// @example scss - min contrast / variable names\n///   $colors: (\n///     'background': blue,\n///     'light': #eee,\n///     'dark': #111,\n///   );\n///   html {\n///     color: var-contrast(\n///       'background',\n///       'light', 'dark', black, white,\n///       'AAA'\n///     );\n///   }\n///\n/// @param {string | list} $color -\n///   The name or value of a color.\n/// @param {colors | min-contrast} $options... -\n///   List of colors to contrast against.\n///   This function will choose the best contrast\n///   of all the options provided,\n///   or the `contrast-light` and `contrast-dark` defaults\n///   defined in your color palette or the factory settings.\n///\n///   - Any  `{'AA' | 'AA-large' | 'AAA' | 0-21 }` values\n///     will be treated as a minimum color-contrast ratio –\n///     and will return the minimum accessible option,\n///     rather than the maximum contrast.\n/// @return {color | var()} -\n///   CSS Variable for the color-option\n///   that has the highest contrast-ratio to `$color`,\n///   or the color if no variable exists.\n@function var-contrast(\n  $color,\n  $options...\n  ) {\n  $contrast: _a_best-contrast($color, $options);\n  $name: map-get($contrast, 'name');\n  $color: map-get($contrast, 'color');\n\n  @if ($name != $color) and not is-private-token($name) {\n    $name: _a_var-name($name, $color-var-prefix);\n    @return var($name, $color);\n  }\n\n  @return $color;\n}\n@include _a_register-function('var-contrast');\n\n\n// Contrasted\n// ----------\n/// Apply any background color,\n/// along with the highest-contrast text color from a set of options.\n/// This works the same as the `contrast` function,\n/// but applies the resulting values to `background-color`\n/// and text `color` properties.\n///\n/// @group color-contrast\n/// @example scss - max contrast\n///   $colors: (\n///     'background': blue,\n///     'light': #eee,\n///     'dark': #111,\n///   );\n///   html {\n///     @include contrasted(\n///       'background',\n///       'light', 'dark', black, white\n///     );\n///   }\n/// @example scss - min contrast\n///   $colors: (\n///     'background': blue,\n///     'light': #eee,\n///     'dark': #111,\n///   );\n///   html {\n///     @include contrasted(\n///       'background',\n///       'light', 'dark', black, white,\n///       'AAA'\n///     );\n///   }\n///\n/// @param {string | list} $background -\n///   The name or value of your desired background color.\n/// @param {colors | min-contrast} $options... -\n///   List of colors to contrast against.\n///   This function will choose the best contrast\n///   of all the options provided,\n///   or the `contrast-light` and `contrast-dark` defaults\n///   defined in your color palette or the factory settings.\n///\n///   - Any  `{'AA' | 'AA-large' | 'AAA' | 0-21 }` values\n///     will be treated as a minimum color-contrast ratio –\n///     and will return the minimum accessible option,\n///     rather than the maximum contrast.\n/// @output -\n///   Sets the `background-color` to `$background`\n///   and `color` to the option with\n///   highest contrast against that background,\n///   or minimum contrast that still meets a given accessibility ratio.\n@mixin contrasted(\n  $background,\n  $options...\n) {\n  $background: color($background);\n\n  background-color: $background;\n  color: contrast($background, $options...);\n}\n\n\n// Var Contrasted\n// --------------\n/// Apply any background color as a CSS variable,\n/// along with the highest-contrast text color from a set of options.\n/// This works the same as the `var-contrast` function,\n/// but applies the resulting values to `background-color`\n/// and text `color` properties.\n///\n/// @group color-contrast\n/// @since 2.1.0 -\n/// - NEW: Applies contrasting colors as CSS-variables, when defined\n/// @example scss - max contrast\n///   $colors: (\n///     'background': blue,\n///     'light': #eee,\n///     'dark': #111,\n///   );\n///   html {\n///     @include var-contrasted(\n///       'background',\n///       'light', 'dark', black, white\n///     );\n///   }\n/// @example scss - min contrast\n///   $colors: (\n///     'background': blue,\n///     'light': #eee,\n///     'dark': #111,\n///   );\n///   html {\n///     @include var-contrasted(\n///       'background',\n///       'light', 'dark', black, white,\n///       'AAA'\n///     );\n///   }\n///\n/// @param {string | list} $background -\n///   The name or value of your desired background color.\n/// @param {colors | min-contrast} $options... -\n///   List of colors to contrast against.\n///   This function will choose the best contrast\n///   of all the options provided,\n///   or the `contrast-light` and `contrast-dark` defaults\n///   defined in your color palette or the factory settings.\n///\n///   - Any  `{'AA' | 'AA-large' | 'AAA' | 0-21 }` values\n///     will be treated as a minimum color-contrast ratio –\n///     and will return the minimum accessible option,\n///     rather than the maximum contrast.\n/// @output -\n///   Sets the `background-color` to `$background`\n///   and the foreground `color` to\n///   whichever option has better contrast against the given background.\n@mixin var-contrasted(\n  $background,\n  $options...\n) {\n  background-color: var-color($background);\n  color: var-contrast($background, $options...);\n}\n\n\n// Contrast Ratio\n// --------------\n/// Compare two colors using the WCAG comparison algorithm,\n/// and return the resulting contrast-ratio.\n/// Optionally pass in a standard (AA, AAA, AA-large)\n/// and return `false` when the contrast-check fails.\n///\n/// - 'AA-large' == `3:1`\n/// - 'AA' == `4.5:1`\n/// - 'AAA' == `7:1`\n///\n/// @group color-contrast\n/// @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef WCAG Contrast Definition\n/// @example scss\n///   /* black and white: #{contrast-ratio(white, black)} */\n///   /* failed 'AAA': #{contrast-ratio(white, #999, 'AAA')} */\n///\n/// @param {string | list | number} $color -\n///   The name of a color in your palette,\n///   any other color value,\n///   or even a pre-calculated numeric luminance.\n/// @param {string | list | number} $contrast -\n///   The name or value of a color to contrast against the first.\n/// @param {'AA' | 'AA-large' | 'AAA' | number | false} $require [false] -\n///   An optional WCAG contrast ratio to require.\n///   The function will return `false` if the required ratio is not met.\n/// @return {number} -\n///   The WCAG-defined contrast-ratio of two colors.\n@function contrast-ratio(\n  $base,\n  $contrast,\n  $require: false\n) {\n  $is-lumins: (type-of($base) == 'number');\n\n  $base-lumin: if($is-lumins, $base, luminance($base));\n  $contrast-lumin: if($is-lumins, $contrast, luminance($contrast));\n\n  $darker: min($base-lumin, $contrast-lumin);\n  $lighter: max($base-lumin, $contrast-lumin);\n\n  $ratio: ($lighter + 0.05) / ($darker + 0.05);\n\n  $require: _a_valid-contrast($require);\n\n  @if $require and ($ratio < $require) {\n    @return false;\n  }\n\n  @return $ratio;\n}\n\n\n// Luminance\n// ---------\n/// Get the WCAG luminance of a color in your palette.\n///\n/// @group color-contrast\n/// @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef WCAG Relative Luminance\n///\n/// @param {string | list} $color -\n///   The name or value of a color.\n/// @return {number} -\n///   WCAG-defined numeric luminance value.\n@function luminance(\n  $color\n) {\n  $color: color($color);\n  $color: _a_type-check($color, 'color', 'luminance', '$color');\n  $luminance: 0;\n\n  @each $component in 'red' 'green' 'blue' {\n    $function: $component;\n\n    @if function-exists('get-function') {\n      $function: get-function($component);\n    }\n\n    $value: call($function, $color) / 255;\n\n    @if ($value < 0.03928) {\n      $value: $value / 12.92;\n    } @else {\n      $base: ($value + 0.055) / 1.055;\n      $value: _a_pow($base, 2.4);\n    }\n\n    @if ($component == 'red') {\n      $value: $value * 0.2126;\n    } @else if ($component == 'green') {\n      $value: $value * 0.7152;\n    } @else {\n      $value: $value * 0.0722;\n    }\n\n    $luminance: $luminance + $value;\n  }\n\n  @return $luminance;\n}\n\n\n// Default Contrast\n// ----------------\n/// Access the user or system default contrast values.\n///\n/// @access private\n/// @since 2.1.0 -\n/// - NEW: Allows for either private or public defaults\n///\n/// @param {'light' | 'dark' | 'values' | 'map'} $return -\n///   Return the light value, dark value, both values, or a map\n/// @return {color-name | map} -\n///   Light or dark color-name string,\n///   or map with `light` and `dark` keys.\n@function _a_default-contrast(\n  $return: 'both'\n) {\n  $both: (\n    'light': if(\n      map-has-key($colors, 'contrast-light'),\n      'contrast-light',\n      '_contrast-light'\n    ),\n    'dark': if(\n      map-has-key($colors, 'contrast-dark'),\n      'contrast-dark',\n      '_contrast-dark'\n    ),\n  );\n\n  @if ($return == 'values') {\n    @return map-values($both);\n  }\n\n  @return map-get($both, $return) or $both;\n}\n\n\n// Best Contrast\n// -------------\n/// For any color, select the best contrast among a set of options.\n/// Returns the highest contrast by default,\n/// or the minimum contrast to meet a particular ratio cutoff.\n///\n/// Unlike the `contrast` function,\n/// `_a_best-contrast` can return the color name,\n/// output value, ratio, or all three.\n///\n/// @access private\n/// @since 2.1.0 -\n/// - NEW: Provides access to both name and value of result\n/// - NEW: Provides a smart default for comparison against a single option\n///\n/// @param {string | list} $color -\n///   The name or value of a color.\n/// @param {list} $options [null] -\n///   Any number of colors to contrast against.\n///   This function will choose the best contrast of all the options provided,\n///   or use the `contrast-light` and `contrast-dark` defaults.\n/// @param {'map' | 'name' | 'color' | 'ratio'} $return ['map'] -\n///   Return either a token name, color value, best-ratio\n///   or all three together in a map.\n/// @return {color} -\n///   Whichever color-option has the highest contrast-ratio to `$color`.\n@function _a_best-contrast(\n  $color,\n  $options: null,\n  $return: 'map'\n) {\n  $opt-colors: ();\n  $min-ratio: false;\n\n  @each $opt in $options {\n    @if (type-of($opt) == 'color') or map-has-key($colors, $opt) {\n      $opt-colors: append($opt-colors, $opt);\n    } @else {\n      $min-ratio: _a_valid-contrast($opt) or $min-ratio;\n    }\n  }\n\n  // Establish default options if they are missing\n  @if (length($opt-colors) == 0) or (not $opt-colors) {\n    $opt-colors: _a_default-contrast('values');\n  } @else if (length($opt-colors) == 1 ){\n    $use: _a_best-contrast(nth($opt-colors, 1), $return: 'name');\n    $opt-colors: append($opt-colors, $use);\n  }\n\n  // Get the colors and their contrasts\n  $color-val: color($color);\n  $color-lum: luminance($color-val);\n  $best: (\n    'name': null,\n    'color': null,\n    'ratio': null,\n  );\n\n  @each $name in $opt-colors {\n    // 22 is above the highest possible, 0 is below the lowest\n    $best-ratio: map-get($best, 'ratio') or if($min-ratio, 22, 0);\n    $better: false;\n    $value: color($name);\n    $lum: luminance($value);\n    $ratio: contrast-ratio($color-lum, $lum, $min-ratio);\n\n    @if $min-ratio and $ratio {\n      $better: ($ratio < $best-ratio);\n    } @else if $ratio {\n      $better: ($ratio > $best-ratio);\n    }\n\n    @if $better {\n      $best: (\n        'name': $name,\n        'color': $value,\n        'ratio': $ratio,\n      );\n    }\n  }\n\n  @if (map-get($best, 'name')) {\n    @return map-get($best, $return) or $best;\n  }\n\n  @return false;\n}\n\n\n// Valid Contrast\n// --------------\n/// Return a valid contrast ratio or `false`\n///\n/// @access private\n/// @param {'AA' | 'AA-large' | 'AAA' | 0-21} $ratio -\n///   WCAG or 0-21 contrast ratios will pass validation,\n///   all other values will return false\n@function _a_valid-contrast(\n  $ratio\n) {\n  @if (type-of($ratio) == 'number') and ($ratio >= 1) and ($ratio <= 21) {\n    @return $ratio;\n  }\n\n  $uppercase: (\n    'aaa': 'AAA',\n    'aa': 'AA',\n    'aa-large': 'AA-large'\n  );\n\n  $ratio: map-get($uppercase, $ratio) or $ratio;\n  @return map-get($WCAG-CONTRAST, $ratio);\n}\n","// Hidden\n// ======\n\n\n/// # Accessibility\n///\n/// A simple set of utilities\n/// for handling text-visibility\n/// and screen-reader accessibility\n/// across your site.\n///\n/// @group type-a11y\n\n\n// Is Hidden\n// ---------\n/// Hide an element using either the `clip` or `position` method.\n/// @group type-a11y\n/// @param {'clip' | 'position'} $method ['clip'] -\n///   The hiding method to use.\n@mixin is-hidden(\n  $method: 'clip'\n) {\n  @if $method == 'position' {\n    @include _a_is-hidden--position;\n  } @else {\n    @include _a_is-hidden--clip;\n  }\n}\n\n\n// Is Hidden -- Position\n// ---------------------\n/// Hide an element by positioning it off the page.\n/// @group type-a11y\n/// @access private\n@mixin _a_is-hidden--position {\n  left: -9999px;\n  pointer-events: none;\n  position: absolute;\n  top: -9999px;\n}\n\n\n// Is Hidden -- Clip\n// -----------------\n/// Hide an element by clipping it in place.\n/// @group type-a11y\n/// @access private\n@mixin _a_is-hidden--clip {\n  clip: rect(1px, 1px, 1px, 1px);\n  clip-path: inset(1px 1px 1px 1px);\n  height: 1px;\n  overflow: hidden;\n  pointer-events: none;\n  position: absolute;\n  width: 1px;\n}\n\n\n","// Grid Layout\n// ===========\n\n[data-layout='grid'] {\n  display: grid;\n  grid-template-rows: min-content 1fr min-content;\n  margin: 0 auto;\n  min-height: 100vh;\n  padding: 0 size('double-gutter') size('half-shim');\n}\n\n[data-layout='header'] {\n  margin-top: size('double-gutter');\n}\n\n[data-layout='header'],\n[data-layout='main'],\n[data-layout='footer'] {\n  max-width: size('page');\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n}\n\n[data-layout='main'] {\n  margin-bottom: size('gutter');\n}\n","// TOC Link List\n// =======\n\n.link-list {\n  display: flex;\n  flex-direction: column;\n  list-style-type: none;\n  line-height: 1.5;\n}\n\n.link-list-intro {\n  display: block;\n}\n\n.link-list-item {\n  @include font-family('open');\n  display: block;\n  font-size: size('xsmall');\n  padding: size('half-shim') size('shim') size('half-shim') size('gutter');\n  position: relative;\n\n  // make sure TOC menu lines up with title\n  .toc-archive & {\n    margin-left: negative('gutter');\n  }\n\n  &:visited {\n    color: color('text-light');\n  }\n\n  #{$focus} {\n    background-color: color('active');\n    color: color('action');\n\n    .toc-archive & {\n      background-color: transparent;\n    }\n  }\n}\n\n// Map nav locations for highlighting active page\n$nav-locations: (\n  'wu-wei',\n  'non-being',\n  'no-name',\n  'laissez-faire',\n  'compatible-opposites',\n  'profit-and-thieves',\n  'the-common-good',\n  'see-the-world-as-yourself',\n  'know-your-limitations',\n  'a-time-for-everything',\n  'approval-and-pride',\n  'the-straight-pat',\n  'the-way-it-is',\n  'to-laugh-or-not-to-laugh',\n  'simply-be-yourself',\n  \"a-good-man's-job\",\n  'the-uncarved-block',\n  'master-yourself',\n  'know-how-to-yield',\n  'failure-and-opportunity',\n  'non-tao',\n  'forgiveness',\n  'good-and-evil',\n  'not-knowing',\n  'all-things-change',\n  'nothing-left-undone',\n  'passing-judgement',\n  'the-soft-dissolves-the-hard',\n  'peace-and-violence'\n);\n\n// Highlight active page\n@each $location in $nav-locations {\n  [data-location='#{$location}'] {\n    [data-active='#{$location}'] {\n      a {\n        font-weight: bold;\n\n        @include before('-') {\n          @include position(null null -100% 0);\n          @include font-family('script');\n          font-size: 80px;\n          position: absolute;\n          transform: rotate(90deg);\n        }\n      }\n\n      a:link {\n        color: color('action-hover');\n      }\n\n      a:visited {\n        color: color('text-light');\n      }\n\n      #{$focus} {\n        background-color: color('active');\n        color: color('action-hover');\n      }\n    }\n  }\n}\n","// Pseudo Elements\n// ===============\n\n\n/// # Pseudo-Elements\n///\n/// Some shortcuts for creating `::before` and `::after` pseudo-elements.\n///\n/// @group type-pseudo\n\n\n// Before\n// ------\n/// Add generated content `:before` an element.\n/// @group type-pseudo\n/// @param {String} $content -\n///   A value for the `content` property.\n@mixin before(\n  $content\n) {\n  &::before {\n    content: $content;\n    @content;\n  }\n}\n\n\n// After\n// -----\n/// Add generated content `:after` an element.\n/// @group type-pseudo\n/// @param {String} $content -\n///   A value for the `content` property.\n@mixin after(\n  $content\n) {\n  &::after {\n    content: $content;\n    @content;\n  }\n}\n\n\n// Wrap Content\n// ------------\n/// Add generated content `:before` and `:after` an element.\n/// @group type-pseudo\n/// @param {List} $content -\n///   One or two values to be used for the `content` property.\n///   A single string will be used `:before` and `:after`.\n@mixin wrap-content(\n  $content: '“' '”'\n) {\n  $_before: nth($content, 1);\n\n  &::before,\n  &::after {\n    content: $_before;\n    @content;\n  }\n\n  @if length($content) > 1 {\n    &::after { content: nth($content, 2); }\n  }\n}\n","// Position Utility\n// ================\n\n\n// Position\n// --------\n/// Shortcut for positioning an element,\n/// using the common `top right bottom left` (TRBL) syntax,\n/// where a single value will be used for all sides,\n/// two values will set vertical/horizontal,\n/// and three values will set top/horizontal/bottom values.\n/// Use `null` for a value to keep it from displaying,\n/// and `auto` or `initial` to reset a given value.\n///\n/// @since 1.0.0 -\n/// Support `sticky` positioning\n///\n/// @group layout-position\n/// @example scss - stretch over the full viewport\n///   .overlay {\n///     @include position(fixed 0);\n///   }\n/// @example scss - top right offset (absolute positioning implied)\n///   .overlay {\n///     @include position(2em 2em auto auto);\n///   }\n/// @example scss - vertical offset without horizontal output\n///   .overlay {\n///     @include position(2em null);\n///   }\n///\n/// @param {list} $position [null] -\n///   A shorthand-syntax of positioning values\n///   using the common TRBL pattern,\n///   e.g. `absolute 0 0 3em auto` or `fixed 0 2%`.\n///   The position value (absolute, relative, etc)\n///   defaults to `absolute`.\n/// @output -\n///   `top`, `right`, `bottom`, `left`, and `position` properties\n/// @throws Unknown positioning value\n@mixin position(\n  $position: null\n) {\n  $types: 'static' 'relative' 'absolute' 'fixed' 'sticky';\n  $values: ('auto', null);\n  $type: 'absolute';\n  $sides: ();\n\n  // Syntax parsing\n  @each $item in $position {\n    @if (type-of($item) == 'number') or index($values, $item) {\n      $sides: append($sides, $item);\n    } @else if index($types, $item) {\n      $type: $item;\n    } @else {\n      @include _a_error(\n        'Unknown positioning value: `#{$item}`',\n        'position'\n      );\n    }\n  }\n\n  // TRBL logic\n  $length: length($sides);\n  $top: if($length > 0, nth($sides, 1), null);\n  $right: if($length > 1, nth($sides, 2), $top);\n  $bottom: if($length > 2, nth($sides, 3), $top);\n  $left: if($length > 3, nth($sides, 4), $right);\n\n  // CSS Output\n  bottom: $bottom;\n  left: $left;\n  position: unquote($type);\n  right: $right;\n  top: $top;\n}\n","// Quotes\n// ======\n\n[data-quote] {\n  @include font-family('slab');\n  font-size: size('medium');\n  margin-bottom: size('spacer');\n  position: relative;\n\n  p:last-of-type {\n    margin-bottom: size('shim');\n  }\n\n  footer {\n    @include font-family('open');\n    font-size: size('xsmall');\n    text-transform: uppercase;\n  }\n}\n\n[data-icon='quote'] {\n  height: size('quote') * 0.75;\n  position: absolute;\n  transform: translate(negative('quote'), 10%);\n  width: size('quote') * 0.75;\n\n  @include above('page-quotes') {\n    height: size('quote');\n    transform: translate((negative('quote') + negative('shim')), 10%);\n    width: size('quote');\n  }\n}\n\n.quote-box {\n  fill: none;\n  stroke-width: 4;\n\n  [data-quote='quote'] & {\n    stroke: color('quote');\n  }\n\n  [data-quote='verse'] & {\n    stroke: color('verse');\n  }\n}\n\n.quote-mark {\n  [data-quote='quote'] & {\n    fill: color('quote');\n  }\n\n  [data-quote='verse'] & {\n    fill: color('verse');\n  }\n}\n","// Media Queries\n// =============\n\n\n// Breakpoints\n// -----------\n/// Establish a map of named breakpoints.\n///\n/// If you have [Accoutrement-Scale](http://oddbird.net/accoutrement-scale/)\n/// installed, you can use the scale syntax\n/// for describing size-relationships and adjustments –\n/// and even reference `$sizes` as though they are `$breakpoints`.\n/// Otherwise, the map should contain only valid CSS length values.\n///\n/// @since 0.1.0 -\n/// - BREAKING: Uses the new [shared](core.html) map syntax,\n///   for internal references and adjustments\n///\n/// @group layout-queries\n/// @link https://zellwk.com/blog/media-query-units/\n///   PX, EM, or REM Media Queries?\n/// @example scss - defining breakpoints\n///   $breakpoints: (\n///     'small': 30em,\n///     'medium': 45em,\n///   );\n/// @example scss - using accoutrement-scale\n///   $breakpoints: (\n///     'small': 30em ('convert-units': 'browser-ems'),\n///     'medium': '#small' ('times': 1.5),\n///   );\n///\n/// @type map\n$breakpoints: () !default;\n\n\n// Break [function]\n// ----------------\n/// Return a breakpoint from the `$breakpoint` map,\n/// or the accoutrement-scale `$sizes` map if it's available.\n///\n/// @since 1.0.0 -\n/// - NEW: Accepts `$do` map argument,\n///   for on-the-fly adjustments\n/// - NEW: Accepts `$source` map argument,\n///   for custom breakpoint source-palette\n/// - NEW: Accepts `$scale` boolean argument,\n///   to turn off access to [scale](scale.html) plugin `$sizes` map\n///\n/// @group layout-queries\n///\n/// @param {string} $break -\n///   The name or value of a breakpoint\n/// @param {map | null} $do [null] -\n///   A map of function/ratio adjustments to run on the returned value\n/// @param {map} $source [$breakpoints] -\n///   Optional accoutrement-format map of breakpoints\n///   to use as the origin palette\n/// @param {boolean} $scale [true] -\n///   By default, we merge in any `$sizes` available\n///   from the [scale](scale.html) plugin --\n///   making both `$breakpoints` and `$sizes` keys available\n/// @return {length} -\n///   The retrieved value of a named breakpoint\n/// @throws `$break` is not a valid length or keyword\n@function break(\n  $break,\n  $do: null,\n  $source: $breakpoints,\n  $scale: true\n) {\n  @if ($scale) and variable-exists('sizes') and (type-of($sizes) == 'map') {\n    $source: map-merge($sizes, $source);\n  }\n\n  // get breakpoint\n  $break: get-token($source, $break, $do);\n\n  // validate\n  @if (type-of($break) != 'number') or unitless($break) {\n    @return _a_error(\n      '`#{$break}` is not a valid length or keyword for $break',\n      'break'\n    );\n  }\n\n  @return $break;\n}\n\n\n// Below [mixin]\n// -------------\n/// Generate a max–<`width`/`height`> query,\n/// for styling elements below the given viewport width.\n///\n/// To help with overlapping min/max queries,\n/// we remove `1px` (or `0.01em`) from every max value by default.\n/// You can adjust that setting\n/// to adjust min values\n/// or avoid adjustments\n/// using the global `$adjust-query-overlap` setting.\n///\n/// @since 2.0.0 -\n/// - BREAKING: min/max adjustments applied to all units (not only px/em/rem)\n/// - NEW: min/max adjustments respect `$adjust-query-overlap` global setting\n///\n/// @group layout-queries\n/// @example scss\n///   @include below(30em) {\n///     html { background: red; }\n///   }\n/// @example scss\n///   $breakpoints: ('red': 30em);\n///\n///   @include below('red') {\n///     html { background: red; }\n///   }\n///\n/// @param {length | string} $max -\n///   The name of a documented breakpoint/size,\n///   or an arbitarty length to use in the query.\n/// @param {'width' | 'height'} $prop ['width'] -\n///   The property (width or height) to test against,\n///   for a result of e.g. `(max-width: 30em)`.\n@mixin below(\n  $max,\n  $prop: 'width'\n) {\n  $value: break($max);\n  $value: _a_nudge-query($value, 'max');\n\n  @media (max-#{$prop}: #{$value}) {\n    @content;\n  }\n}\n\n\n// Above [mixin]\n// -------------\n/// Generate a min-<`width`/`height`> query,\n/// for styling elements above the given viewport width.\n///\n/// To help with overlapping min/max queries,\n/// we remove `1px` (or `0.01em`) from max values by default.\n/// You can adjust that setting\n/// to adjust min values\n/// or avoid adjustments\n/// using the global `$adjust-query-overlap` setting.\n///\n/// @since 2.0.0 -\n/// - BREAKING: min/max adjustments applied to all units (not only px/em/rem)\n/// - NEW: min/max adjustments respect `$adjust-query-overlap` global setting\n///\n/// @group layout-queries\n/// @example scss\n///   @include above(50em) {\n///     html { background: green; }\n///   }\n/// @example scss\n///   $breakpoints: ('green': 50em);\n///\n///   @include above('green') {\n///     html { background: green; }\n///   }\n///\n/// @param {length | string} $min -\n///   The name of a documented breakpoint/size,\n///   or an arbitrary length to use in the query.\n/// @param {'width' | 'height'} $prop ['width'] -\n///   The property (width or height) to test against,\n///   for a result of e.g. `(min-width: 30em)`.\n@mixin above(\n  $min,\n  $prop: 'width'\n) {\n  $value: break($min);\n  $value: _a_nudge-query($value, 'min');\n\n  @media (min-#{$prop}: #{$value}) {\n    @content;\n  }\n}\n\n\n// Between [mixin]\n// ---------------\n/// Generate a min-and-max-<`width`/`height`> query,\n/// for styling elements between given viewport widths.\n///\n/// To help with overlapping min/max queries,\n/// we remove `1px` (or `0.01em`) from every max value by default.\n/// You can adjust that setting\n/// to adjust min values\n/// or avoid adjustments\n/// using the global `$adjust-query-overlap` setting.\n///\n/// @since 2.0.0 -\n/// - BREAKING: min/max adjustments applied to all units (not only px/em/rem)\n/// - NEW: min/max adjustments respect `$adjust-query-overlap` global setting\n///\n/// @group layout-queries\n/// @example scss\n///   @include between(30em, 50em) {\n///     html { background: yellow; }\n///   }\n/// @example scss\n///   $breakpoints: (\n///     'red': 30em,\n///     'green': 50em,\n///   );\n///\n///   @include between('red', 'green') {\n///     html { background: yellow; }\n///   }\n///\n/// @param {length | string} $min -\n///   The name of a documented breakpoint/size,\n///   or an arbitarty length to use as a minimum in the query.\n/// @param {length | string} $max -\n///   The name of a documented breakpoint/size,\n///   or an arbitarty length to use as a maximum in the query.\n/// @param {'width' | 'height'} $prop ['width'] -\n///   The property (width or height) to test against,\n///   for a result of e.g. `(min-width: 30em)`.\n@mixin between(\n  $min,\n  $max,\n  $prop: 'width'\n) {\n  $value-min: break($min);\n  $value-max: _a_nudge-query($value-min, 'min');\n  $value-max: break($max);\n  $value-max: _a_nudge-query($value-max, 'max');\n\n  @media (min-#{$prop}: #{$value-min}) and (max-#{$prop}: #{$value-max}) {\n    @content;\n  }\n}\n","// Paging\n// ======\n\n// outer container of all paging elements\n.paging {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-bottom: size('gutter');\n}\n\n// the <a> container of each paging element\n.paging-link {\n  @include font-family('slab');\n  column-gap: size('shim');\n  display: grid;\n  flex: 1 0 auto;\n  font-size: size('small');\n  margin-bottom: size('shim');\n}\n\n.next {\n  grid-template-columns: 1fr auto;\n  margin-left: size('shim');\n  text-align: right;\n\n  // Is it worth it, let me work it\n  // put my icon down, flip it and reverse it\n  [data-icon] {\n    background-color: color('text');\n    grid-column: 2;\n    transform: scaleX(-1);\n\n    .icon-pointing {\n      fill: color('background');\n    }\n\n    .icon-square {\n      fill: color('text');\n    }\n  }\n\n  #{$focus} {\n    [data-icon] {\n      background-color: color('action');\n\n      .icon-square {\n        fill: color('action');\n      }\n    }\n  }\n}\n\n.previous {\n  grid-template-columns: auto 1fr;\n\n  #{$focus} {\n    [data-icon] {\n      fill: color('action');\n    }\n  }\n}\n\n.paging-chapter-title {\n  align-self: center;\n  grid-row: 1 / 3;\n}\n\n// Line of text displaying \"Chapter #\"\n.paging-chapter-number {\n  font-weight: bold;\n  grid-row: 1;\n  text-transform: uppercase;\n\n  + .paging-chapter-title {\n    grid-row: 2;\n  }\n}\n\n// applied to both paging icons\n[data-icon='paging'] {\n  @include square('quote');\n  grid-row: 1 / 3;\n}\n","/// # Accessing Sizes\n/// @group scale-sizes\n\n\n// Size [function]\n// ---------------\n/// Access a named size in your `$sizes` map,\n/// using any comparable units.\n///\n/// @since 1.0.0 -\n/// - BREAKING: The previous `$units…` vararg\n///   has been replaced with `$do` map argument,\n///   for flexible on-the-fly adjustments.\n///   Non-map `$do` values are converted to\n///   `('convert-units': $do)` before processing,\n///   to provide a shortcut for unit-conversions.\n///   `size('root', 'cm')` will continue to work,\n///   but `size('root', 'em', 10px)` should be changed to\n///   `size('root', 'em' 10px)` (with all unit args in a single list)\n/// - NEW: Accepts `$source` map argument,\n///   for custom source-palette\n///\n/// @group scale-sizes\n///\n/// @param {string} $size -\n///   The name of any size in your configuration\n/// @param {map | unit-args | null} $do [null] -\n///   A map of function/ratio adjustments to run on the returned value,\n///   or a unit followed by any necessary arguments\n///   for conversion\n/// @param {map} $source [$sizes] -\n///   Optional accoutrement-format map of sizes to use as the origin palette\n/// @return {length} -\n///   The calculated length, in the requested units.\n@function size(\n  $size,\n  $do: null,\n  $source: $sizes\n) {\n  @if ($do) and (type-of($do) != 'map') {\n    $do: ('to': $do);\n  }\n\n  $size: get-token($source, $size, $do);\n  @return if((type-of($size) == 'string'), unquote($size), $size);\n}\n\n\n// Negative [function]\n// -------------------\n/// Return the inverse value of any length,\n/// in comparable units.\n///\n/// @since 1.0.0 -\n/// - BREAKING: The previous `$units…` vararg\n///   has been replaced with `$do` map argument,\n///   for flexible on-the-fly adjustments.\n///   Non-map `$do` values are converted to\n///   `('convert-units': $do)` before processing,\n///   to provide a shortcut for unit-conversions.\n///   `size('root', 'cm')` will continue to work,\n///   but `size('root', 'em', 10px)` should be changed to\n///   `size('root', 'em' 10px)` (with all unit args in a single list)\n/// - NEW: Accepts `$source` map argument,\n///   for custom source-palette\n///\n/// @group scale-sizes\n///\n/// @param {string | length | list} $size -\n///   The name of a size in your configuration (e.g. `line-height`),\n///   or a length to be converted into different units (e.g. `24px`),\n///   or a base-size and adjustments to be made\n///   (e.g. `24px ('_minor-third': 2)`).\n///   For the sake of consistent documentation,\n///   I recommend keeping adjustments in the configuration\n///   whenever possible.\n/// @param {map | unit-args | null} $do [null] -\n///   A map of function/ratio adjustments to run on the returned value,\n///   or a unit followed by any necessary arguments\n///   for conversion\n/// @param {map} $source [$sizes] -\n///   Optional accoutrement-format map of sizes to use as the origin palette\n/// @return {length} -\n///   The calculated negative length, in the requested units.\n@function negative(\n  $size,\n  $do: null,\n  $source: $sizes\n) {\n  $size: size($size, $do, $source);\n\n  @if (type-of($size) == 'string') {\n    @if (str-index($size, 'calc(') == 1) {\n      $size: str-slice($size, 6, -2);\n    }\n\n    @return 'calc(-1 * (#{$size}))';\n  }\n\n  @return -1 * $size;\n}\n\n\n// Square [mixin]\n// --------------\n/// Create a square by setting equal CSS `height` and `width` properties\n/// with the given size & unit value.\n///\n/// @since 1.0.0 -\n/// - BREAKING: The previous `$units…` vararg\n///   has been replaced with `$do` map argument,\n///   for flexible on-the-fly adjustments.\n///   Non-map `$do` values are converted to\n///   `('convert-units': $do)` before processing,\n///   to provide a shortcut for unit-conversions.\n///   `size('root', 'cm')` will continue to work,\n///   but `size('root', 'em', 10px)` should be changed to\n///   `size('root', 'em' 10px)` (with all unit args in a single list)\n/// - NEW: Accepts `$source` map argument,\n///   for custom source-palette\n///\n/// @group scale-sizes\n///\n/// @param {string | length | list} $size -\n///   The name of a size in your configuration (e.g. `line-height`),\n///   or a length to be converted into different units (e.g. `24px`),\n///   or a base-size and adjustments to be made\n///   (e.g. `24px ('_minor-third': 2)`).\n///   For the sake of consistent documentation,\n///   I recommend keeping adjustments in the configuration\n///   whenever possible.\n/// @param {map | unit-args | null} $do [null] -\n///   A map of function/ratio adjustments to run on the returned value,\n///   or a unit followed by any necessary arguments\n///   for conversion\n/// @param {map} $source [$sizes] -\n///   Optional accoutrement-format map of sizes to use as the origin palette\n/// @output -\n///   Equal CSS height and width properties,\n///   set to the given size and units.\n@mixin square(\n  $size,\n  $do: null,\n  $source: $sizes\n) {\n  $size: size($size, $do, $source);\n\n  height: $size;\n  width: $size;\n}\n","// Chapters\n// ========\n\n.chapter-number {\n  @include font-family('slab');\n  text-transform: uppercase;\n}\n\n.chapter-title {\n  @include font-family('script');\n  font-size: size('xxlarge');\n  font-weight: normal;\n  line-height: 1;\n  margin-bottom: size('spacer');\n  text-align: center;\n\n  // de-emphasized words like and, a, the\n  span {\n    @include font-family('slab');\n    font-size: 75%;\n    margin-right: negative('shim');\n    text-transform: uppercase;\n  }\n\n  // emphasized words\n  em {\n    font-size: 130%;\n    font-style: normal;\n  }\n}\n\n.ending-mark {\n  @include font-family('script');\n  display: block;\n  font-size: size('ending-mark');\n  line-height: 1;\n  // because of the typeface, different charcters have different positions\n  transform: translate(negative('half-shim'), -70%);\n}\n","// Top Nav\n// =======\n\n[data-layout='top-nav'] {\n  @include position(0 0 null 0 fixed);\n  background-color: color('background');\n  border-bottom: 1px solid color('border-light');\n  display: flex;\n  justify-content: space-between;\n  line-height: 1.25;\n  padding: size('quarter-shim') size('gutter');\n  z-index: 1;\n}\n\n.site-title {\n  @include font-family('slab');\n  font-size: size('xsmall');\n  font-weight: normal;\n\n  em {\n    @include font-family('script');\n    font-style: normal;\n    // reduces the space between words with tags\n    margin-left: negative('scooch');\n\n    // This is super picky, but the 'e' + 'T' had too much room\n    &:first-of-type {\n      margin-left: negative('quarter-shim');\n    }\n  }\n}\n\n[data-icon='nav'],\n[data-icon='close'] {\n  @include square('icon');\n}\n\n[data-layout='nav-panel'] {\n  @include position(0 0 0 null fixed);\n  background: color('background');\n  align-items: stretch;\n  border-left: 1px solid color('border-light');\n  height: 100%;\n  max-width: size('nav-panel');\n  overflow-y: auto;\n  transform: translateX(100%);\n  transition: transform 300ms cubic-bezier(0.15, -0.21, 0.5, 1.2);\n  width: 100%;\n  z-index: 2;\n\n  &[aria-expanded='true'] {\n    transform: translateX(0);\n  }\n}\n\n.nav-header {\n  border-bottom: 1px solid color('border-light');\n  display: flex;\n  justify-content: space-between;\n  // line up with site-title bottom border\n  line-height: 1.25;\n  padding-top: size('quarter-shim');\n  padding-bottom: size('quarter-shim');\n}\n\n.nav-title {\n  font-size: size('xsmall');\n  text-transform: uppercase;\n  text-align: center;\n  width: 100%;\n}\n\n[data-layout='nav-inner'] {\n  display: flex;\n  flex-direction: column;\n  padding: size('shim') 0;\n}\n\n.menu-btn {\n  display: flex;\n\n  #{$focus} {\n    [data-icon] {\n      fill: color('action');\n    }\n  }\n\n  .nav-header & {\n    // better alignment with open to account for double scrolls\n    margin-right: size('shim');\n  }\n}\n","// Footer\n// ======\n\n[data-layout='footer'] {\n  font-size: size('xsmall');\n  padding-bottom: size('quarter-shim');\n  padding-top: size('quarter-shim');\n\n  @include before('') {\n    border-top: 1px solid color('border-light');\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n  }\n\n  p {\n    margin-bottom: 0;\n    padding-top: size('half-shim');\n  }\n}\n"]}